{"ast":null,"code":"import { MathUtils } from './MathUtils.js';\nimport { Quaternion } from './Quaternion.js';\n\nclass Vector3 {\n  constructor() {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n  set(x, y, z) {\n    if (z === undefined) z = this.z; // sprite.scale.set(x,y)\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  }\n\n  setScalar(scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n    return this;\n  }\n\n  setX(x) {\n    this.x = x;\n    return this;\n  }\n\n  setY(y) {\n    this.y = y;\n    return this;\n  }\n\n  setZ(z) {\n    this.z = z;\n    return this;\n  }\n\n  setComponent(index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      case 2:\n        this.z = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n\n    return this;\n  }\n\n  getComponent(index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      case 2:\n        return this.z;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  }\n\n  clone() {\n    return new this.constructor(this.x, this.y, this.z);\n  }\n\n  copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    return this;\n  }\n\n  add(v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    return this;\n  }\n\n  addScalar(s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    return this;\n  }\n\n  addVectors(a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    return this;\n  }\n\n  addScaledVector(v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    return this;\n  }\n\n  sub(v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    return this;\n  }\n\n  subScalar(s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    return this;\n  }\n\n  subVectors(a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    return this;\n  }\n\n  multiply(v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n      return this.multiplyVectors(v, w);\n    }\n\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n    return this;\n  }\n\n  multiplyScalar(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n    return this;\n  }\n\n  multiplyVectors(a, b) {\n    this.x = a.x * b.x;\n    this.y = a.y * b.y;\n    this.z = a.z * b.z;\n    return this;\n  }\n\n  applyEuler(euler) {\n    if (!(euler && euler.isEuler)) {\n      console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\n    }\n\n    return this.applyQuaternion(_quaternion.setFromEuler(euler));\n  }\n\n  applyAxisAngle(axis, angle) {\n    return this.applyQuaternion(_quaternion.setFromAxisAngle(axis, angle));\n  }\n\n  applyMatrix3(m) {\n    const x = this.x,\n          y = this.y,\n          z = this.z;\n    const e = m.elements;\n    this.x = e[0] * x + e[3] * y + e[6] * z;\n    this.y = e[1] * x + e[4] * y + e[7] * z;\n    this.z = e[2] * x + e[5] * y + e[8] * z;\n    return this;\n  }\n\n  applyNormalMatrix(m) {\n    return this.applyMatrix3(m).normalize();\n  }\n\n  applyMatrix4(m) {\n    const x = this.x,\n          y = this.y,\n          z = this.z;\n    const e = m.elements;\n    const w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n    this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n    this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n    this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n    return this;\n  }\n\n  applyQuaternion(q) {\n    const x = this.x,\n          y = this.y,\n          z = this.z;\n    const qx = q.x,\n          qy = q.y,\n          qz = q.z,\n          qw = q.w; // calculate quat * vector\n\n    const ix = qw * x + qy * z - qz * y;\n    const iy = qw * y + qz * x - qx * z;\n    const iz = qw * z + qx * y - qy * x;\n    const iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n    this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return this;\n  }\n\n  project(camera) {\n    return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\n  }\n\n  unproject(camera) {\n    return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\n  }\n\n  transformDirection(m) {\n    // input: THREE.Matrix4 affine matrix\n    // vector interpreted as a direction\n    const x = this.x,\n          y = this.y,\n          z = this.z;\n    const e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z;\n    this.y = e[1] * x + e[5] * y + e[9] * z;\n    this.z = e[2] * x + e[6] * y + e[10] * z;\n    return this.normalize();\n  }\n\n  divide(v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    this.z /= v.z;\n    return this;\n  }\n\n  divideScalar(scalar) {\n    return this.multiplyScalar(1 / scalar);\n  }\n\n  min(v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n    return this;\n  }\n\n  max(v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n    return this;\n  }\n\n  clamp(min, max) {\n    // assumes min < max, componentwise\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    this.z = Math.max(min.z, Math.min(max.z, this.z));\n    return this;\n  }\n\n  clampScalar(minVal, maxVal) {\n    this.x = Math.max(minVal, Math.min(maxVal, this.x));\n    this.y = Math.max(minVal, Math.min(maxVal, this.y));\n    this.z = Math.max(minVal, Math.min(maxVal, this.z));\n    return this;\n  }\n\n  clampLength(min, max) {\n    const length = this.length();\n    return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n  }\n\n  floor() {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    return this;\n  }\n\n  ceil() {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    return this;\n  }\n\n  round() {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    return this;\n  }\n\n  roundToZero() {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n    return this;\n  }\n\n  negate() {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    return this;\n  }\n\n  dot(v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  } // TODO lengthSquared?\n\n\n  lengthSq() {\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  }\n\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  }\n\n  manhattanLength() {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n  }\n\n  normalize() {\n    return this.divideScalar(this.length() || 1);\n  }\n\n  setLength(length) {\n    return this.normalize().multiplyScalar(length);\n  }\n\n  lerp(v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    return this;\n  }\n\n  lerpVectors(v1, v2, alpha) {\n    this.x = v1.x + (v2.x - v1.x) * alpha;\n    this.y = v1.y + (v2.y - v1.y) * alpha;\n    this.z = v1.z + (v2.z - v1.z) * alpha;\n    return this;\n  }\n\n  cross(v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n      return this.crossVectors(v, w);\n    }\n\n    return this.crossVectors(this, v);\n  }\n\n  crossVectors(a, b) {\n    const ax = a.x,\n          ay = a.y,\n          az = a.z;\n    const bx = b.x,\n          by = b.y,\n          bz = b.z;\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n    return this;\n  }\n\n  projectOnVector(v) {\n    const denominator = v.lengthSq();\n    if (denominator === 0) return this.set(0, 0, 0);\n    const scalar = v.dot(this) / denominator;\n    return this.copy(v).multiplyScalar(scalar);\n  }\n\n  projectOnPlane(planeNormal) {\n    _vector.copy(this).projectOnVector(planeNormal);\n\n    return this.sub(_vector);\n  }\n\n  reflect(normal) {\n    // reflect incident vector off plane orthogonal to normal\n    // normal is assumed to have unit length\n    return this.sub(_vector.copy(normal).multiplyScalar(2 * this.dot(normal)));\n  }\n\n  angleTo(v) {\n    const denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\n    if (denominator === 0) return Math.PI / 2;\n    const theta = this.dot(v) / denominator; // clamp, to handle numerical problems\n\n    return Math.acos(MathUtils.clamp(theta, -1, 1));\n  }\n\n  distanceTo(v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  }\n\n  distanceToSquared(v) {\n    const dx = this.x - v.x,\n          dy = this.y - v.y,\n          dz = this.z - v.z;\n    return dx * dx + dy * dy + dz * dz;\n  }\n\n  manhattanDistanceTo(v) {\n    return Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n  }\n\n  setFromSpherical(s) {\n    return this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n  }\n\n  setFromSphericalCoords(radius, phi, theta) {\n    const sinPhiRadius = Math.sin(phi) * radius;\n    this.x = sinPhiRadius * Math.sin(theta);\n    this.y = Math.cos(phi) * radius;\n    this.z = sinPhiRadius * Math.cos(theta);\n    return this;\n  }\n\n  setFromCylindrical(c) {\n    return this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n  }\n\n  setFromCylindricalCoords(radius, theta, y) {\n    this.x = radius * Math.sin(theta);\n    this.y = y;\n    this.z = radius * Math.cos(theta);\n    return this;\n  }\n\n  setFromMatrixPosition(m) {\n    const e = m.elements;\n    this.x = e[12];\n    this.y = e[13];\n    this.z = e[14];\n    return this;\n  }\n\n  setFromMatrixScale(m) {\n    const sx = this.setFromMatrixColumn(m, 0).length();\n    const sy = this.setFromMatrixColumn(m, 1).length();\n    const sz = this.setFromMatrixColumn(m, 2).length();\n    this.x = sx;\n    this.y = sy;\n    this.z = sz;\n    return this;\n  }\n\n  setFromMatrixColumn(m, index) {\n    return this.fromArray(m.elements, index * 4);\n  }\n\n  setFromMatrix3Column(m, index) {\n    return this.fromArray(m.elements, index * 3);\n  }\n\n  equals(v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z;\n  }\n\n  fromArray(array) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    return this;\n  }\n\n  toArray() {\n    let array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    return array;\n  }\n\n  fromBufferAttribute(attribute, index, offset) {\n    if (offset !== undefined) {\n      console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');\n    }\n\n    this.x = attribute.getX(index);\n    this.y = attribute.getY(index);\n    this.z = attribute.getZ(index);\n    return this;\n  }\n\n  random() {\n    this.x = Math.random();\n    this.y = Math.random();\n    this.z = Math.random();\n    return this;\n  }\n\n}\n\nVector3.prototype.isVector3 = true;\n\nconst _vector = /*@__PURE__*/new Vector3();\n\nconst _quaternion = /*@__PURE__*/new Quaternion();\n\nexport { Vector3 };","map":{"version":3,"names":["MathUtils","Quaternion","Vector3","constructor","x","y","z","set","undefined","setScalar","scalar","setX","setY","setZ","setComponent","index","value","Error","getComponent","clone","copy","v","add","w","console","warn","addVectors","addScalar","s","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyVectors","multiplyScalar","applyEuler","euler","isEuler","error","applyQuaternion","_quaternion","setFromEuler","applyAxisAngle","axis","angle","setFromAxisAngle","applyMatrix3","m","e","elements","applyNormalMatrix","normalize","applyMatrix4","q","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","divide","divideScalar","min","Math","max","clamp","clampScalar","minVal","maxVal","clampLength","length","floor","ceil","round","roundToZero","negate","dot","lengthSq","sqrt","manhattanLength","abs","setLength","lerp","alpha","lerpVectors","v1","v2","cross","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","denominator","projectOnPlane","planeNormal","_vector","reflect","normal","angleTo","PI","theta","acos","distanceTo","distanceToSquared","dx","dy","dz","manhattanDistanceTo","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","sin","cos","setFromCylindrical","c","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","fromArray","setFromMatrix3Column","equals","array","offset","toArray","fromBufferAttribute","attribute","getX","getY","getZ","random","prototype","isVector3"],"sources":["/Users/sam/Documents/CakeProject/node_modules/three/src/math/Vector3.js"],"sourcesContent":["import { MathUtils } from './MathUtils.js';\nimport { Quaternion } from './Quaternion.js';\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\treturn this.applyQuaternion( _quaternion.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( MathUtils.clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nVector3.prototype.isVector3 = true;\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\n\nexport { Vector3 };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
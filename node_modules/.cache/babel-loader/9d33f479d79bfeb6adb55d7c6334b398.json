{"ast":null,"code":"import React,{useEffect}from\"react\";import{connect}from\"react-redux\";import{PropTypes}from\"prop-types\";import{Grid,IconButton,Avatar,Typography}from\"@material-ui/core\";import{makeStyles}from\"@material-ui/core/styles\";import{setCurrentMaterialData,setSelectedMeshMaterial}from\"../../redux/actions/MaterialActions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const useStyles=makeStyles(theme=>({root:{display:\"flex\",\"& > *\":{margin:theme.spacing(1)}}}));const useAvatarStyles=makeStyles(theme=>({root:{width:60,height:60,border:\"3px solid\"}}));const MaterialSelector=props=>{var _nodeStore$currentNod;const classes=useStyles();const classesAvatar=useAvatarStyles();const{materialStore,meshStore,nodeStore,productStore,setCurrentMaterialData,setSelectedMeshMaterial}=props;useEffect(()=>{setCurrentMaterialData(null);},[nodeStore.currentNodeData]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Grid,{item:true,className:classes.root,children:nodeStore.currentNodeData?/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:\"Choose design\"}):/*#__PURE__*/_jsx(_Fragment,{})}),/*#__PURE__*/_jsx(Grid,{item:true,className:classes.root,children:(_nodeStore$currentNod=nodeStore.currentNodeData)===null||_nodeStore$currentNod===void 0?void 0:_nodeStore$currentNod.candidateMaterials.map(materialData=>{return/*#__PURE__*/_jsx(IconButton,{size:\"small\",color:materialStore.selectedMeshMaterial===materialData.name?\"primary\":\"default\",onClick:()=>{if(materialStore.selectedMeshMaterial!==materialData.name){setSelectedMeshMaterial(materialData.name);setCurrentMaterialData(materialData.path);}},children:/*#__PURE__*/_jsx(Avatar,{alt:materialData.name,title:materialData.name,src:materialData.thumbnail,classes:classesAvatar})},materialData.name);})})]});};const mapStateToProps=state=>({materialStore:state.materialStore,meshStore:state.meshStore,nodeStore:state.nodeStore,productStore:state.productStore,setCurrentMaterialData:PropTypes.func.isRequired,setSelectedMeshMaterial:PropTypes.func.isRequired});export default connect(mapStateToProps,{setCurrentMaterialData,setSelectedMeshMaterial})(MaterialSelector);","map":{"version":3,"names":["React","useEffect","connect","PropTypes","Grid","IconButton","Avatar","Typography","makeStyles","setCurrentMaterialData","setSelectedMeshMaterial","useStyles","theme","root","display","margin","spacing","useAvatarStyles","width","height","border","MaterialSelector","props","classes","classesAvatar","materialStore","meshStore","nodeStore","productStore","currentNodeData","candidateMaterials","map","materialData","selectedMeshMaterial","name","path","thumbnail","mapStateToProps","state","func","isRequired"],"sources":["/Users/sam/Documents/CakeProject/src/components/MaterialSelector/MaterialSelector.js"],"sourcesContent":["import React, {useEffect} from \"react\"\nimport {connect} from \"react-redux\"\nimport {PropTypes} from \"prop-types\"\nimport {Grid, IconButton, Avatar, Typography} from \"@material-ui/core\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {\n  setCurrentMaterialData,\n  setSelectedMeshMaterial\n} from \"../../redux/actions/MaterialActions\"\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  }\n}))\n\nconst useAvatarStyles = makeStyles(theme => ({\n  root: {\n    width: 60,\n    height: 60,\n    border: \"3px solid\"\n  }\n}))\n\nconst MaterialSelector = props => {\n  const classes = useStyles()\n  const classesAvatar = useAvatarStyles()\n\n  const {\n    materialStore,\n    meshStore,\n    nodeStore,\n    productStore,\n    setCurrentMaterialData,\n    setSelectedMeshMaterial\n  } = props\n\n  useEffect(() => {\n    setCurrentMaterialData(null)\n  }, [nodeStore.currentNodeData])\n\n  return (\n    <>\n      <Grid item className={classes.root}>\n        {nodeStore.currentNodeData ? (\n          <Typography variant=\"h4\">Choose design</Typography>\n        ) : (\n          <></>\n        )}\n      </Grid>\n      <Grid item className={classes.root}>\n        {nodeStore.currentNodeData?.candidateMaterials.map(materialData => {\n          return (\n            <IconButton\n              key={materialData.name}\n              size=\"small\"\n              color={\n                materialStore.selectedMeshMaterial === materialData.name\n                  ? \"primary\"\n                  : \"default\"\n              }\n              onClick={() => {\n                if (materialStore.selectedMeshMaterial !== materialData.name) {\n                  setSelectedMeshMaterial(materialData.name)\n                  setCurrentMaterialData(materialData.path)\n                }\n              }}\n            >\n              <Avatar\n                alt={materialData.name}\n                title={materialData.name}\n                src={materialData.thumbnail}\n                classes={classesAvatar}\n              />\n            </IconButton>\n          )\n        })}\n      </Grid>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  materialStore: state.materialStore,\n  meshStore: state.meshStore,\n  nodeStore: state.nodeStore,\n  productStore: state.productStore,\n  setCurrentMaterialData: PropTypes.func.isRequired,\n  setSelectedMeshMaterial: PropTypes.func.isRequired\n})\n\nexport default connect(mapStateToProps, {\n  setCurrentMaterialData,\n  setSelectedMeshMaterial\n})(MaterialSelector)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
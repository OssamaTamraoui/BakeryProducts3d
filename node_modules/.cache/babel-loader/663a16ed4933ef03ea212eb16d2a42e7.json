{"ast":null,"code":"import{SELECTED_MESH_MATERIAL,SET_CURRENT_MATERIAL_DATA}from\"../StoreConstants\";export function setCurrentMaterialData(path){return dispatch=>{if(path){fetch(path).then(response=>response.json()).then(data=>{dispatch({type:SET_CURRENT_MATERIAL_DATA,payload:data});});}else{dispatch({type:SET_CURRENT_MATERIAL_DATA,payload:null});}};}export function setSelectedMeshMaterial(data){return dispatch=>{dispatch({type:SELECTED_MESH_MATERIAL,payload:data});};}","map":{"version":3,"names":["SELECTED_MESH_MATERIAL","SET_CURRENT_MATERIAL_DATA","setCurrentMaterialData","path","dispatch","fetch","then","response","json","data","type","payload","setSelectedMeshMaterial"],"sources":["/Users/sam/Documents/CakeProject/src/redux/actions/MaterialActions.js"],"sourcesContent":["import {\n  SELECTED_MESH_MATERIAL,\n  SET_CURRENT_MATERIAL_DATA\n} from \"../StoreConstants\"\n\nexport function setCurrentMaterialData(path) {\n  return dispatch => {\n    if (path) {\n      fetch(path)\n        .then(response => response.json())\n        .then(data => {\n          dispatch({\n            type: SET_CURRENT_MATERIAL_DATA,\n            payload: data\n          })\n        })\n    } else {\n      dispatch({\n        type: SET_CURRENT_MATERIAL_DATA,\n        payload: null\n      })\n    }\n  }\n}\n\nexport function setSelectedMeshMaterial(data) {\n  return dispatch => {\n    dispatch({\n      type: SELECTED_MESH_MATERIAL,\n      payload: data\n    })\n  }\n}\n"],"mappings":"AAAA,OACEA,sBADF,CAEEC,yBAFF,KAGO,mBAHP,CAKA,MAAO,SAASC,uBAAT,CAAgCC,IAAhC,CAAsC,CAC3C,MAAOC,SAAQ,EAAI,CACjB,GAAID,IAAJ,CAAU,CACRE,KAAK,CAACF,IAAD,CAAL,CACGG,IADH,CACQC,QAAQ,EAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,EAAI,CACZL,QAAQ,CAAC,CACPM,IAAI,CAAET,yBADC,CAEPU,OAAO,CAAEF,IAFF,CAAD,CAAR,CAID,CAPH,EAQD,CATD,IASO,CACLL,QAAQ,CAAC,CACPM,IAAI,CAAET,yBADC,CAEPU,OAAO,CAAE,IAFF,CAAD,CAAR,CAID,CACF,CAhBD,CAiBD,CAED,MAAO,SAASC,wBAAT,CAAiCH,IAAjC,CAAuC,CAC5C,MAAOL,SAAQ,EAAI,CACjBA,QAAQ,CAAC,CACPM,IAAI,CAAEV,sBADC,CAEPW,OAAO,CAAEF,IAFF,CAAD,CAAR,CAID,CALD,CAMD"},"metadata":{},"sourceType":"module"}
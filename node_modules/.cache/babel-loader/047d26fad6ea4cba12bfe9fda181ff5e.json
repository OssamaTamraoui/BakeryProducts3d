{"ast":null,"code":"import { EventDispatcher } from '../core/EventDispatcher.js';\nimport { MirroredRepeatWrapping, ClampToEdgeWrapping, RepeatWrapping, LinearEncoding, UnsignedByteType, RGBAFormat, LinearMipmapLinearFilter, LinearFilter, UVMapping } from '../constants.js';\nimport { MathUtils } from '../math/MathUtils.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { ImageUtils } from '../extras/ImageUtils.js';\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n  constructor() {\n    let image = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Texture.DEFAULT_IMAGE;\n    let mapping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Texture.DEFAULT_MAPPING;\n    let wrapS = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ClampToEdgeWrapping;\n    let wrapT = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ClampToEdgeWrapping;\n    let magFilter = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : LinearFilter;\n    let minFilter = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : LinearMipmapLinearFilter;\n    let format = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : RGBAFormat;\n    let type = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : UnsignedByteType;\n    let anisotropy = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 1;\n    let encoding = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : LinearEncoding;\n    super();\n    Object.defineProperty(this, 'id', {\n      value: textureId++\n    });\n    this.uuid = MathUtils.generateUUID();\n    this.name = '';\n    this.image = image;\n    this.mipmaps = [];\n    this.mapping = mapping;\n    this.wrapS = wrapS;\n    this.wrapT = wrapT;\n    this.magFilter = magFilter;\n    this.minFilter = minFilter;\n    this.anisotropy = anisotropy;\n    this.format = format;\n    this.internalFormat = null;\n    this.type = type;\n    this.offset = new Vector2(0, 0);\n    this.repeat = new Vector2(1, 1);\n    this.center = new Vector2(0, 0);\n    this.rotation = 0;\n    this.matrixAutoUpdate = true;\n    this.matrix = new Matrix3();\n    this.generateMipmaps = true;\n    this.premultiplyAlpha = false;\n    this.flipY = true;\n    this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n    // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n    //\n    // Also changing the encoding after already used by a Material will not automatically make the Material\n    // update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n    this.encoding = encoding;\n    this.version = 0;\n    this.onUpdate = null;\n  }\n\n  updateMatrix() {\n    this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  copy(source) {\n    this.name = source.name;\n    this.image = source.image;\n    this.mipmaps = source.mipmaps.slice(0);\n    this.mapping = source.mapping;\n    this.wrapS = source.wrapS;\n    this.wrapT = source.wrapT;\n    this.magFilter = source.magFilter;\n    this.minFilter = source.minFilter;\n    this.anisotropy = source.anisotropy;\n    this.format = source.format;\n    this.internalFormat = source.internalFormat;\n    this.type = source.type;\n    this.offset.copy(source.offset);\n    this.repeat.copy(source.repeat);\n    this.center.copy(source.center);\n    this.rotation = source.rotation;\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    this.matrix.copy(source.matrix);\n    this.generateMipmaps = source.generateMipmaps;\n    this.premultiplyAlpha = source.premultiplyAlpha;\n    this.flipY = source.flipY;\n    this.unpackAlignment = source.unpackAlignment;\n    this.encoding = source.encoding;\n    return this;\n  }\n\n  toJSON(meta) {\n    const isRootObject = meta === undefined || typeof meta === 'string';\n\n    if (!isRootObject && meta.textures[this.uuid] !== undefined) {\n      return meta.textures[this.uuid];\n    }\n\n    const output = {\n      metadata: {\n        version: 4.5,\n        type: 'Texture',\n        generator: 'Texture.toJSON'\n      },\n      uuid: this.uuid,\n      name: this.name,\n      mapping: this.mapping,\n      repeat: [this.repeat.x, this.repeat.y],\n      offset: [this.offset.x, this.offset.y],\n      center: [this.center.x, this.center.y],\n      rotation: this.rotation,\n      wrap: [this.wrapS, this.wrapT],\n      format: this.format,\n      type: this.type,\n      encoding: this.encoding,\n      minFilter: this.minFilter,\n      magFilter: this.magFilter,\n      anisotropy: this.anisotropy,\n      flipY: this.flipY,\n      premultiplyAlpha: this.premultiplyAlpha,\n      unpackAlignment: this.unpackAlignment\n    };\n\n    if (this.image !== undefined) {\n      // TODO: Move to THREE.Image\n      const image = this.image;\n\n      if (image.uuid === undefined) {\n        image.uuid = MathUtils.generateUUID(); // UGH\n      }\n\n      if (!isRootObject && meta.images[image.uuid] === undefined) {\n        let url;\n\n        if (Array.isArray(image)) {\n          // process array of images e.g. CubeTexture\n          url = [];\n\n          for (let i = 0, l = image.length; i < l; i++) {\n            // check cube texture with data textures\n            if (image[i].isDataTexture) {\n              url.push(serializeImage(image[i].image));\n            } else {\n              url.push(serializeImage(image[i]));\n            }\n          }\n        } else {\n          // process single image\n          url = serializeImage(image);\n        }\n\n        meta.images[image.uuid] = {\n          uuid: image.uuid,\n          url: url\n        };\n      }\n\n      output.image = image.uuid;\n    }\n\n    if (!isRootObject) {\n      meta.textures[this.uuid] = output;\n    }\n\n    return output;\n  }\n\n  dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n\n  transformUv(uv) {\n    if (this.mapping !== UVMapping) return uv;\n    uv.applyMatrix3(this.matrix);\n\n    if (uv.x < 0 || uv.x > 1) {\n      switch (this.wrapS) {\n        case RepeatWrapping:\n          uv.x = uv.x - Math.floor(uv.x);\n          break;\n\n        case ClampToEdgeWrapping:\n          uv.x = uv.x < 0 ? 0 : 1;\n          break;\n\n        case MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n            uv.x = Math.ceil(uv.x) - uv.x;\n          } else {\n            uv.x = uv.x - Math.floor(uv.x);\n          }\n\n          break;\n      }\n    }\n\n    if (uv.y < 0 || uv.y > 1) {\n      switch (this.wrapT) {\n        case RepeatWrapping:\n          uv.y = uv.y - Math.floor(uv.y);\n          break;\n\n        case ClampToEdgeWrapping:\n          uv.y = uv.y < 0 ? 0 : 1;\n          break;\n\n        case MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n            uv.y = Math.ceil(uv.y) - uv.y;\n          } else {\n            uv.y = uv.y - Math.floor(uv.y);\n          }\n\n          break;\n      }\n    }\n\n    if (this.flipY) {\n      uv.y = 1 - uv.y;\n    }\n\n    return uv;\n  }\n\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  }\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.prototype.isTexture = true;\n\nfunction serializeImage(image) {\n  if (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n    // default images\n    return ImageUtils.getDataURL(image);\n  } else {\n    if (image.data) {\n      // images of DataTexture\n      return {\n        data: Array.prototype.slice.call(image.data),\n        width: image.width,\n        height: image.height,\n        type: image.data.constructor.name\n      };\n    } else {\n      console.warn('THREE.Texture: Unable to serialize Texture.');\n      return {};\n    }\n  }\n}\n\nexport { Texture };","map":{"version":3,"names":["EventDispatcher","MirroredRepeatWrapping","ClampToEdgeWrapping","RepeatWrapping","LinearEncoding","UnsignedByteType","RGBAFormat","LinearMipmapLinearFilter","LinearFilter","UVMapping","MathUtils","Vector2","Matrix3","ImageUtils","textureId","Texture","constructor","image","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","type","anisotropy","encoding","Object","defineProperty","value","uuid","generateUUID","name","mipmaps","internalFormat","offset","repeat","center","rotation","matrixAutoUpdate","matrix","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","updateMatrix","setUvTransform","x","y","clone","copy","source","slice","toJSON","meta","isRootObject","undefined","textures","output","metadata","generator","wrap","images","url","Array","isArray","i","l","length","isDataTexture","push","serializeImage","dispose","dispatchEvent","transformUv","uv","applyMatrix3","Math","floor","abs","ceil","needsUpdate","prototype","isTexture","HTMLImageElement","HTMLCanvasElement","ImageBitmap","getDataURL","data","call","width","height","console","warn"],"sources":["/Users/sam/Documents/CakeProject/node_modules/three/src/textures/Texture.js"],"sourcesContent":["import { EventDispatcher } from '../core/EventDispatcher.js';\nimport {\n\tMirroredRepeatWrapping,\n\tClampToEdgeWrapping,\n\tRepeatWrapping,\n\tLinearEncoding,\n\tUnsignedByteType,\n\tRGBAFormat,\n\tLinearMipmapLinearFilter,\n\tLinearFilter,\n\tUVMapping\n} from '../constants.js';\nimport { MathUtils } from '../math/MathUtils.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { ImageUtils } from '../extras/ImageUtils.js';\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.image = image;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tconst image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = MathUtils.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tlet url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( let i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t// check cube texture with data textures\n\n\t\t\t\t\t\tif ( image[ i ].isDataTexture ) {\n\n\t\t\t\t\t\t\turl.push( serializeImage( image[ i ].image ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\turl.push( serializeImage( image[ i ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = serializeImage( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype.isTexture = true;\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.prototype.slice.call( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nexport { Texture };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
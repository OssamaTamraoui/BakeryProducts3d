{"ast":null,"code":"import { EventDispatcher } from '../core/EventDispatcher.js';\nimport { Texture } from '../textures/Texture.js';\nimport { LinearFilter } from '../constants.js';\nimport { Vector4 } from '../math/Vector4.js';\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\n\nclass WebGLRenderTarget extends EventDispatcher {\n  constructor(width, height, options) {\n    super();\n    this.width = width;\n    this.height = height;\n    this.depth = 1;\n    this.scissor = new Vector4(0, 0, width, height);\n    this.scissorTest = false;\n    this.viewport = new Vector4(0, 0, width, height);\n    options = options || {};\n    this.texture = new Texture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n    this.texture.image = {};\n    this.texture.image.width = width;\n    this.texture.image.height = height;\n    this.texture.image.depth = 1;\n    this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n    this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n    this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n    this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n    this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n  }\n\n  setTexture(texture) {\n    texture.image = {\n      width: this.width,\n      height: this.height,\n      depth: this.depth\n    };\n    this.texture = texture;\n  }\n\n  setSize(width, height) {\n    let depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n    if (this.width !== width || this.height !== height || this.depth !== depth) {\n      this.width = width;\n      this.height = height;\n      this.depth = depth;\n      this.texture.image.width = width;\n      this.texture.image.height = height;\n      this.texture.image.depth = depth;\n      this.dispose();\n    }\n\n    this.viewport.set(0, 0, width, height);\n    this.scissor.set(0, 0, width, height);\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  copy(source) {\n    this.width = source.width;\n    this.height = source.height;\n    this.depth = source.depth;\n    this.viewport.copy(source.viewport);\n    this.texture = source.texture.clone();\n    this.depthBuffer = source.depthBuffer;\n    this.stencilBuffer = source.stencilBuffer;\n    this.depthTexture = source.depthTexture;\n    return this;\n  }\n\n  dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n\n}\n\nWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\nexport { WebGLRenderTarget };","map":{"version":3,"names":["EventDispatcher","Texture","LinearFilter","Vector4","WebGLRenderTarget","constructor","width","height","options","depth","scissor","scissorTest","viewport","texture","undefined","mapping","wrapS","wrapT","magFilter","minFilter","format","type","anisotropy","encoding","image","generateMipmaps","depthBuffer","stencilBuffer","depthTexture","setTexture","setSize","dispose","set","clone","copy","source","dispatchEvent","prototype","isWebGLRenderTarget"],"sources":["/Users/sam/Documents/CakeProject/node_modules/three/src/renderers/WebGLRenderTarget.js"],"sourcesContent":["import { EventDispatcher } from '../core/EventDispatcher.js';\nimport { Texture } from '../textures/Texture.js';\nimport { LinearFilter } from '../constants.js';\nimport { Vector4 } from '../math/Vector4.js';\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width, height, options ) {\n\n\t\tsuper();\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tthis.texture = new Texture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.texture.image = {};\n\t\tthis.texture.image.width = width;\n\t\tthis.texture.image.height = height;\n\t\tthis.texture.image.depth = 1;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t}\n\n\tsetTexture( texture ) {\n\n\t\ttexture.image = {\n\t\t\twidth: this.width,\n\t\t\theight: this.height,\n\t\t\tdepth: this.depth\n\t\t};\n\n\t\tthis.texture = texture;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\n\nexport { WebGLRenderTarget };\n"],"mappings":"AAAA,SAASA,eAAT,QAAgC,4BAAhC;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,iBAAN,SAAgCJ,eAAhC,CAAgD;EAE/CK,WAAW,CAAEC,KAAF,EAASC,MAAT,EAAiBC,OAAjB,EAA2B;IAErC;IAEA,KAAKF,KAAL,GAAaA,KAAb;IACA,KAAKC,MAAL,GAAcA,MAAd;IACA,KAAKE,KAAL,GAAa,CAAb;IAEA,KAAKC,OAAL,GAAe,IAAIP,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBG,KAAnB,EAA0BC,MAA1B,CAAf;IACA,KAAKI,WAAL,GAAmB,KAAnB;IAEA,KAAKC,QAAL,GAAgB,IAAIT,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBG,KAAnB,EAA0BC,MAA1B,CAAhB;IAEAC,OAAO,GAAGA,OAAO,IAAI,EAArB;IAEA,KAAKK,OAAL,GAAe,IAAIZ,OAAJ,CAAaa,SAAb,EAAwBN,OAAO,CAACO,OAAhC,EAAyCP,OAAO,CAACQ,KAAjD,EAAwDR,OAAO,CAACS,KAAhE,EAAuET,OAAO,CAACU,SAA/E,EAA0FV,OAAO,CAACW,SAAlG,EAA6GX,OAAO,CAACY,MAArH,EAA6HZ,OAAO,CAACa,IAArI,EAA2Ib,OAAO,CAACc,UAAnJ,EAA+Jd,OAAO,CAACe,QAAvK,CAAf;IAEA,KAAKV,OAAL,CAAaW,KAAb,GAAqB,EAArB;IACA,KAAKX,OAAL,CAAaW,KAAb,CAAmBlB,KAAnB,GAA2BA,KAA3B;IACA,KAAKO,OAAL,CAAaW,KAAb,CAAmBjB,MAAnB,GAA4BA,MAA5B;IACA,KAAKM,OAAL,CAAaW,KAAb,CAAmBf,KAAnB,GAA2B,CAA3B;IAEA,KAAKI,OAAL,CAAaY,eAAb,GAA+BjB,OAAO,CAACiB,eAAR,KAA4BX,SAA5B,GAAwCN,OAAO,CAACiB,eAAhD,GAAkE,KAAjG;IACA,KAAKZ,OAAL,CAAaM,SAAb,GAAyBX,OAAO,CAACW,SAAR,KAAsBL,SAAtB,GAAkCN,OAAO,CAACW,SAA1C,GAAsDjB,YAA/E;IAEA,KAAKwB,WAAL,GAAmBlB,OAAO,CAACkB,WAAR,KAAwBZ,SAAxB,GAAoCN,OAAO,CAACkB,WAA5C,GAA0D,IAA7E;IACA,KAAKC,aAAL,GAAqBnB,OAAO,CAACmB,aAAR,KAA0Bb,SAA1B,GAAsCN,OAAO,CAACmB,aAA9C,GAA8D,KAAnF;IACA,KAAKC,YAAL,GAAoBpB,OAAO,CAACoB,YAAR,KAAyBd,SAAzB,GAAqCN,OAAO,CAACoB,YAA7C,GAA4D,IAAhF;EAEA;;EAEDC,UAAU,CAAEhB,OAAF,EAAY;IAErBA,OAAO,CAACW,KAAR,GAAgB;MACflB,KAAK,EAAE,KAAKA,KADG;MAEfC,MAAM,EAAE,KAAKA,MAFE;MAGfE,KAAK,EAAE,KAAKA;IAHG,CAAhB;IAMA,KAAKI,OAAL,GAAeA,OAAf;EAEA;;EAEDiB,OAAO,CAAExB,KAAF,EAASC,MAAT,EAA6B;IAAA,IAAZE,KAAY,uEAAJ,CAAI;;IAEnC,IAAK,KAAKH,KAAL,KAAeA,KAAf,IAAwB,KAAKC,MAAL,KAAgBA,MAAxC,IAAkD,KAAKE,KAAL,KAAeA,KAAtE,EAA8E;MAE7E,KAAKH,KAAL,GAAaA,KAAb;MACA,KAAKC,MAAL,GAAcA,MAAd;MACA,KAAKE,KAAL,GAAaA,KAAb;MAEA,KAAKI,OAAL,CAAaW,KAAb,CAAmBlB,KAAnB,GAA2BA,KAA3B;MACA,KAAKO,OAAL,CAAaW,KAAb,CAAmBjB,MAAnB,GAA4BA,MAA5B;MACA,KAAKM,OAAL,CAAaW,KAAb,CAAmBf,KAAnB,GAA2BA,KAA3B;MAEA,KAAKsB,OAAL;IAEA;;IAED,KAAKnB,QAAL,CAAcoB,GAAd,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB1B,KAAzB,EAAgCC,MAAhC;IACA,KAAKG,OAAL,CAAasB,GAAb,CAAkB,CAAlB,EAAqB,CAArB,EAAwB1B,KAAxB,EAA+BC,MAA/B;EAEA;;EAED0B,KAAK,GAAG;IAEP,OAAO,IAAI,KAAK5B,WAAT,GAAuB6B,IAAvB,CAA6B,IAA7B,CAAP;EAEA;;EAEDA,IAAI,CAAEC,MAAF,EAAW;IAEd,KAAK7B,KAAL,GAAa6B,MAAM,CAAC7B,KAApB;IACA,KAAKC,MAAL,GAAc4B,MAAM,CAAC5B,MAArB;IACA,KAAKE,KAAL,GAAa0B,MAAM,CAAC1B,KAApB;IAEA,KAAKG,QAAL,CAAcsB,IAAd,CAAoBC,MAAM,CAACvB,QAA3B;IAEA,KAAKC,OAAL,GAAesB,MAAM,CAACtB,OAAP,CAAeoB,KAAf,EAAf;IAEA,KAAKP,WAAL,GAAmBS,MAAM,CAACT,WAA1B;IACA,KAAKC,aAAL,GAAqBQ,MAAM,CAACR,aAA5B;IACA,KAAKC,YAAL,GAAoBO,MAAM,CAACP,YAA3B;IAEA,OAAO,IAAP;EAEA;;EAEDG,OAAO,GAAG;IAET,KAAKK,aAAL,CAAoB;MAAEf,IAAI,EAAE;IAAR,CAApB;EAEA;;AA9F8C;;AAkGhDjB,iBAAiB,CAACiC,SAAlB,CAA4BC,mBAA5B,GAAkD,IAAlD;AAEA,SAASlC,iBAAT"},"metadata":{},"sourceType":"module"}
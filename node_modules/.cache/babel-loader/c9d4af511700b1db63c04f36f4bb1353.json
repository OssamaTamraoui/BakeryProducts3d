{"ast":null,"code":"import { EventDispatcher } from '../core/EventDispatcher.js';\nimport { FrontSide, FlatShading, NormalBlending, LessEqualDepth, AddEquation, OneMinusSrcAlphaFactor, SrcAlphaFactor, AlwaysStencilFunc, KeepStencilOp } from '../constants.js';\nimport { MathUtils } from '../math/MathUtils.js';\nlet materialId = 0;\n\nfunction Material() {\n  Object.defineProperty(this, 'id', {\n    value: materialId++\n  });\n  this.uuid = MathUtils.generateUUID();\n  this.name = '';\n  this.type = 'Material';\n  this.fog = true;\n  this.blending = NormalBlending;\n  this.side = FrontSide;\n  this.vertexColors = false;\n  this.opacity = 1;\n  this.transparent = false;\n  this.blendSrc = SrcAlphaFactor;\n  this.blendDst = OneMinusSrcAlphaFactor;\n  this.blendEquation = AddEquation;\n  this.blendSrcAlpha = null;\n  this.blendDstAlpha = null;\n  this.blendEquationAlpha = null;\n  this.depthFunc = LessEqualDepth;\n  this.depthTest = true;\n  this.depthWrite = true;\n  this.stencilWriteMask = 0xff;\n  this.stencilFunc = AlwaysStencilFunc;\n  this.stencilRef = 0;\n  this.stencilFuncMask = 0xff;\n  this.stencilFail = KeepStencilOp;\n  this.stencilZFail = KeepStencilOp;\n  this.stencilZPass = KeepStencilOp;\n  this.stencilWrite = false;\n  this.clippingPlanes = null;\n  this.clipIntersection = false;\n  this.clipShadows = false;\n  this.shadowSide = null;\n  this.colorWrite = true;\n  this.precision = null; // override the renderer's default precision for this material\n\n  this.polygonOffset = false;\n  this.polygonOffsetFactor = 0;\n  this.polygonOffsetUnits = 0;\n  this.dithering = false;\n  this.alphaTest = 0;\n  this.alphaToCoverage = false;\n  this.premultipliedAlpha = false;\n  this.visible = true;\n  this.toneMapped = true;\n  this.userData = {};\n  this.version = 0;\n}\n\nMaterial.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n  constructor: Material,\n  isMaterial: true,\n  onBeforeCompile: function\n    /* shaderobject, renderer */\n  onBeforeCompile() {},\n  customProgramCacheKey: function customProgramCacheKey() {\n    return this.onBeforeCompile.toString();\n  },\n  setValues: function setValues(values) {\n    if (values === undefined) return;\n\n    for (const key in values) {\n      const newValue = values[key];\n\n      if (newValue === undefined) {\n        console.warn('THREE.Material: \\'' + key + '\\' parameter is undefined.');\n        continue;\n      } // for backward compatability if shading is set in the constructor\n\n\n      if (key === 'shading') {\n        console.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n        this.flatShading = newValue === FlatShading ? true : false;\n        continue;\n      }\n\n      const currentValue = this[key];\n\n      if (currentValue === undefined) {\n        console.warn('THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.');\n        continue;\n      }\n\n      if (currentValue && currentValue.isColor) {\n        currentValue.set(newValue);\n      } else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\n        currentValue.copy(newValue);\n      } else {\n        this[key] = newValue;\n      }\n    }\n  },\n  toJSON: function toJSON(meta) {\n    const isRoot = meta === undefined || typeof meta === 'string';\n\n    if (isRoot) {\n      meta = {\n        textures: {},\n        images: {}\n      };\n    }\n\n    const data = {\n      metadata: {\n        version: 4.5,\n        type: 'Material',\n        generator: 'Material.toJSON'\n      }\n    }; // standard Material serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n    if (this.color && this.color.isColor) data.color = this.color.getHex();\n    if (this.roughness !== undefined) data.roughness = this.roughness;\n    if (this.metalness !== undefined) data.metalness = this.metalness;\n    if (this.sheen && this.sheen.isColor) data.sheen = this.sheen.getHex();\n    if (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\n    if (this.emissiveIntensity && this.emissiveIntensity !== 1) data.emissiveIntensity = this.emissiveIntensity;\n    if (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\n    if (this.shininess !== undefined) data.shininess = this.shininess;\n    if (this.clearcoat !== undefined) data.clearcoat = this.clearcoat;\n    if (this.clearcoatRoughness !== undefined) data.clearcoatRoughness = this.clearcoatRoughness;\n\n    if (this.clearcoatMap && this.clearcoatMap.isTexture) {\n      data.clearcoatMap = this.clearcoatMap.toJSON(meta).uuid;\n    }\n\n    if (this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture) {\n      data.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(meta).uuid;\n    }\n\n    if (this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture) {\n      data.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(meta).uuid;\n      data.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n    }\n\n    if (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\n    if (this.matcap && this.matcap.isTexture) data.matcap = this.matcap.toJSON(meta).uuid;\n    if (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n\n    if (this.lightMap && this.lightMap.isTexture) {\n      data.lightMap = this.lightMap.toJSON(meta).uuid;\n      data.lightMapIntensity = this.lightMapIntensity;\n    }\n\n    if (this.aoMap && this.aoMap.isTexture) {\n      data.aoMap = this.aoMap.toJSON(meta).uuid;\n      data.aoMapIntensity = this.aoMapIntensity;\n    }\n\n    if (this.bumpMap && this.bumpMap.isTexture) {\n      data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n      data.bumpScale = this.bumpScale;\n    }\n\n    if (this.normalMap && this.normalMap.isTexture) {\n      data.normalMap = this.normalMap.toJSON(meta).uuid;\n      data.normalMapType = this.normalMapType;\n      data.normalScale = this.normalScale.toArray();\n    }\n\n    if (this.displacementMap && this.displacementMap.isTexture) {\n      data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n      data.displacementScale = this.displacementScale;\n      data.displacementBias = this.displacementBias;\n    }\n\n    if (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n    if (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n    if (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n    if (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n\n    if (this.envMap && this.envMap.isTexture) {\n      data.envMap = this.envMap.toJSON(meta).uuid;\n      data.reflectivity = this.reflectivity; // Scale behind envMap\n\n      data.refractionRatio = this.refractionRatio;\n      if (this.combine !== undefined) data.combine = this.combine;\n      if (this.envMapIntensity !== undefined) data.envMapIntensity = this.envMapIntensity;\n    }\n\n    if (this.gradientMap && this.gradientMap.isTexture) {\n      data.gradientMap = this.gradientMap.toJSON(meta).uuid;\n    }\n\n    if (this.size !== undefined) data.size = this.size;\n    if (this.shadowSide !== null) data.shadowSide = this.shadowSide;\n    if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n    if (this.blending !== NormalBlending) data.blending = this.blending;\n    if (this.side !== FrontSide) data.side = this.side;\n    if (this.vertexColors) data.vertexColors = true;\n    if (this.opacity < 1) data.opacity = this.opacity;\n    if (this.transparent === true) data.transparent = this.transparent;\n    data.depthFunc = this.depthFunc;\n    data.depthTest = this.depthTest;\n    data.depthWrite = this.depthWrite;\n    data.colorWrite = this.colorWrite;\n    data.stencilWrite = this.stencilWrite;\n    data.stencilWriteMask = this.stencilWriteMask;\n    data.stencilFunc = this.stencilFunc;\n    data.stencilRef = this.stencilRef;\n    data.stencilFuncMask = this.stencilFuncMask;\n    data.stencilFail = this.stencilFail;\n    data.stencilZFail = this.stencilZFail;\n    data.stencilZPass = this.stencilZPass; // rotation (SpriteMaterial)\n\n    if (this.rotation && this.rotation !== 0) data.rotation = this.rotation;\n    if (this.polygonOffset === true) data.polygonOffset = true;\n    if (this.polygonOffsetFactor !== 0) data.polygonOffsetFactor = this.polygonOffsetFactor;\n    if (this.polygonOffsetUnits !== 0) data.polygonOffsetUnits = this.polygonOffsetUnits;\n    if (this.linewidth && this.linewidth !== 1) data.linewidth = this.linewidth;\n    if (this.dashSize !== undefined) data.dashSize = this.dashSize;\n    if (this.gapSize !== undefined) data.gapSize = this.gapSize;\n    if (this.scale !== undefined) data.scale = this.scale;\n    if (this.dithering === true) data.dithering = true;\n    if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n    if (this.alphaToCoverage === true) data.alphaToCoverage = this.alphaToCoverage;\n    if (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n    if (this.wireframe === true) data.wireframe = this.wireframe;\n    if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n    if (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n    if (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n    if (this.morphTargets === true) data.morphTargets = true;\n    if (this.morphNormals === true) data.morphNormals = true;\n    if (this.skinning === true) data.skinning = true;\n    if (this.flatShading === true) data.flatShading = this.flatShading;\n    if (this.visible === false) data.visible = false;\n    if (this.toneMapped === false) data.toneMapped = false;\n    if (JSON.stringify(this.userData) !== '{}') data.userData = this.userData; // TODO: Copied from Object3D.toJSON\n\n    function extractFromCache(cache) {\n      const values = [];\n\n      for (const key in cache) {\n        const data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n\n    if (isRoot) {\n      const textures = extractFromCache(meta.textures);\n      const images = extractFromCache(meta.images);\n      if (textures.length > 0) data.textures = textures;\n      if (images.length > 0) data.images = images;\n    }\n\n    return data;\n  },\n  clone: function clone() {\n    return new this.constructor().copy(this);\n  },\n  copy: function copy(source) {\n    this.name = source.name;\n    this.fog = source.fog;\n    this.blending = source.blending;\n    this.side = source.side;\n    this.vertexColors = source.vertexColors;\n    this.opacity = source.opacity;\n    this.transparent = source.transparent;\n    this.blendSrc = source.blendSrc;\n    this.blendDst = source.blendDst;\n    this.blendEquation = source.blendEquation;\n    this.blendSrcAlpha = source.blendSrcAlpha;\n    this.blendDstAlpha = source.blendDstAlpha;\n    this.blendEquationAlpha = source.blendEquationAlpha;\n    this.depthFunc = source.depthFunc;\n    this.depthTest = source.depthTest;\n    this.depthWrite = source.depthWrite;\n    this.stencilWriteMask = source.stencilWriteMask;\n    this.stencilFunc = source.stencilFunc;\n    this.stencilRef = source.stencilRef;\n    this.stencilFuncMask = source.stencilFuncMask;\n    this.stencilFail = source.stencilFail;\n    this.stencilZFail = source.stencilZFail;\n    this.stencilZPass = source.stencilZPass;\n    this.stencilWrite = source.stencilWrite;\n    const srcPlanes = source.clippingPlanes;\n    let dstPlanes = null;\n\n    if (srcPlanes !== null) {\n      const n = srcPlanes.length;\n      dstPlanes = new Array(n);\n\n      for (let i = 0; i !== n; ++i) {\n        dstPlanes[i] = srcPlanes[i].clone();\n      }\n    }\n\n    this.clippingPlanes = dstPlanes;\n    this.clipIntersection = source.clipIntersection;\n    this.clipShadows = source.clipShadows;\n    this.shadowSide = source.shadowSide;\n    this.colorWrite = source.colorWrite;\n    this.precision = source.precision;\n    this.polygonOffset = source.polygonOffset;\n    this.polygonOffsetFactor = source.polygonOffsetFactor;\n    this.polygonOffsetUnits = source.polygonOffsetUnits;\n    this.dithering = source.dithering;\n    this.alphaTest = source.alphaTest;\n    this.alphaToCoverage = source.alphaToCoverage;\n    this.premultipliedAlpha = source.premultipliedAlpha;\n    this.visible = source.visible;\n    this.toneMapped = source.toneMapped;\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n    return this;\n  },\n  dispose: function dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n});\nObject.defineProperty(Material.prototype, 'needsUpdate', {\n  set: function set(value) {\n    if (value === true) this.version++;\n  }\n});\nexport { Material };","map":{"version":3,"names":["EventDispatcher","FrontSide","FlatShading","NormalBlending","LessEqualDepth","AddEquation","OneMinusSrcAlphaFactor","SrcAlphaFactor","AlwaysStencilFunc","KeepStencilOp","MathUtils","materialId","Material","Object","defineProperty","value","uuid","generateUUID","name","type","fog","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","alphaToCoverage","premultipliedAlpha","visible","toneMapped","userData","version","prototype","assign","create","constructor","isMaterial","onBeforeCompile","customProgramCacheKey","toString","setValues","values","undefined","key","newValue","console","warn","flatShading","currentValue","isColor","set","isVector3","copy","toJSON","meta","isRoot","textures","images","data","metadata","generator","color","getHex","roughness","metalness","sheen","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatMap","isTexture","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","toArray","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","envMap","reflectivity","refractionRatio","combine","envMapIntensity","gradientMap","size","sizeAttenuation","rotation","linewidth","dashSize","gapSize","scale","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","morphTargets","morphNormals","skinning","JSON","stringify","extractFromCache","cache","push","length","clone","source","srcPlanes","dstPlanes","n","Array","i","parse","dispose","dispatchEvent"],"sources":["/Users/sam/Documents/CakeProject/node_modules/three/src/materials/Material.js"],"sourcesContent":["import { EventDispatcher } from '../core/EventDispatcher.js';\nimport { FrontSide, FlatShading, NormalBlending, LessEqualDepth, AddEquation, OneMinusSrcAlphaFactor, SrcAlphaFactor, AlwaysStencilFunc, KeepStencilOp } from '../constants.js';\nimport { MathUtils } from '../math/MathUtils.js';\n\nlet materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.vertexColors = false;\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.stencilWriteMask = 0xff;\n\tthis.stencilFunc = AlwaysStencilFunc;\n\tthis.stencilRef = 0;\n\tthis.stencilFuncMask = 0xff;\n\tthis.stencilFail = KeepStencilOp;\n\tthis.stencilZFail = KeepStencilOp;\n\tthis.stencilZPass = KeepStencilOp;\n\tthis.stencilWrite = false;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.alphaToCoverage = false;\n\tthis.premultipliedAlpha = false;\n\n\tthis.visible = true;\n\n\tthis.toneMapped = true;\n\n\tthis.userData = {};\n\n\tthis.version = 0;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function ( /* shaderobject, renderer */ ) {},\n\n\tcustomProgramCacheKey: function () {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tconst isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen && this.sheen.isColor ) data.sheen = this.sheen.getHex();\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\t\t\tdata.refractionRatio = this.refractionRatio;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\t\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.morphNormals === true ) data.morphNormals = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nObject.defineProperty( Material.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nexport { Material };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
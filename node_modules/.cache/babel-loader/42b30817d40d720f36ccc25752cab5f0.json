{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{connect}from\"react-redux\";import{PropTypes}from\"prop-types\";import{FormControl,InputLabel,Select}from\"@material-ui/core\";import{makeStyles}from\"@material-ui/core/styles\";import{setSelectedMeshData}from\"../../redux/actions/MeshActions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const useStyles=makeStyles(theme=>({formControl:{margin:theme.spacing(1),minWidth:120}}));const MeshSelector=props=>{var _nodeStore$currentNod;const classes=useStyles();const{meshStore,nodeStore,productStore,setSelectedMeshData}=props;let options=(_nodeStore$currentNod=nodeStore.currentNodeData)===null||_nodeStore$currentNod===void 0?void 0:_nodeStore$currentNod.candidateMeshes.map(n=>{return/*#__PURE__*/_jsx(\"option\",{value:n.id,children:n.label},n.id);});const[value,setValue]=useState(\"\");useEffect(()=>{if(nodeStore.currentNodeData&&meshStore.selectedMeshData){meshStore.selectedMeshData.forEach(data=>{if(data.nodeId===nodeStore.currentNodeData.id){setValue(data.meshId);}});}},[nodeStore.currentNodeData,meshStore.selectedMeshData]);return nodeStore.currentNodeData&&/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,className:classes.formControl,children:[/*#__PURE__*/_jsx(InputLabel,{shrink:true,variant:\"outlined\",id:\"mesh-selector\",children:\"Select a mesh\"}),/*#__PURE__*/_jsx(Select,{labelId:\"mesh-selector\",native:true,labelWidth:50,label:\"Select node\",variant:\"outlined\",style:{width:300},value:value,onChange:event=>{if(nodeStore.currentNodeData&&meshStore.selectedMeshData){const newData=[];meshStore.selectedMeshData.forEach(data=>{if(data.nodeId===nodeStore.currentNodeData.id){data.meshId=event.target.value;}newData.push(data);});setSelectedMeshData(newData);}},children:options})]});};const mapStateToProps=state=>({meshStore:state.meshStore,nodeStore:state.nodeStore,productStore:state.productStore,setSelectedMeshData:PropTypes.func.isRequired});export default connect(mapStateToProps,{setSelectedMeshData})(MeshSelector);","map":{"version":3,"names":["React","useEffect","useState","connect","PropTypes","FormControl","InputLabel","Select","makeStyles","setSelectedMeshData","useStyles","theme","formControl","margin","spacing","minWidth","MeshSelector","props","classes","meshStore","nodeStore","productStore","options","currentNodeData","candidateMeshes","map","n","id","label","value","setValue","selectedMeshData","forEach","data","nodeId","meshId","width","event","newData","target","push","mapStateToProps","state","func","isRequired"],"sources":["/Users/sam/Documents/CakeProject/src/components/MeshSelector/MeshSelector.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport {connect} from \"react-redux\"\nimport {PropTypes} from \"prop-types\"\nimport {FormControl, InputLabel, Select} from \"@material-ui/core\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {setSelectedMeshData} from \"../../redux/actions/MeshActions\"\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}))\n\nconst MeshSelector = props => {\n  const classes = useStyles()\n  const {meshStore, nodeStore, productStore, setSelectedMeshData} = props\n  let options = nodeStore.currentNodeData?.candidateMeshes.map(n => {\n    return (\n      <option key={n.id} value={n.id}>\n        {n.label}\n      </option>\n    )\n  })\n\n  const [value, setValue] = useState(\"\")\n\n  useEffect(() => {\n    if (nodeStore.currentNodeData && meshStore.selectedMeshData) {\n      meshStore.selectedMeshData.forEach(data => {\n        if (data.nodeId === nodeStore.currentNodeData.id) {\n          setValue(data.meshId)\n        }\n      })\n    }\n  }, [nodeStore.currentNodeData, meshStore.selectedMeshData])\n\n  return (\n    nodeStore.currentNodeData && (\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel shrink variant=\"outlined\" id=\"mesh-selector\">\n          Select a mesh\n        </InputLabel>\n        <Select\n          labelId=\"mesh-selector\"\n          native\n          labelWidth={50}\n          label=\"Select node\"\n          variant=\"outlined\"\n          style={{\n            width: 300\n          }}\n          value={value}\n          onChange={event => {\n            if (nodeStore.currentNodeData && meshStore.selectedMeshData) {\n              const newData = []\n              meshStore.selectedMeshData.forEach(data => {\n                if (data.nodeId === nodeStore.currentNodeData.id) {\n                  data.meshId = event.target.value\n                }\n                newData.push(data)\n              })\n              setSelectedMeshData(newData)\n            }\n          }}\n        >\n          {options}\n        </Select>\n      </FormControl>\n    )\n  )\n}\n\nconst mapStateToProps = state => ({\n  meshStore: state.meshStore,\n  nodeStore: state.nodeStore,\n  productStore: state.productStore,\n  setSelectedMeshData: PropTypes.func.isRequired\n})\n\nexport default connect(mapStateToProps, {setSelectedMeshData})(MeshSelector)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
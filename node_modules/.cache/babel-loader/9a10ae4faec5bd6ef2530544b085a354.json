{"ast":null,"code":"import { Matrix4 } from '../math/Matrix4.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Vector3 } from '../math/Vector3.js';\n\nfunction Camera() {\n  Object3D.call(this);\n  this.type = 'Camera';\n  this.matrixWorldInverse = new Matrix4();\n  this.projectionMatrix = new Matrix4();\n  this.projectionMatrixInverse = new Matrix4();\n}\n\nCamera.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Camera,\n  isCamera: true,\n  copy: function copy(source, recursive) {\n    Object3D.prototype.copy.call(this, source, recursive);\n    this.matrixWorldInverse.copy(source.matrixWorldInverse);\n    this.projectionMatrix.copy(source.projectionMatrix);\n    this.projectionMatrixInverse.copy(source.projectionMatrixInverse);\n    return this;\n  },\n  getWorldDirection: function getWorldDirection(target) {\n    if (target === undefined) {\n      console.warn('THREE.Camera: .getWorldDirection() target is now required');\n      target = new Vector3();\n    }\n\n    this.updateWorldMatrix(true, false);\n    const e = this.matrixWorld.elements;\n    return target.set(-e[8], -e[9], -e[10]).normalize();\n  },\n  updateMatrixWorld: function updateMatrixWorld(force) {\n    Object3D.prototype.updateMatrixWorld.call(this, force);\n    this.matrixWorldInverse.copy(this.matrixWorld).invert();\n  },\n  updateWorldMatrix: function updateWorldMatrix(updateParents, updateChildren) {\n    Object3D.prototype.updateWorldMatrix.call(this, updateParents, updateChildren);\n    this.matrixWorldInverse.copy(this.matrixWorld).invert();\n  },\n  clone: function clone() {\n    return new this.constructor().copy(this);\n  }\n});\nexport { Camera };","map":{"version":3,"names":["Matrix4","Object3D","Vector3","Camera","call","type","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","prototype","Object","assign","create","constructor","isCamera","copy","source","recursive","getWorldDirection","target","undefined","console","warn","updateWorldMatrix","e","matrixWorld","elements","set","normalize","updateMatrixWorld","force","invert","updateParents","updateChildren","clone"],"sources":["/Users/sam/Documents/CakeProject/node_modules/three/src/cameras/Camera.js"],"sourcesContent":["import { Matrix4 } from '../math/Matrix4.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Vector3 } from '../math/Vector3.js';\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\n\tthis.projectionMatrix = new Matrix4();\n\tthis.projectionMatrixInverse = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t},\n\n\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\tObject3D.prototype.updateWorldMatrix.call( this, updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\nexport { Camera };\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,SAASC,MAAT,GAAkB;EAEjBF,QAAQ,CAACG,IAAT,CAAe,IAAf;EAEA,KAAKC,IAAL,GAAY,QAAZ;EAEA,KAAKC,kBAAL,GAA0B,IAAIN,OAAJ,EAA1B;EAEA,KAAKO,gBAAL,GAAwB,IAAIP,OAAJ,EAAxB;EACA,KAAKQ,uBAAL,GAA+B,IAAIR,OAAJ,EAA/B;AAEA;;AAEDG,MAAM,CAACM,SAAP,GAAmBC,MAAM,CAACC,MAAP,CAAeD,MAAM,CAACE,MAAP,CAAeX,QAAQ,CAACQ,SAAxB,CAAf,EAAoD;EAEtEI,WAAW,EAAEV,MAFyD;EAItEW,QAAQ,EAAE,IAJ4D;EAMtEC,IAAI,EAAE,cAAWC,MAAX,EAAmBC,SAAnB,EAA+B;IAEpChB,QAAQ,CAACQ,SAAT,CAAmBM,IAAnB,CAAwBX,IAAxB,CAA8B,IAA9B,EAAoCY,MAApC,EAA4CC,SAA5C;IAEA,KAAKX,kBAAL,CAAwBS,IAAxB,CAA8BC,MAAM,CAACV,kBAArC;IAEA,KAAKC,gBAAL,CAAsBQ,IAAtB,CAA4BC,MAAM,CAACT,gBAAnC;IACA,KAAKC,uBAAL,CAA6BO,IAA7B,CAAmCC,MAAM,CAACR,uBAA1C;IAEA,OAAO,IAAP;EAEA,CAjBqE;EAmBtEU,iBAAiB,EAAE,2BAAWC,MAAX,EAAoB;IAEtC,IAAKA,MAAM,KAAKC,SAAhB,EAA4B;MAE3BC,OAAO,CAACC,IAAR,CAAc,2DAAd;MACAH,MAAM,GAAG,IAAIjB,OAAJ,EAAT;IAEA;;IAED,KAAKqB,iBAAL,CAAwB,IAAxB,EAA8B,KAA9B;IAEA,MAAMC,CAAC,GAAG,KAAKC,WAAL,CAAiBC,QAA3B;IAEA,OAAOP,MAAM,CAACQ,GAAP,CAAY,CAAEH,CAAC,CAAE,CAAF,CAAf,EAAsB,CAAEA,CAAC,CAAE,CAAF,CAAzB,EAAgC,CAAEA,CAAC,CAAE,EAAF,CAAnC,EAA4CI,SAA5C,EAAP;EAEA,CAlCqE;EAoCtEC,iBAAiB,EAAE,2BAAWC,KAAX,EAAmB;IAErC7B,QAAQ,CAACQ,SAAT,CAAmBoB,iBAAnB,CAAqCzB,IAArC,CAA2C,IAA3C,EAAiD0B,KAAjD;IAEA,KAAKxB,kBAAL,CAAwBS,IAAxB,CAA8B,KAAKU,WAAnC,EAAiDM,MAAjD;EAEA,CA1CqE;EA4CtER,iBAAiB,EAAE,2BAAWS,aAAX,EAA0BC,cAA1B,EAA2C;IAE7DhC,QAAQ,CAACQ,SAAT,CAAmBc,iBAAnB,CAAqCnB,IAArC,CAA2C,IAA3C,EAAiD4B,aAAjD,EAAgEC,cAAhE;IAEA,KAAK3B,kBAAL,CAAwBS,IAAxB,CAA8B,KAAKU,WAAnC,EAAiDM,MAAjD;EAEA,CAlDqE;EAoDtEG,KAAK,EAAE,iBAAY;IAElB,OAAO,IAAI,KAAKrB,WAAT,GAAuBE,IAAvB,CAA6B,IAA7B,CAAP;EAEA;AAxDqE,CAApD,CAAnB;AA4DA,SAASZ,MAAT"},"metadata":{},"sourceType":"module"}
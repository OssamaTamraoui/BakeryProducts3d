{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Documents/CakeProject/src/components/DecoSelector/NodeSelector.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { FormControl, InputLabel, Select } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setCurrentNodeData } from \"../../redux/actions/NodeActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\n\nconst NodeSelector = props => {\n  _s();\n\n  var _productStore$product, _nodeStore$currentNod, _nodeStore$currentNod2;\n\n  const classes = useStyles();\n  const {\n    nodeStore,\n    productStore,\n    setCurrentNodeData\n  } = props;\n  let options = (_productStore$product = productStore.productData) === null || _productStore$product === void 0 ? void 0 : _productStore$product.nodes.map(n => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: n.id,\n      children: n.label\n    }, n.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      shrink: true,\n      variant: \"outlined\",\n      id: \"node-selector\",\n      children: \"Select a layer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      labelId: \"node-selector\",\n      native: true,\n      labelWidth: 50,\n      label: \"Select node\",\n      variant: \"outlined\",\n      style: {\n        width: 300\n      },\n      value: (_nodeStore$currentNod = (_nodeStore$currentNod2 = nodeStore.currentNodeData) === null || _nodeStore$currentNod2 === void 0 ? void 0 : _nodeStore$currentNod2.id) !== null && _nodeStore$currentNod !== void 0 ? _nodeStore$currentNod : \"none\",\n      onChange: event => {\n        if (productStore.productData) {\n          if (event.target.value !== \"none\") {\n            setCurrentNodeData(productStore.productData.deco.find(n => n.id === event.target.value));\n          } else {\n            setCurrentNodeData(null);\n          }\n        } else {\n          setCurrentNodeData(null);\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"none\",\n        children: \"None\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), options]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NodeSelector, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = NodeSelector;\n\nconst mapStateToProps = state => ({\n  nodeStore: state.nodeStore,\n  productStore: state.productStore,\n  setCurrentNodeData: PropTypes.func.isRequired\n});\n\nexport default connect(mapStateToProps, {\n  setCurrentNodeData\n})(NodeSelector);\n\nvar _c;\n\n$RefreshReg$(_c, \"NodeSelector\");","map":{"version":3,"names":["React","connect","PropTypes","FormControl","InputLabel","Select","makeStyles","setCurrentNodeData","useStyles","theme","formControl","margin","spacing","minWidth","NodeSelector","props","classes","nodeStore","productStore","options","productData","nodes","map","n","id","label","width","currentNodeData","event","target","value","deco","find","mapStateToProps","state","func","isRequired"],"sources":["/Users/sam/Documents/CakeProject/src/components/DecoSelector/NodeSelector.js"],"sourcesContent":["import React from \"react\"\nimport {connect} from \"react-redux\"\nimport {PropTypes} from \"prop-types\"\nimport {FormControl, InputLabel, Select} from \"@material-ui/core\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {setCurrentNodeData} from \"../../redux/actions/NodeActions\"\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}))\n\nconst NodeSelector = props => {\n  const classes = useStyles()\n  const {nodeStore, productStore, setCurrentNodeData} = props\n  let options = productStore.productData?.nodes.map(n => {\n    return (\n      <option key={n.id} value={n.id}>\n        {n.label}\n      </option>\n    )\n  })\n\n  return (\n    <FormControl fullWidth className={classes.formControl}>\n      <InputLabel shrink variant=\"outlined\" id=\"node-selector\">\n        Select a layer\n      </InputLabel>\n      <Select\n        labelId=\"node-selector\"\n        native\n        labelWidth={50}\n        label=\"Select node\"\n        variant=\"outlined\"\n        style={{\n          width: 300\n        }}\n        value={nodeStore.currentNodeData?.id ?? \"none\"}\n        onChange={event => {\n          if (productStore.productData) {\n            if (event.target.value !== \"none\") {\n              setCurrentNodeData(\n                productStore.productData.deco.find(\n                  n => n.id === event.target.value\n                )\n              )\n            } else {\n              setCurrentNodeData(null)\n            }\n          } else {\n            setCurrentNodeData(null)\n          }\n        }}\n      >\n        <option value=\"none\">None</option>\n        {options}\n      </Select>\n    </FormControl>\n  )\n}\n\nconst mapStateToProps = state => ({\n  nodeStore: state.nodeStore,\n  productStore: state.productStore,\n  setCurrentNodeData: PropTypes.func.isRequired\n})\n\nexport default connect(mapStateToProps, {setCurrentNodeData})(NodeSelector)\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,SAAQC,WAAR,EAAqBC,UAArB,EAAiCC,MAAjC,QAA8C,mBAA9C;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SAAQC,kBAAR,QAAiC,iCAAjC;;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAACG,KAAK,KAAK;EACrCC,WAAW,EAAE;IACXC,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADG;IAEXC,QAAQ,EAAE;EAFC;AADwB,CAAL,CAAN,CAA5B;;AAOA,MAAMC,YAAY,GAAGC,KAAK,IAAI;EAAA;;EAAA;;EAC5B,MAAMC,OAAO,GAAGR,SAAS,EAAzB;EACA,MAAM;IAACS,SAAD;IAAYC,YAAZ;IAA0BX;EAA1B,IAAgDQ,KAAtD;EACA,IAAII,OAAO,4BAAGD,YAAY,CAACE,WAAhB,0DAAG,sBAA0BC,KAA1B,CAAgCC,GAAhC,CAAoCC,CAAC,IAAI;IACrD,oBACE;MAAmB,KAAK,EAAEA,CAAC,CAACC,EAA5B;MAAA,UACGD,CAAC,CAACE;IADL,GAAaF,CAAC,CAACC,EAAf;MAAA;MAAA;MAAA;IAAA,QADF;EAKD,CANa,CAAd;EAQA,oBACE,QAAC,WAAD;IAAa,SAAS,MAAtB;IAAuB,SAAS,EAAER,OAAO,CAACN,WAA1C;IAAA,wBACE,QAAC,UAAD;MAAY,MAAM,MAAlB;MAAmB,OAAO,EAAC,UAA3B;MAAsC,EAAE,EAAC,eAAzC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,MAAD;MACE,OAAO,EAAC,eADV;MAEE,MAAM,MAFR;MAGE,UAAU,EAAE,EAHd;MAIE,KAAK,EAAC,aAJR;MAKE,OAAO,EAAC,UALV;MAME,KAAK,EAAE;QACLgB,KAAK,EAAE;MADF,CANT;MASE,KAAK,qDAAET,SAAS,CAACU,eAAZ,2DAAE,uBAA2BH,EAA7B,yEAAmC,MAT1C;MAUE,QAAQ,EAAEI,KAAK,IAAI;QACjB,IAAIV,YAAY,CAACE,WAAjB,EAA8B;UAC5B,IAAIQ,KAAK,CAACC,MAAN,CAAaC,KAAb,KAAuB,MAA3B,EAAmC;YACjCvB,kBAAkB,CAChBW,YAAY,CAACE,WAAb,CAAyBW,IAAzB,CAA8BC,IAA9B,CACET,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASI,KAAK,CAACC,MAAN,CAAaC,KAD7B,CADgB,CAAlB;UAKD,CAND,MAMO;YACLvB,kBAAkB,CAAC,IAAD,CAAlB;UACD;QACF,CAVD,MAUO;UACLA,kBAAkB,CAAC,IAAD,CAAlB;QACD;MACF,CAxBH;MAAA,wBA0BE;QAAQ,KAAK,EAAC,MAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QA1BF,EA2BGY,OA3BH;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoCD,CA/CD;;GAAML,Y;UACYN,S;;;KADZM,Y;;AAiDN,MAAMmB,eAAe,GAAGC,KAAK,KAAK;EAChCjB,SAAS,EAAEiB,KAAK,CAACjB,SADe;EAEhCC,YAAY,EAAEgB,KAAK,CAAChB,YAFY;EAGhCX,kBAAkB,EAAEL,SAAS,CAACiC,IAAV,CAAeC;AAHH,CAAL,CAA7B;;AAMA,eAAenC,OAAO,CAACgC,eAAD,EAAkB;EAAC1B;AAAD,CAAlB,CAAP,CAA+CO,YAA/C,CAAf"},"metadata":{},"sourceType":"module"}
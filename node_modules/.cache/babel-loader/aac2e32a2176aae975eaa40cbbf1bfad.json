{"ast":null,"code":"import { EventDispatcher, MOUSE, Quaternion, Spherical, TOUCH, Vector2, Vector3 } from '../../../build/three.module.js'; // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function OrbitControls(object, domElement) {\n  if (domElement === undefined) console.warn('THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.');\n  if (domElement === document) console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n  this.object = object;\n  this.domElement = domElement; // Set to false to disable this control\n\n  this.enabled = true; // \"target\" sets the location of focus, where the object orbits around\n\n  this.target = new Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\n\n  this.minDistance = 0;\n  this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\n\n  this.minZoom = 0;\n  this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n\n  this.minPolarAngle = 0; // radians\n\n  this.maxPolarAngle = Math.PI; // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\n  this.minAzimuthAngle = -Infinity; // radians\n\n  this.maxAzimuthAngle = Infinity; // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n\n  this.enableDamping = false;\n  this.dampingFactor = 0.05; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n\n  this.enableZoom = true;\n  this.zoomSpeed = 1.0; // Set to false to disable rotating\n\n  this.enableRotate = true;\n  this.rotateSpeed = 1.0; // Set to false to disable panning\n\n  this.enablePan = true;\n  this.panSpeed = 1.0;\n  this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\n  this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n  this.autoRotate = false;\n  this.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n  // The four arrow keys\n\n  this.keys = {\n    LEFT: 'ArrowLeft',\n    UP: 'ArrowUp',\n    RIGHT: 'ArrowRight',\n    BOTTOM: 'ArrowDown'\n  }; // Mouse buttons\n\n  this.mouseButtons = {\n    LEFT: MOUSE.ROTATE,\n    MIDDLE: MOUSE.DOLLY,\n    RIGHT: MOUSE.PAN\n  }; // Touch fingers\n\n  this.touches = {\n    ONE: TOUCH.ROTATE,\n    TWO: TOUCH.DOLLY_PAN\n  }; // for reset\n\n  this.target0 = this.target.clone();\n  this.position0 = this.object.position.clone();\n  this.zoom0 = this.object.zoom; // the target DOM element for key events\n\n  this._domElementKeyEvents = null; //\n  // public methods\n  //\n\n  this.getPolarAngle = function () {\n    return spherical.phi;\n  };\n\n  this.getAzimuthalAngle = function () {\n    return spherical.theta;\n  };\n\n  this.listenToKeyEvents = function (domElement) {\n    domElement.addEventListener('keydown', onKeyDown);\n    this._domElementKeyEvents = domElement;\n  };\n\n  this.saveState = function () {\n    scope.target0.copy(scope.target);\n    scope.position0.copy(scope.object.position);\n    scope.zoom0 = scope.object.zoom;\n  };\n\n  this.reset = function () {\n    scope.target.copy(scope.target0);\n    scope.object.position.copy(scope.position0);\n    scope.object.zoom = scope.zoom0;\n    scope.object.updateProjectionMatrix();\n    scope.dispatchEvent(changeEvent);\n    scope.update();\n    state = STATE.NONE;\n  }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n  this.update = function () {\n    var offset = new Vector3(); // so camera.up is the orbit axis\n\n    var quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n    var quatInverse = quat.clone().invert();\n    var lastPosition = new Vector3();\n    var lastQuaternion = new Quaternion();\n    var twoPI = 2 * Math.PI;\n    return function update() {\n      var position = scope.object.position;\n      offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n      offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n      spherical.setFromVector3(offset);\n\n      if (scope.autoRotate && state === STATE.NONE) {\n        rotateLeft(getAutoRotationAngle());\n      }\n\n      if (scope.enableDamping) {\n        spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n        spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n      } else {\n        spherical.theta += sphericalDelta.theta;\n        spherical.phi += sphericalDelta.phi;\n      } // restrict theta to be between desired limits\n\n\n      var min = scope.minAzimuthAngle;\n      var max = scope.maxAzimuthAngle;\n\n      if (isFinite(min) && isFinite(max)) {\n        if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n        if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n        if (min <= max) {\n          spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n        } else {\n          spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n        }\n      } // restrict phi to be between desired limits\n\n\n      spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n      spherical.makeSafe();\n      spherical.radius *= scale; // restrict radius to be between desired limits\n\n      spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n      if (scope.enableDamping === true) {\n        scope.target.addScaledVector(panOffset, scope.dampingFactor);\n      } else {\n        scope.target.add(panOffset);\n      }\n\n      offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n      offset.applyQuaternion(quatInverse);\n      position.copy(scope.target).add(offset);\n      scope.object.lookAt(scope.target);\n\n      if (scope.enableDamping === true) {\n        sphericalDelta.theta *= 1 - scope.dampingFactor;\n        sphericalDelta.phi *= 1 - scope.dampingFactor;\n        panOffset.multiplyScalar(1 - scope.dampingFactor);\n      } else {\n        sphericalDelta.set(0, 0, 0);\n        panOffset.set(0, 0, 0);\n      }\n\n      scale = 1; // update condition is:\n      // min(camera displacement, camera rotation in radians)^2 > EPS\n      // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n      if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n        scope.dispatchEvent(changeEvent);\n        lastPosition.copy(scope.object.position);\n        lastQuaternion.copy(scope.object.quaternion);\n        zoomChanged = false;\n        return true;\n      }\n\n      return false;\n    };\n  }();\n\n  this.dispose = function () {\n    scope.domElement.removeEventListener('contextmenu', onContextMenu);\n    scope.domElement.removeEventListener('pointerdown', onPointerDown);\n    scope.domElement.removeEventListener('wheel', onMouseWheel);\n    scope.domElement.removeEventListener('touchstart', onTouchStart);\n    scope.domElement.removeEventListener('touchend', onTouchEnd);\n    scope.domElement.removeEventListener('touchmove', onTouchMove);\n    scope.domElement.ownerDocument.removeEventListener('pointermove', onPointerMove);\n    scope.domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n    if (scope._domElementKeyEvents !== null) {\n      scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n    } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n  }; //\n  // internals\n  //\n\n\n  var scope = this;\n  var changeEvent = {\n    type: 'change'\n  };\n  var startEvent = {\n    type: 'start'\n  };\n  var endEvent = {\n    type: 'end'\n  };\n  var STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_PAN: 4,\n    TOUCH_DOLLY_PAN: 5,\n    TOUCH_DOLLY_ROTATE: 6\n  };\n  var state = STATE.NONE;\n  var EPS = 0.000001; // current position in spherical coordinates\n\n  var spherical = new Spherical();\n  var sphericalDelta = new Spherical();\n  var scale = 1;\n  var panOffset = new Vector3();\n  var zoomChanged = false;\n  var rotateStart = new Vector2();\n  var rotateEnd = new Vector2();\n  var rotateDelta = new Vector2();\n  var panStart = new Vector2();\n  var panEnd = new Vector2();\n  var panDelta = new Vector2();\n  var dollyStart = new Vector2();\n  var dollyEnd = new Vector2();\n  var dollyDelta = new Vector2();\n\n  function getAutoRotationAngle() {\n    return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n  }\n\n  function getZoomScale() {\n    return Math.pow(0.95, scope.zoomSpeed);\n  }\n\n  function rotateLeft(angle) {\n    sphericalDelta.theta -= angle;\n  }\n\n  function rotateUp(angle) {\n    sphericalDelta.phi -= angle;\n  }\n\n  var panLeft = function () {\n    var v = new Vector3();\n    return function panLeft(distance, objectMatrix) {\n      v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n      v.multiplyScalar(-distance);\n      panOffset.add(v);\n    };\n  }();\n\n  var panUp = function () {\n    var v = new Vector3();\n    return function panUp(distance, objectMatrix) {\n      if (scope.screenSpacePanning === true) {\n        v.setFromMatrixColumn(objectMatrix, 1);\n      } else {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.crossVectors(scope.object.up, v);\n      }\n\n      v.multiplyScalar(distance);\n      panOffset.add(v);\n    };\n  }(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n  var pan = function () {\n    var offset = new Vector3();\n    return function pan(deltaX, deltaY) {\n      var element = scope.domElement;\n\n      if (scope.object.isPerspectiveCamera) {\n        // perspective\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n        var targetDistance = offset.length(); // half of the fov is center to top of screen\n\n        targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n        panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n        panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n      } else if (scope.object.isOrthographicCamera) {\n        // orthographic\n        panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n        panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n      } else {\n        // camera neither orthographic nor perspective\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n        scope.enablePan = false;\n      }\n    };\n  }();\n\n  function dollyOut(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale /= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n    }\n  }\n\n  function dollyIn(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale *= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n    }\n  } //\n  // event callbacks - update the object state\n  //\n\n\n  function handleMouseDownRotate(event) {\n    rotateStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownDolly(event) {\n    dollyStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownPan(event) {\n    panStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseMoveRotate(event) {\n    rotateEnd.set(event.clientX, event.clientY);\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n    var element = scope.domElement;\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n    rotateStart.copy(rotateEnd);\n    scope.update();\n  }\n\n  function handleMouseMoveDolly(event) {\n    dollyEnd.set(event.clientX, event.clientY);\n    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n    if (dollyDelta.y > 0) {\n      dollyOut(getZoomScale());\n    } else if (dollyDelta.y < 0) {\n      dollyIn(getZoomScale());\n    }\n\n    dollyStart.copy(dollyEnd);\n    scope.update();\n  }\n\n  function handleMouseMovePan(event) {\n    panEnd.set(event.clientX, event.clientY);\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n    pan(panDelta.x, panDelta.y);\n    panStart.copy(panEnd);\n    scope.update();\n  }\n\n  function\n    /*event*/\n  handleMouseUp() {// no-op\n  }\n\n  function handleMouseWheel(event) {\n    if (event.deltaY < 0) {\n      dollyIn(getZoomScale());\n    } else if (event.deltaY > 0) {\n      dollyOut(getZoomScale());\n    }\n\n    scope.update();\n  }\n\n  function handleKeyDown(event) {\n    var needsUpdate = false;\n\n    switch (event.code) {\n      case scope.keys.UP:\n        pan(0, scope.keyPanSpeed);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.BOTTOM:\n        pan(0, -scope.keyPanSpeed);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.LEFT:\n        pan(scope.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.RIGHT:\n        pan(-scope.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n    }\n\n    if (needsUpdate) {\n      // prevent the browser from scrolling on cursor keys\n      event.preventDefault();\n      scope.update();\n    }\n  }\n\n  function handleTouchStartRotate(event) {\n    if (event.touches.length == 1) {\n      rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      rotateStart.set(x, y);\n    }\n  }\n\n  function handleTouchStartPan(event) {\n    if (event.touches.length == 1) {\n      panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      panStart.set(x, y);\n    }\n  }\n\n  function handleTouchStartDolly(event) {\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    dollyStart.set(0, distance);\n  }\n\n  function handleTouchStartDollyPan(event) {\n    if (scope.enableZoom) handleTouchStartDolly(event);\n    if (scope.enablePan) handleTouchStartPan(event);\n  }\n\n  function handleTouchStartDollyRotate(event) {\n    if (scope.enableZoom) handleTouchStartDolly(event);\n    if (scope.enableRotate) handleTouchStartRotate(event);\n  }\n\n  function handleTouchMoveRotate(event) {\n    if (event.touches.length == 1) {\n      rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      rotateEnd.set(x, y);\n    }\n\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n    var element = scope.domElement;\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n    rotateStart.copy(rotateEnd);\n  }\n\n  function handleTouchMovePan(event) {\n    if (event.touches.length == 1) {\n      panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      panEnd.set(x, y);\n    }\n\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n    pan(panDelta.x, panDelta.y);\n    panStart.copy(panEnd);\n  }\n\n  function handleTouchMoveDolly(event) {\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    dollyEnd.set(0, distance);\n    dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n    dollyOut(dollyDelta.y);\n    dollyStart.copy(dollyEnd);\n  }\n\n  function handleTouchMoveDollyPan(event) {\n    if (scope.enableZoom) handleTouchMoveDolly(event);\n    if (scope.enablePan) handleTouchMovePan(event);\n  }\n\n  function handleTouchMoveDollyRotate(event) {\n    if (scope.enableZoom) handleTouchMoveDolly(event);\n    if (scope.enableRotate) handleTouchMoveRotate(event);\n  }\n\n  function\n    /*event*/\n  handleTouchEnd() {// no-op\n  } //\n  // event handlers - FSM: listen for events and reset state\n  //\n\n\n  function onPointerDown(event) {\n    if (scope.enabled === false) return;\n\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        onMouseDown(event);\n        break;\n      // TODO touch\n    }\n  }\n\n  function onPointerMove(event) {\n    if (scope.enabled === false) return;\n\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        onMouseMove(event);\n        break;\n      // TODO touch\n    }\n  }\n\n  function onPointerUp(event) {\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        onMouseUp(event);\n        break;\n      // TODO touch\n    }\n  }\n\n  function onMouseDown(event) {\n    // Prevent the browser from scrolling.\n    event.preventDefault(); // Manually set the focus since calling preventDefault above\n    // prevents the browser from setting it automatically.\n\n    scope.domElement.focus ? scope.domElement.focus() : window.focus();\n    var mouseAction;\n\n    switch (event.button) {\n      case 0:\n        mouseAction = scope.mouseButtons.LEFT;\n        break;\n\n      case 1:\n        mouseAction = scope.mouseButtons.MIDDLE;\n        break;\n\n      case 2:\n        mouseAction = scope.mouseButtons.RIGHT;\n        break;\n\n      default:\n        mouseAction = -1;\n    }\n\n    switch (mouseAction) {\n      case MOUSE.DOLLY:\n        if (scope.enableZoom === false) return;\n        handleMouseDownDolly(event);\n        state = STATE.DOLLY;\n        break;\n\n      case MOUSE.ROTATE:\n        if (event.ctrlKey || event.metaKey || event.shiftKey) {\n          if (scope.enablePan === false) return;\n          handleMouseDownPan(event);\n          state = STATE.PAN;\n        } else {\n          if (scope.enableRotate === false) return;\n          handleMouseDownRotate(event);\n          state = STATE.ROTATE;\n        }\n\n        break;\n\n      case MOUSE.PAN:\n        if (event.ctrlKey || event.metaKey || event.shiftKey) {\n          if (scope.enableRotate === false) return;\n          handleMouseDownRotate(event);\n          state = STATE.ROTATE;\n        } else {\n          if (scope.enablePan === false) return;\n          handleMouseDownPan(event);\n          state = STATE.PAN;\n        }\n\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n\n    if (state !== STATE.NONE) {\n      scope.domElement.ownerDocument.addEventListener('pointermove', onPointerMove);\n      scope.domElement.ownerDocument.addEventListener('pointerup', onPointerUp);\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onMouseMove(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n\n    switch (state) {\n      case STATE.ROTATE:\n        if (scope.enableRotate === false) return;\n        handleMouseMoveRotate(event);\n        break;\n\n      case STATE.DOLLY:\n        if (scope.enableZoom === false) return;\n        handleMouseMoveDolly(event);\n        break;\n\n      case STATE.PAN:\n        if (scope.enablePan === false) return;\n        handleMouseMovePan(event);\n        break;\n    }\n  }\n\n  function onMouseUp(event) {\n    scope.domElement.ownerDocument.removeEventListener('pointermove', onPointerMove);\n    scope.domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n    if (scope.enabled === false) return;\n    handleMouseUp(event);\n    scope.dispatchEvent(endEvent);\n    state = STATE.NONE;\n  }\n\n  function onMouseWheel(event) {\n    if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\n    event.preventDefault();\n    scope.dispatchEvent(startEvent);\n    handleMouseWheel(event);\n    scope.dispatchEvent(endEvent);\n  }\n\n  function onKeyDown(event) {\n    if (scope.enabled === false || scope.enablePan === false) return;\n    handleKeyDown(event);\n  }\n\n  function onTouchStart(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault(); // prevent scrolling\n\n    switch (event.touches.length) {\n      case 1:\n        switch (scope.touches.ONE) {\n          case TOUCH.ROTATE:\n            if (scope.enableRotate === false) return;\n            handleTouchStartRotate(event);\n            state = STATE.TOUCH_ROTATE;\n            break;\n\n          case TOUCH.PAN:\n            if (scope.enablePan === false) return;\n            handleTouchStartPan(event);\n            state = STATE.TOUCH_PAN;\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        break;\n\n      case 2:\n        switch (scope.touches.TWO) {\n          case TOUCH.DOLLY_PAN:\n            if (scope.enableZoom === false && scope.enablePan === false) return;\n            handleTouchStartDollyPan(event);\n            state = STATE.TOUCH_DOLLY_PAN;\n            break;\n\n          case TOUCH.DOLLY_ROTATE:\n            if (scope.enableZoom === false && scope.enableRotate === false) return;\n            handleTouchStartDollyRotate(event);\n            state = STATE.TOUCH_DOLLY_ROTATE;\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n\n    if (state !== STATE.NONE) {\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onTouchMove(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault(); // prevent scrolling\n\n    switch (state) {\n      case STATE.TOUCH_ROTATE:\n        if (scope.enableRotate === false) return;\n        handleTouchMoveRotate(event);\n        scope.update();\n        break;\n\n      case STATE.TOUCH_PAN:\n        if (scope.enablePan === false) return;\n        handleTouchMovePan(event);\n        scope.update();\n        break;\n\n      case STATE.TOUCH_DOLLY_PAN:\n        if (scope.enableZoom === false && scope.enablePan === false) return;\n        handleTouchMoveDollyPan(event);\n        scope.update();\n        break;\n\n      case STATE.TOUCH_DOLLY_ROTATE:\n        if (scope.enableZoom === false && scope.enableRotate === false) return;\n        handleTouchMoveDollyRotate(event);\n        scope.update();\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n  }\n\n  function onTouchEnd(event) {\n    if (scope.enabled === false) return;\n    handleTouchEnd(event);\n    scope.dispatchEvent(endEvent);\n    state = STATE.NONE;\n  }\n\n  function onContextMenu(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n  } //\n\n\n  scope.domElement.addEventListener('contextmenu', onContextMenu);\n  scope.domElement.addEventListener('pointerdown', onPointerDown);\n  scope.domElement.addEventListener('wheel', onMouseWheel);\n  scope.domElement.addEventListener('touchstart', onTouchStart);\n  scope.domElement.addEventListener('touchend', onTouchEnd);\n  scope.domElement.addEventListener('touchmove', onTouchMove); // force an update at start\n\n  this.update();\n};\n\nOrbitControls.prototype = Object.create(EventDispatcher.prototype);\nOrbitControls.prototype.constructor = OrbitControls; // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function MapControls(object, domElement) {\n  OrbitControls.call(this, object, domElement);\n  this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n  this.mouseButtons.LEFT = MOUSE.PAN;\n  this.mouseButtons.RIGHT = MOUSE.ROTATE;\n  this.touches.ONE = TOUCH.PAN;\n  this.touches.TWO = TOUCH.DOLLY_ROTATE;\n};\n\nMapControls.prototype = Object.create(EventDispatcher.prototype);\nMapControls.prototype.constructor = MapControls;\nexport { OrbitControls, MapControls };","map":{"version":3,"names":["EventDispatcher","MOUSE","Quaternion","Spherical","TOUCH","Vector2","Vector3","OrbitControls","object","domElement","undefined","console","warn","document","error","enabled","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","x","y","handleMouseMoveDolly","handleMouseMovePan","handleMouseUp","handleMouseWheel","handleKeyDown","needsUpdate","code","preventDefault","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","handleTouchEnd","pointerType","onMouseDown","onMouseMove","onMouseUp","focus","window","mouseAction","button","ctrlKey","metaKey","shiftKey","DOLLY_ROTATE","prototype","Object","create","constructor","MapControls","call"],"sources":["/Users/sam/Documents/CakeProject/node_modules/three/examples/jsm/controls/OrbitControls.js"],"sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from '../../../build/three.module.js';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function ( object, domElement ) {\n\n\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\tthis.object = object;\n\tthis.domElement = domElement;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.05;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t// Touch fingers\n\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t// the target DOM element for key events\n\tthis._domElementKeyEvents = null;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\tthis._domElementKeyEvents = domElement;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().invert();\n\n\t\tvar lastPosition = new Vector3();\n\t\tvar lastQuaternion = new Quaternion();\n\n\t\tvar twoPI = 2 * Math.PI;\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t} else {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t}\n\n\t\t\t// restrict theta to be between desired limits\n\n\t\t\tvar min = scope.minAzimuthAngle;\n\t\t\tvar max = scope.maxAzimuthAngle;\n\n\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t}\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove );\n\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t}\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = {\n\t\tNONE: - 1,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2,\n\t\tTOUCH_ROTATE: 3,\n\t\tTOUCH_PAN: 4,\n\t\tTOUCH_DOLLY_PAN: 5,\n\t\tTOUCH_DOLLY_ROTATE: 6\n\t};\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new Spherical();\n\tvar sphericalDelta = new Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new Vector2();\n\tvar rotateEnd = new Vector2();\n\tvar rotateDelta = new Vector2();\n\n\tvar panStart = new Vector2();\n\tvar panEnd = new Vector2();\n\tvar panDelta = new Vector2();\n\n\tvar dollyStart = new Vector2();\n\tvar dollyEnd = new Vector2();\n\tvar dollyDelta = new Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.code ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t}\n\n\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateEnd.set( x, y );\n\n\t\t}\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t}\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\tdollyOut( dollyDelta.y );\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t}\n\n\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t}\n\n\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onPointerDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseDown( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onPointerMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseMove( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onPointerUp( event ) {\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseUp( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onMouseDown( event ) {\n\n\t\t// Prevent the browser from scrolling.\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tvar mouseAction;\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase 0:\n\n\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\n\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tmouseAction = - 1;\n\n\t\t}\n\n\t\tswitch ( mouseAction ) {\n\n\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.PAN:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\n\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nOrbitControls.prototype = Object.create( EventDispatcher.prototype );\nOrbitControls.prototype.constructor = OrbitControls;\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function ( object, domElement ) {\n\n\tOrbitControls.call( this, object, domElement );\n\n\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\tthis.touches.ONE = TOUCH.PAN;\n\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n};\n\nMapControls.prototype = Object.create( EventDispatcher.prototype );\nMapControls.prototype.constructor = MapControls;\n\nexport { OrbitControls, MapControls };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
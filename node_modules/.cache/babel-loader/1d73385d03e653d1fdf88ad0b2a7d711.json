{"ast":null,"code":"import React,{useEffect}from\"react\";import{connect}from\"react-redux\";import{PropTypes}from\"prop-types\";import{FormControl,InputLabel,Select}from\"@material-ui/core\";import{makeStyles}from\"@material-ui/core/styles\";import{getCurrentProductData,getProductDataList,setCurrentProductData}from\"../../redux/actions/ProductActions\";import{setCurrentNodeData}from\"../../redux/actions/NodeActions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const useStyles=makeStyles(theme=>({formControl:{margin:theme.spacing(1),minWidth:120}}));const ProductSelector=props=>{var _productStore$current,_productStore$current2;const classes=useStyles();const{productStore,getCurrentProductData,getProductDataList,setCurrentProductData,setCurrentNodeData}=props;const options=productStore.productDataList.map(p=>{return/*#__PURE__*/_jsx(\"option\",{value:p.id,children:p.label},p.id);});useEffect(()=>{if(productStore.currentProductData){getCurrentProductData(productStore.currentProductData.path);}else{getCurrentProductData(null);}//Reset node\nsetCurrentNodeData(null);},[productStore.currentProductData]);useEffect(()=>{getProductDataList();},[]);return/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,className:classes.formControl,children:[/*#__PURE__*/_jsx(InputLabel,{shrink:true,variant:\"outlined\",id:\"product-selector\",children:\"Cake Topping\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"product-selector\",native:true,labelWidth:50,label:\"Cake Size\",variant:\"outlined\",style:{width:300},value:(_productStore$current=(_productStore$current2=productStore.currentProductData)===null||_productStore$current2===void 0?void 0:_productStore$current2.id)!==null&&_productStore$current!==void 0?_productStore$current:\"none\",onChange:event=>{setCurrentProductData(productStore.productDataList.find(p=>p.id===event.target.value));},children:[/*#__PURE__*/_jsx(\"option\",{value:\"none\",children:\"Select Cake Topping\"}),options]})]});};const mapStateToProps=state=>({productStore:state.productStore,getCurrentProductData:PropTypes.func.isRequired,getProductDataList:PropTypes.func.isRequired,setCurrentProductData:PropTypes.func.isRequired,setCurrentNodeData:PropTypes.func.isRequired});export default connect(mapStateToProps,{getCurrentProductData,getProductDataList,setCurrentProductData,setCurrentNodeData})(ProductSelector);","map":{"version":3,"names":["React","useEffect","connect","PropTypes","FormControl","InputLabel","Select","makeStyles","getCurrentProductData","getProductDataList","setCurrentProductData","setCurrentNodeData","useStyles","theme","formControl","margin","spacing","minWidth","ProductSelector","props","classes","productStore","options","productDataList","map","p","id","label","currentProductData","path","width","event","find","target","value","mapStateToProps","state","func","isRequired"],"sources":["/Users/sam/Documents/CakeProject/src/components/ProductSelector/ProductSelector.js"],"sourcesContent":["import React, {useEffect} from \"react\"\nimport {connect} from \"react-redux\"\nimport {PropTypes} from \"prop-types\"\nimport {FormControl, InputLabel, Select} from \"@material-ui/core\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {\n  getCurrentProductData,\n  getProductDataList,\n  setCurrentProductData\n} from \"../../redux/actions/ProductActions\"\nimport {setCurrentNodeData} from \"../../redux/actions/NodeActions\"\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}))\n\nconst ProductSelector = props => {\n  const classes = useStyles()\n\n  const {\n    productStore,\n    getCurrentProductData,\n    getProductDataList,\n    setCurrentProductData,\n    setCurrentNodeData,\n  } = props\n\n  const options = productStore.productDataList.map(p => {\n    return (\n      <option key={p.id} value={p.id}>\n        {p.label}\n      </option>\n    )\n  })\n\n  useEffect(() => {\n    if (productStore.currentProductData) {\n      getCurrentProductData(productStore.currentProductData.path)\n    } else {\n      getCurrentProductData(null)\n    }\n\n    //Reset node\n    setCurrentNodeData(null)\n\n    \n  }, [productStore.currentProductData])\n\n  useEffect(() => {\n    getProductDataList()\n  }, [])\n\n  return (\n    <FormControl fullWidth className={classes.formControl}>\n      <InputLabel shrink variant=\"outlined\" id=\"product-selector\">\n        Cake Topping\n      </InputLabel>\n      <Select\n        labelId=\"product-selector\"\n        native\n        labelWidth={50}\n        label=\"Cake Size\"\n        variant=\"outlined\"\n        style={{\n          width: 300\n        }}\n        value={productStore.currentProductData?.id ?? \"none\"}\n        onChange={event => {\n          \n          setCurrentProductData(\n            productStore.productDataList.find(p => p.id === event.target.value)\n          )\n        }}\n      >\n        <option value=\"none\">Select Cake Topping</option>\n        {options}\n      </Select>\n\n      \n    </FormControl>\n    \n\n  )\n}\n\nconst mapStateToProps = state => ({\n  productStore: state.productStore,\n  getCurrentProductData: PropTypes.func.isRequired,\n  getProductDataList: PropTypes.func.isRequired,\n  setCurrentProductData: PropTypes.func.isRequired,\n  setCurrentNodeData: PropTypes.func.isRequired,\n\n})\n\nexport default connect(mapStateToProps, {\n  getCurrentProductData,\n  getProductDataList,\n  setCurrentProductData,\n  setCurrentNodeData,\n})(ProductSelector)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { CURRENT_DRACO_VERSION, GET_CURRENT_PRODUCT_DATA, GET_PRODUCT_DATA_LIST, SET_CURRENT_PRODUCT_DATA } from \"../StoreConstants\";\nexport function getCurrentProductData(path) {\n  return dispatch => {\n    if (path) {\n      fetch(path).then(response => response.json()).then(data => {\n        dispatch({\n          type: GET_CURRENT_PRODUCT_DATA,\n          payload: data\n        });\n      });\n    } else {\n      dispatch({\n        type: GET_CURRENT_PRODUCT_DATA,\n        payload: null\n      });\n    }\n  };\n}\nexport function getProductDataList() {\n  return dispatch => {\n    fetch(\"/products/products.json\").then(response => response.json()).then(data => {\n      dispatch({\n        type: GET_PRODUCT_DATA_LIST,\n        payload: data\n      });\n    });\n  };\n}\nexport function setCurrentProductData(data) {\n  return dispatch => {\n    dispatch({\n      type: SET_CURRENT_PRODUCT_DATA,\n      payload: data\n    });\n  };\n}\nexport function setCurrentDracoVersion(data) {\n  return dispatch => {\n    dispatch({\n      type: CURRENT_DRACO_VERSION,\n      payload: data\n    });\n  };\n}","map":{"version":3,"names":["CURRENT_DRACO_VERSION","GET_CURRENT_PRODUCT_DATA","GET_PRODUCT_DATA_LIST","SET_CURRENT_PRODUCT_DATA","getCurrentProductData","path","dispatch","fetch","then","response","json","data","type","payload","getProductDataList","setCurrentProductData","setCurrentDracoVersion"],"sources":["/Users/sam/Documents/CakeProject/src/redux/actions/ProductActions.js"],"sourcesContent":["import {\n  CURRENT_DRACO_VERSION,\n  GET_CURRENT_PRODUCT_DATA,\n  GET_PRODUCT_DATA_LIST,\n  SET_CURRENT_PRODUCT_DATA\n} from \"../StoreConstants\"\n\nexport function getCurrentProductData(path) {\n  return dispatch => {\n    if (path) {\n      fetch(path)\n        .then(response => response.json())\n        .then(data => {\n          dispatch({\n            type: GET_CURRENT_PRODUCT_DATA,\n            payload: data\n          })\n        })\n    } else {\n      dispatch({\n        type: GET_CURRENT_PRODUCT_DATA,\n        payload: null\n      })\n    }\n  }\n}\n\nexport function getProductDataList() {\n  return dispatch => {\n    fetch(\"/products/products.json\")\n      .then(response => response.json())\n      .then(data => {\n        dispatch({\n          type: GET_PRODUCT_DATA_LIST,\n          payload: data\n        })\n      })\n  }\n}\n\nexport function setCurrentProductData(data) {\n  return dispatch => {\n    dispatch({\n      type: SET_CURRENT_PRODUCT_DATA,\n      payload: data\n    })\n  }\n}\n\nexport function setCurrentDracoVersion(data) {\n  return dispatch => {\n    dispatch({\n      type: CURRENT_DRACO_VERSION,\n      payload: data\n    })\n  }\n}\n"],"mappings":"AAAA,SACEA,qBADF,EAEEC,wBAFF,EAGEC,qBAHF,EAIEC,wBAJF,QAKO,mBALP;AAOA,OAAO,SAASC,qBAAT,CAA+BC,IAA/B,EAAqC;EAC1C,OAAOC,QAAQ,IAAI;IACjB,IAAID,IAAJ,EAAU;MACRE,KAAK,CAACF,IAAD,CAAL,CACGG,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;QACZL,QAAQ,CAAC;UACPM,IAAI,EAAEX,wBADC;UAEPY,OAAO,EAAEF;QAFF,CAAD,CAAR;MAID,CAPH;IAQD,CATD,MASO;MACLL,QAAQ,CAAC;QACPM,IAAI,EAAEX,wBADC;QAEPY,OAAO,EAAE;MAFF,CAAD,CAAR;IAID;EACF,CAhBD;AAiBD;AAED,OAAO,SAASC,kBAAT,GAA8B;EACnC,OAAOR,QAAQ,IAAI;IACjBC,KAAK,CAAC,yBAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;MACZL,QAAQ,CAAC;QACPM,IAAI,EAAEV,qBADC;QAEPW,OAAO,EAAEF;MAFF,CAAD,CAAR;IAID,CAPH;EAQD,CATD;AAUD;AAED,OAAO,SAASI,qBAAT,CAA+BJ,IAA/B,EAAqC;EAC1C,OAAOL,QAAQ,IAAI;IACjBA,QAAQ,CAAC;MACPM,IAAI,EAAET,wBADC;MAEPU,OAAO,EAAEF;IAFF,CAAD,CAAR;EAID,CALD;AAMD;AAED,OAAO,SAASK,sBAAT,CAAgCL,IAAhC,EAAsC;EAC3C,OAAOL,QAAQ,IAAI;IACjBA,QAAQ,CAAC;MACPM,IAAI,EAAEZ,qBADC;MAEPa,OAAO,EAAEF;IAFF,CAAD,CAAR;EAID,CALD;AAMD"},"metadata":{},"sourceType":"module"}
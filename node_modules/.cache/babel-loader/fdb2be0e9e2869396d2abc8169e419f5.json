{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Documents/CakeProject/src/components/ProductSelector/ProductSelector.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { FormControl, InputLabel, Select } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getCurrentProductData, getProductDataList, setCurrentProductData } from \"../../redux/actions/ProductActions\";\nimport { setCurrentNodeData } from \"../../redux/actions/NodeActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\n\nconst ProductSelector = props => {\n  _s();\n\n  var _productStore$current, _productStore$current2;\n\n  const classes = useStyles();\n  const {\n    productStore,\n    getCurrentProductData,\n    getProductDataList,\n    setCurrentProductData,\n    setCurrentNodeData\n  } = props;\n  const options = productStore.productDataList.map(p => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: p.id,\n      children: p.label\n    }, p.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  });\n  useEffect(() => {\n    if (productStore.currentProductData) {\n      getCurrentProductData(productStore.currentProductData.path);\n    } else {\n      getCurrentProductData(null);\n    } //Reset node\n\n\n    setCurrentNodeData(null);\n  }, [productStore.currentProductData]);\n  useEffect(() => {\n    getProductDataList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      shrink: true,\n      variant: \"outlined\",\n      id: \"product-selector\",\n      children: \"Cake Layers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      labelId: \"product-selector\",\n      native: true,\n      labelWidth: 50,\n      label: \"Select product\",\n      variant: \"outlined\",\n      style: {\n        width: 300\n      },\n      value: (_productStore$current = (_productStore$current2 = productStore.currentProductData) === null || _productStore$current2 === void 0 ? void 0 : _productStore$current2.id) !== null && _productStore$current !== void 0 ? _productStore$current : \"none\",\n      onChange: event => {\n        setCurrentProductData(productStore.productDataList.find(p => p.id === event.target.value));\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"none\",\n        children: \"Select Cake Layers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), options]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductSelector, \"e3X/1Rqsn7nblQK13ERnP9eN2qU=\", false, function () {\n  return [useStyles];\n});\n\n_c = ProductSelector;\n\nconst mapStateToProps = state => ({\n  productStore: state.productStore,\n  getCurrentProductData: PropTypes.func.isRequired,\n  getProductDataList: PropTypes.func.isRequired,\n  setCurrentProductData: PropTypes.func.isRequired,\n  setCurrentNodeData: PropTypes.func.isRequired\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProductData,\n  getProductDataList,\n  setCurrentProductData,\n  setCurrentNodeData,\n  setCurrentDecoData\n})(ProductSelector);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductSelector\");","map":{"version":3,"names":["React","useEffect","connect","PropTypes","FormControl","InputLabel","Select","makeStyles","getCurrentProductData","getProductDataList","setCurrentProductData","setCurrentNodeData","useStyles","theme","formControl","margin","spacing","minWidth","ProductSelector","props","classes","productStore","options","productDataList","map","p","id","label","currentProductData","path","width","event","find","target","value","mapStateToProps","state","func","isRequired","setCurrentDecoData"],"sources":["/Users/sam/Documents/CakeProject/src/components/ProductSelector/ProductSelector.js"],"sourcesContent":["import React, {useEffect} from \"react\"\nimport {connect} from \"react-redux\"\nimport {PropTypes} from \"prop-types\"\nimport {FormControl, InputLabel, Select} from \"@material-ui/core\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {\n  getCurrentProductData,\n  getProductDataList,\n  setCurrentProductData\n} from \"../../redux/actions/ProductActions\"\nimport {setCurrentNodeData} from \"../../redux/actions/NodeActions\"\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}))\n\nconst ProductSelector = props => {\n  const classes = useStyles()\n\n  const {\n    productStore,\n    getCurrentProductData,\n    getProductDataList,\n    setCurrentProductData,\n    setCurrentNodeData,\n  } = props\n\n  const options = productStore.productDataList.map(p => {\n    return (\n      <option key={p.id} value={p.id}>\n        {p.label}\n      </option>\n    )\n  })\n\n  useEffect(() => {\n    if (productStore.currentProductData) {\n      getCurrentProductData(productStore.currentProductData.path)\n    } else {\n      getCurrentProductData(null)\n    }\n\n    //Reset node\n    setCurrentNodeData(null)\n\n    \n  }, [productStore.currentProductData])\n\n  useEffect(() => {\n    getProductDataList()\n  }, [])\n\n  return (\n    <FormControl fullWidth className={classes.formControl}>\n      <InputLabel shrink variant=\"outlined\" id=\"product-selector\">\n        Cake Layers\n      </InputLabel>\n      <Select\n        labelId=\"product-selector\"\n        native\n        labelWidth={50}\n        label=\"Select product\"\n        variant=\"outlined\"\n        style={{\n          width: 300\n        }}\n        value={productStore.currentProductData?.id ?? \"none\"}\n        onChange={event => {\n          \n          setCurrentProductData(\n            productStore.productDataList.find(p => p.id === event.target.value)\n          )\n        }}\n      >\n        <option value=\"none\">Select Cake Layers</option>\n        {options}\n      </Select>\n    </FormControl>\n  )\n}\n\nconst mapStateToProps = state => ({\n  productStore: state.productStore,\n  getCurrentProductData: PropTypes.func.isRequired,\n  getProductDataList: PropTypes.func.isRequired,\n  setCurrentProductData: PropTypes.func.isRequired,\n  setCurrentNodeData: PropTypes.func.isRequired,\n\n})\n\nexport default connect(mapStateToProps, {\n  getCurrentProductData,\n  getProductDataList,\n  setCurrentProductData,\n  setCurrentNodeData,\n  setCurrentDecoData\n})(ProductSelector)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
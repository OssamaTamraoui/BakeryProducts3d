{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Documents/CakeProject/src/components/MeshSelector/MeshSelector.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { FormControl, InputLabel, Select } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setSelectedMeshData } from \"../../redux/actions/MeshActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\n\nconst MeshSelector = props => {\n  _s();\n\n  var _nodeStore$currentNod;\n\n  const classes = useStyles();\n  const {\n    meshStore,\n    nodeStore,\n    productStore,\n    setSelectedMeshData\n  } = props;\n  let options = (_nodeStore$currentNod = nodeStore.currentNodeData) === null || _nodeStore$currentNod === void 0 ? void 0 : _nodeStore$currentNod.candidateMeshes.map(n => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: n.id,\n      children: n.label\n    }, n.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  });\n  const [value, setValue] = useState(\"\");\n  useEffect(() => {\n    if (nodeStore.currentNodeData && meshStore.selectedMeshData) {\n      meshStore.selectedMeshData.forEach(data => {\n        if (data.nodeId === nodeStore.currentNodeData.id) {\n          setValue(data.meshId);\n        }\n      });\n    }\n  }, [nodeStore.currentNodeData, meshStore.selectedMeshData]);\n  return nodeStore.currentNodeData && /*#__PURE__*/_jsxDEV(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      shrink: true,\n      variant: \"outlined\",\n      id: \"mesh-selector\",\n      children: \"Select a mesh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      labelId: \"mesh-selector\",\n      native: true,\n      labelWidth: 50,\n      label: \"Select node\",\n      variant: \"outlined\",\n      style: {\n        width: 300\n      },\n      value: value,\n      onChange: event => {\n        if (nodeStore.currentNodeData && meshStore.selectedMeshData) {\n          const newData = [];\n          meshStore.selectedMeshData.forEach(data => {\n            if (data.nodeId === nodeStore.currentNodeData.id) {\n              data.meshId = event.target.value;\n            }\n\n            newData.push(data);\n          });\n          setSelectedMeshData(newData);\n        }\n      },\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n};\n\n_s(MeshSelector, \"ftA3TBMgl6L0AR9pt26fa3/bWW0=\", false, function () {\n  return [useStyles];\n});\n\n_c = MeshSelector;\n\nconst mapStateToProps = state => ({\n  meshStore: state.meshStore,\n  nodeStore: state.nodeStore,\n  productStore: state.productStore,\n  setSelectedMeshData: PropTypes.func.isRequired\n});\n\nexport default connect(mapStateToProps, {\n  setSelectedMeshData\n})(MeshSelector);\n\nvar _c;\n\n$RefreshReg$(_c, \"MeshSelector\");","map":{"version":3,"names":["React","useEffect","useState","connect","PropTypes","FormControl","InputLabel","Select","makeStyles","setSelectedMeshData","useStyles","theme","formControl","margin","spacing","minWidth","MeshSelector","props","classes","meshStore","nodeStore","productStore","options","currentNodeData","candidateMeshes","map","n","id","label","value","setValue","selectedMeshData","forEach","data","nodeId","meshId","width","event","newData","target","push","mapStateToProps","state","func","isRequired"],"sources":["/Users/sam/Documents/CakeProject/src/components/MeshSelector/MeshSelector.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport {connect} from \"react-redux\"\nimport {PropTypes} from \"prop-types\"\nimport {FormControl, InputLabel, Select} from \"@material-ui/core\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {setSelectedMeshData} from \"../../redux/actions/MeshActions\"\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}))\n\nconst MeshSelector = props => {\n  const classes = useStyles()\n  const {meshStore, nodeStore, productStore, setSelectedMeshData} = props\n  let options = nodeStore.currentNodeData?.candidateMeshes.map(n => {\n    return (\n      <option key={n.id} value={n.id}>\n        {n.label}\n      </option>\n    )\n  })\n\n  const [value, setValue] = useState(\"\")\n\n  useEffect(() => {\n    if (nodeStore.currentNodeData && meshStore.selectedMeshData) {\n      meshStore.selectedMeshData.forEach(data => {\n        if (data.nodeId === nodeStore.currentNodeData.id) {\n          setValue(data.meshId)\n        }\n      })\n    }\n  }, [nodeStore.currentNodeData, meshStore.selectedMeshData])\n\n  return (\n    nodeStore.currentNodeData && (\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel shrink variant=\"outlined\" id=\"mesh-selector\">\n          Select a mesh\n        </InputLabel>\n        <Select\n          labelId=\"mesh-selector\"\n          native\n          labelWidth={50}\n          label=\"Select node\"\n          variant=\"outlined\"\n          style={{\n            width: 300\n          }}\n          value={value}\n          onChange={event => {\n            if (nodeStore.currentNodeData && meshStore.selectedMeshData) {\n              const newData = []\n              meshStore.selectedMeshData.forEach(data => {\n                if (data.nodeId === nodeStore.currentNodeData.id) {\n                  data.meshId = event.target.value\n                }\n                newData.push(data)\n              })\n              setSelectedMeshData(newData)\n            }\n          }}\n        >\n          {options}\n        </Select>\n      </FormControl>\n    )\n  )\n}\n\nconst mapStateToProps = state => ({\n  meshStore: state.meshStore,\n  nodeStore: state.nodeStore,\n  productStore: state.productStore,\n  setSelectedMeshData: PropTypes.func.isRequired\n})\n\nexport default connect(mapStateToProps, {setSelectedMeshData})(MeshSelector)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import*as THREE from\"three\";import{SPACE_SIZE}from\"../Viewer3DConstants\";function ShadowPlane(){const geometry=new THREE.PlaneGeometry(SPACE_SIZE,SPACE_SIZE);geometry.rotateX(-Math.PI/2);const material=new THREE.ShadowMaterial();material.opacity=0.3;const groundMesh=new THREE.Mesh(geometry,material);groundMesh.name=\"GroundMesh\";groundMesh.position.y=0;groundMesh.receiveShadow=true;return groundMesh;}function FitCameraToSelection(camera,object,offset,controls){offset=offset||1.25;const boundingBox=new THREE.Box3();// get bounding box of object - this will be used to setup controls and camera\nboundingBox.setFromObject(object);const center=new THREE.Vector3();boundingBox.getCenter(center);const size=new THREE.Vector3();boundingBox.getSize(size);// get the max side of the bounding box (fits to width OR height as needed )\nconst maxDim=Math.max(size.x,size.y,size.z);var cameraZ=Math.abs(maxDim/4);cameraZ*=offset;// zoom out a little so that objects don't fill the screen\ncamera.position.z=cameraZ;const minZ=boundingBox.min.z;const cameraToFarEdge=minZ<0?-minZ+cameraZ:cameraZ-minZ;camera.far=cameraToFarEdge*3;camera.updateProjectionMatrix();if(controls){// set camera to rotate around center of loaded object\ncontrols.target=center;// prevent camera from zooming out far enough to create far plane cutoff\ncontrols.maxDistance=cameraToFarEdge*2;}else{camera.lookAt(center);}}export{ShadowPlane,FitCameraToSelection};","map":{"version":3,"names":["THREE","SPACE_SIZE","ShadowPlane","geometry","PlaneGeometry","rotateX","Math","PI","material","ShadowMaterial","opacity","groundMesh","Mesh","name","position","y","receiveShadow","FitCameraToSelection","camera","object","offset","controls","boundingBox","Box3","setFromObject","center","Vector3","getCenter","size","getSize","maxDim","max","x","z","cameraZ","abs","minZ","min","cameraToFarEdge","far","updateProjectionMatrix","target","maxDistance","lookAt"],"sources":["/Users/sam/Documents/CakeProject/src/components/Viewer3D/libs/Helpers.js"],"sourcesContent":["import * as THREE from \"three\"\nimport {SPACE_SIZE} from \"../Viewer3DConstants\"\n\nfunction ShadowPlane() {\n  const geometry = new THREE.PlaneGeometry(SPACE_SIZE, SPACE_SIZE)\n  geometry.rotateX(-Math.PI / 2)\n  const material = new THREE.ShadowMaterial()\n  material.opacity = 0.3\n  const groundMesh = new THREE.Mesh(geometry, material)\n  groundMesh.name = \"GroundMesh\"\n  groundMesh.position.y = 0\n  groundMesh.receiveShadow = true\n  return groundMesh\n}\n\nfunction FitCameraToSelection(camera, object, offset, controls) {\n  offset = offset || 1.25\n\n  const boundingBox = new THREE.Box3()\n\n  // get bounding box of object - this will be used to setup controls and camera\n  boundingBox.setFromObject(object)\n\n  const center = new THREE.Vector3()\n\n  boundingBox.getCenter(center)\n\n  const size = new THREE.Vector3()\n  boundingBox.getSize(size)\n\n  // get the max side of the bounding box (fits to width OR height as needed )\n  const maxDim = Math.max(size.x, size.y, size.z)\n\n  var cameraZ = Math.abs(maxDim / 4)\n\n  cameraZ *= offset // zoom out a little so that objects don't fill the screen\n\n  camera.position.z = cameraZ\n\n  const minZ = boundingBox.min.z\n  const cameraToFarEdge = minZ < 0 ? -minZ + cameraZ : cameraZ - minZ\n\n  camera.far = cameraToFarEdge * 3\n  camera.updateProjectionMatrix()\n\n  if (controls) {\n    // set camera to rotate around center of loaded object\n    controls.target = center\n    // prevent camera from zooming out far enough to create far plane cutoff\n    controls.maxDistance = cameraToFarEdge * 2\n  } else {\n    camera.lookAt(center)\n  }\n}\n\nexport {ShadowPlane, FitCameraToSelection}\n"],"mappings":"AAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CACA,OAAQC,UAAR,KAAyB,sBAAzB,CAEA,QAASC,YAAT,EAAuB,CACrB,KAAMC,SAAQ,CAAG,GAAIH,MAAK,CAACI,aAAV,CAAwBH,UAAxB,CAAoCA,UAApC,CAAjB,CACAE,QAAQ,CAACE,OAAT,CAAiB,CAACC,IAAI,CAACC,EAAN,CAAW,CAA5B,EACA,KAAMC,SAAQ,CAAG,GAAIR,MAAK,CAACS,cAAV,EAAjB,CACAD,QAAQ,CAACE,OAAT,CAAmB,GAAnB,CACA,KAAMC,WAAU,CAAG,GAAIX,MAAK,CAACY,IAAV,CAAeT,QAAf,CAAyBK,QAAzB,CAAnB,CACAG,UAAU,CAACE,IAAX,CAAkB,YAAlB,CACAF,UAAU,CAACG,QAAX,CAAoBC,CAApB,CAAwB,CAAxB,CACAJ,UAAU,CAACK,aAAX,CAA2B,IAA3B,CACA,MAAOL,WAAP,CACD,CAED,QAASM,qBAAT,CAA8BC,MAA9B,CAAsCC,MAAtC,CAA8CC,MAA9C,CAAsDC,QAAtD,CAAgE,CAC9DD,MAAM,CAAGA,MAAM,EAAI,IAAnB,CAEA,KAAME,YAAW,CAAG,GAAItB,MAAK,CAACuB,IAAV,EAApB,CAEA;AACAD,WAAW,CAACE,aAAZ,CAA0BL,MAA1B,EAEA,KAAMM,OAAM,CAAG,GAAIzB,MAAK,CAAC0B,OAAV,EAAf,CAEAJ,WAAW,CAACK,SAAZ,CAAsBF,MAAtB,EAEA,KAAMG,KAAI,CAAG,GAAI5B,MAAK,CAAC0B,OAAV,EAAb,CACAJ,WAAW,CAACO,OAAZ,CAAoBD,IAApB,EAEA;AACA,KAAME,OAAM,CAAGxB,IAAI,CAACyB,GAAL,CAASH,IAAI,CAACI,CAAd,CAAiBJ,IAAI,CAACb,CAAtB,CAAyBa,IAAI,CAACK,CAA9B,CAAf,CAEA,GAAIC,QAAO,CAAG5B,IAAI,CAAC6B,GAAL,CAASL,MAAM,CAAG,CAAlB,CAAd,CAEAI,OAAO,EAAId,MAAX,CAAkB;AAElBF,MAAM,CAACJ,QAAP,CAAgBmB,CAAhB,CAAoBC,OAApB,CAEA,KAAME,KAAI,CAAGd,WAAW,CAACe,GAAZ,CAAgBJ,CAA7B,CACA,KAAMK,gBAAe,CAAGF,IAAI,CAAG,CAAP,CAAW,CAACA,IAAD,CAAQF,OAAnB,CAA6BA,OAAO,CAAGE,IAA/D,CAEAlB,MAAM,CAACqB,GAAP,CAAaD,eAAe,CAAG,CAA/B,CACApB,MAAM,CAACsB,sBAAP,GAEA,GAAInB,QAAJ,CAAc,CACZ;AACAA,QAAQ,CAACoB,MAAT,CAAkBhB,MAAlB,CACA;AACAJ,QAAQ,CAACqB,WAAT,CAAuBJ,eAAe,CAAG,CAAzC,CACD,CALD,IAKO,CACLpB,MAAM,CAACyB,MAAP,CAAclB,MAAd,EACD,CACF,CAED,OAAQvB,WAAR,CAAqBe,oBAArB"},"metadata":{},"sourceType":"module"}
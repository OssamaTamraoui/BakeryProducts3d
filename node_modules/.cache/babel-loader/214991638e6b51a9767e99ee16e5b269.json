{"ast":null,"code":"import{NoBlending,ShaderMaterial,Uniform}from\"three\";import fragmentShader from\"./glsl/copy/shader.frag\";import vertexShader from\"./glsl/common/shader.vert\";/**\n * A simple copy shader material.\n */export class CopyMaterial extends ShaderMaterial{/**\n   * Constructs a new copy material.\n   */constructor(){super({type:\"CopyMaterial\",uniforms:{inputBuffer:new Uniform(null),opacity:new Uniform(1.0)},fragmentShader,vertexShader,blending:NoBlending,depthWrite:false,depthTest:false});/** @ignore */this.toneMapped=false;}}","map":{"version":3,"names":["NoBlending","ShaderMaterial","Uniform","fragmentShader","vertexShader","CopyMaterial","constructor","type","uniforms","inputBuffer","opacity","blending","depthWrite","depthTest","toneMapped"],"sources":["/Users/sam/Documents/CakeProject/src/components/Viewer3D/libs/CopyMaterial.js"],"sourcesContent":["import {NoBlending, ShaderMaterial, Uniform} from \"three\"\n\nimport fragmentShader from \"./glsl/copy/shader.frag\"\nimport vertexShader from \"./glsl/common/shader.vert\"\n\n/**\n * A simple copy shader material.\n */\n\nexport class CopyMaterial extends ShaderMaterial {\n  /**\n   * Constructs a new copy material.\n   */\n\n  constructor() {\n    super({\n      type: \"CopyMaterial\",\n\n      uniforms: {\n        inputBuffer: new Uniform(null),\n        opacity: new Uniform(1.0)\n      },\n\n      fragmentShader,\n      vertexShader,\n\n      blending: NoBlending,\n      depthWrite: false,\n      depthTest: false\n    })\n\n    /** @ignore */\n    this.toneMapped = false\n  }\n}\n"],"mappings":"AAAA,OAAQA,UAAR,CAAoBC,cAApB,CAAoCC,OAApC,KAAkD,OAAlD,CAEA,MAAOC,eAAP,KAA2B,yBAA3B,CACA,MAAOC,aAAP,KAAyB,2BAAzB,CAEA;AACA;AACA,GAEA,MAAO,MAAMC,aAAN,QAA2BJ,eAAe,CAC/C;AACF;AACA,KAEEK,WAAW,EAAG,CACZ,MAAM,CACJC,IAAI,CAAE,cADF,CAGJC,QAAQ,CAAE,CACRC,WAAW,CAAE,GAAIP,QAAJ,CAAY,IAAZ,CADL,CAERQ,OAAO,CAAE,GAAIR,QAAJ,CAAY,GAAZ,CAFD,CAHN,CAQJC,cARI,CASJC,YATI,CAWJO,QAAQ,CAAEX,UAXN,CAYJY,UAAU,CAAE,KAZR,CAaJC,SAAS,CAAE,KAbP,CAAN,EAgBA,cACA,KAAKC,UAAL,CAAkB,KAAlB,CACD,CAxB8C"},"metadata":{},"sourceType":"module"}
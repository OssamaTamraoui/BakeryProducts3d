{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Documents/CakeProject/src/components/DracoSelector/DracoSelector.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { FormControl, InputLabel, Select } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setCurrentDracoVersion } from \"../../redux/actions/ProductActions\";\nimport { DRACO_VERSION_LIST } from \"../../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\n\nconst DracoSelector = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    productStore,\n    setCurrentDracoVersion\n  } = props;\n  const options = DRACO_VERSION_LIST.map(p => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: p.id,\n      children: p.label\n    }, p.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      shrink: true,\n      variant: \"outlined\",\n      id: \"draco-selector\",\n      children: \"Select a compression version\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      labelId: \"draco-selector\",\n      native: true,\n      labelWidth: 50,\n      label: \"\",\n      variant: \"outlined\",\n      style: {\n        width: 300\n      },\n      value: productStore.currentDracoVersion,\n      onChange: event => {\n        setCurrentDracoVersion(event.target.value);\n      },\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DracoSelector, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = DracoSelector;\n\nconst mapStateToProps = state => ({\n  productStore: state.productStore,\n  setCurrentDracoVersion: PropTypes.func.isRequired\n});\n\nexport default connect(mapStateToProps, {\n  setCurrentDracoVersion\n})(DracoSelector);\n\nvar _c;\n\n$RefreshReg$(_c, \"DracoSelector\");","map":{"version":3,"names":["React","connect","PropTypes","FormControl","InputLabel","Select","makeStyles","setCurrentDracoVersion","DRACO_VERSION_LIST","useStyles","theme","formControl","margin","spacing","minWidth","DracoSelector","props","classes","productStore","options","map","p","id","label","width","currentDracoVersion","event","target","value","mapStateToProps","state","func","isRequired"],"sources":["/Users/sam/Documents/CakeProject/src/components/DracoSelector/DracoSelector.js"],"sourcesContent":["import React from \"react\"\nimport {connect} from \"react-redux\"\nimport {PropTypes} from \"prop-types\"\nimport {FormControl, InputLabel, Select} from \"@material-ui/core\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {setCurrentDracoVersion} from \"../../redux/actions/ProductActions\"\nimport {DRACO_VERSION_LIST} from \"../../constants\"\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}))\n\nconst DracoSelector = props => {\n  const classes = useStyles()\n  const {productStore, setCurrentDracoVersion} = props\n  const options = DRACO_VERSION_LIST.map(p => {\n    return (\n      <option key={p.id} value={p.id}>\n        {p.label}\n      </option>\n    )\n  })\n\n  return (\n    <FormControl fullWidth className={classes.formControl}>\n      <InputLabel shrink variant=\"outlined\" id=\"draco-selector\">\n        Select a compression version\n      </InputLabel>\n      <Select\n        labelId=\"draco-selector\"\n        native\n        labelWidth={50}\n        label=\"\"\n        variant=\"outlined\"\n        style={{\n          width: 300\n        }}\n        value={productStore.currentDracoVersion}\n        onChange={event => {\n          setCurrentDracoVersion(event.target.value)\n        }}\n      >\n        {options}\n      </Select>\n    </FormControl>\n  )\n}\n\nconst mapStateToProps = state => ({\n  productStore: state.productStore,\n  setCurrentDracoVersion: PropTypes.func.isRequired\n})\n\nexport default connect(mapStateToProps, {\n  setCurrentDracoVersion\n})(DracoSelector)\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,SAAQC,WAAR,EAAqBC,UAArB,EAAiCC,MAAjC,QAA8C,mBAA9C;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SAAQC,sBAAR,QAAqC,oCAArC;AACA,SAAQC,kBAAR,QAAiC,iBAAjC;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,KAAK;EACrCC,WAAW,EAAE;IACXC,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADG;IAEXC,QAAQ,EAAE;EAFC;AADwB,CAAL,CAAN,CAA5B;;AAOA,MAAMC,aAAa,GAAGC,KAAK,IAAI;EAAA;;EAC7B,MAAMC,OAAO,GAAGR,SAAS,EAAzB;EACA,MAAM;IAACS,YAAD;IAAeX;EAAf,IAAyCS,KAA/C;EACA,MAAMG,OAAO,GAAGX,kBAAkB,CAACY,GAAnB,CAAuBC,CAAC,IAAI;IAC1C,oBACE;MAAmB,KAAK,EAAEA,CAAC,CAACC,EAA5B;MAAA,UACGD,CAAC,CAACE;IADL,GAAaF,CAAC,CAACC,EAAf;MAAA;MAAA;MAAA;IAAA,QADF;EAKD,CANe,CAAhB;EAQA,oBACE,QAAC,WAAD;IAAa,SAAS,MAAtB;IAAuB,SAAS,EAAEL,OAAO,CAACN,WAA1C;IAAA,wBACE,QAAC,UAAD;MAAY,MAAM,MAAlB;MAAmB,OAAO,EAAC,UAA3B;MAAsC,EAAE,EAAC,gBAAzC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,MAAD;MACE,OAAO,EAAC,gBADV;MAEE,MAAM,MAFR;MAGE,UAAU,EAAE,EAHd;MAIE,KAAK,EAAC,EAJR;MAKE,OAAO,EAAC,UALV;MAME,KAAK,EAAE;QACLa,KAAK,EAAE;MADF,CANT;MASE,KAAK,EAAEN,YAAY,CAACO,mBATtB;MAUE,QAAQ,EAAEC,KAAK,IAAI;QACjBnB,sBAAsB,CAACmB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAtB;MACD,CAZH;MAAA,UAcGT;IAdH;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CAlCD;;GAAMJ,a;UACYN,S;;;KADZM,a;;AAoCN,MAAMc,eAAe,GAAGC,KAAK,KAAK;EAChCZ,YAAY,EAAEY,KAAK,CAACZ,YADY;EAEhCX,sBAAsB,EAAEL,SAAS,CAAC6B,IAAV,CAAeC;AAFP,CAAL,CAA7B;;AAKA,eAAe/B,OAAO,CAAC4B,eAAD,EAAkB;EACtCtB;AADsC,CAAlB,CAAP,CAEZQ,aAFY,CAAf"},"metadata":{},"sourceType":"module"}
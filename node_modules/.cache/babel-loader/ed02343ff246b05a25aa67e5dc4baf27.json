{"ast":null,"code":"import { Quaternion } from '../math/Quaternion.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { EventDispatcher } from './EventDispatcher.js';\nimport { Euler } from '../math/Euler.js';\nimport { Layers } from './Layers.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { MathUtils } from '../math/MathUtils.js';\nlet _object3DId = 0;\n\nconst _v1 = new Vector3();\n\nconst _q1 = new Quaternion();\n\nconst _m1 = new Matrix4();\n\nconst _target = new Vector3();\n\nconst _position = new Vector3();\n\nconst _scale = new Vector3();\n\nconst _quaternion = new Quaternion();\n\nconst _xAxis = new Vector3(1, 0, 0);\n\nconst _yAxis = new Vector3(0, 1, 0);\n\nconst _zAxis = new Vector3(0, 0, 1);\n\nconst _addedEvent = {\n  type: 'added'\n};\nconst _removedEvent = {\n  type: 'removed'\n};\n\nfunction Object3D() {\n  Object.defineProperty(this, 'id', {\n    value: _object3DId++\n  });\n  this.uuid = MathUtils.generateUUID();\n  this.name = '';\n  this.type = 'Object3D';\n  this.parent = null;\n  this.children = [];\n  this.up = Object3D.DefaultUp.clone();\n  const position = new Vector3();\n  const rotation = new Euler();\n  const quaternion = new Quaternion();\n  const scale = new Vector3(1, 1, 1);\n\n  function onRotationChange() {\n    quaternion.setFromEuler(rotation, false);\n  }\n\n  function onQuaternionChange() {\n    rotation.setFromQuaternion(quaternion, undefined, false);\n  }\n\n  rotation._onChange(onRotationChange);\n\n  quaternion._onChange(onQuaternionChange);\n\n  Object.defineProperties(this, {\n    position: {\n      configurable: true,\n      enumerable: true,\n      value: position\n    },\n    rotation: {\n      configurable: true,\n      enumerable: true,\n      value: rotation\n    },\n    quaternion: {\n      configurable: true,\n      enumerable: true,\n      value: quaternion\n    },\n    scale: {\n      configurable: true,\n      enumerable: true,\n      value: scale\n    },\n    modelViewMatrix: {\n      value: new Matrix4()\n    },\n    normalMatrix: {\n      value: new Matrix3()\n    }\n  });\n  this.matrix = new Matrix4();\n  this.matrixWorld = new Matrix4();\n  this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n  this.matrixWorldNeedsUpdate = false;\n  this.layers = new Layers();\n  this.visible = true;\n  this.castShadow = false;\n  this.receiveShadow = false;\n  this.frustumCulled = true;\n  this.renderOrder = 0;\n  this.animations = [];\n  this.userData = {};\n}\n\nObject3D.DefaultUp = new Vector3(0, 1, 0);\nObject3D.DefaultMatrixAutoUpdate = true;\nObject3D.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n  constructor: Object3D,\n  isObject3D: true,\n  onBeforeRender: function onBeforeRender() {},\n  onAfterRender: function onAfterRender() {},\n  applyMatrix4: function applyMatrix4(matrix) {\n    if (this.matrixAutoUpdate) this.updateMatrix();\n    this.matrix.premultiply(matrix);\n    this.matrix.decompose(this.position, this.quaternion, this.scale);\n  },\n  applyQuaternion: function applyQuaternion(q) {\n    this.quaternion.premultiply(q);\n    return this;\n  },\n  setRotationFromAxisAngle: function setRotationFromAxisAngle(axis, angle) {\n    // assumes axis is normalized\n    this.quaternion.setFromAxisAngle(axis, angle);\n  },\n  setRotationFromEuler: function setRotationFromEuler(euler) {\n    this.quaternion.setFromEuler(euler, true);\n  },\n  setRotationFromMatrix: function setRotationFromMatrix(m) {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    this.quaternion.setFromRotationMatrix(m);\n  },\n  setRotationFromQuaternion: function setRotationFromQuaternion(q) {\n    // assumes q is normalized\n    this.quaternion.copy(q);\n  },\n  rotateOnAxis: function rotateOnAxis(axis, angle) {\n    // rotate object on axis in object space\n    // axis is assumed to be normalized\n    _q1.setFromAxisAngle(axis, angle);\n\n    this.quaternion.multiply(_q1);\n    return this;\n  },\n  rotateOnWorldAxis: function rotateOnWorldAxis(axis, angle) {\n    // rotate object on axis in world space\n    // axis is assumed to be normalized\n    // method assumes no rotated parent\n    _q1.setFromAxisAngle(axis, angle);\n\n    this.quaternion.premultiply(_q1);\n    return this;\n  },\n  rotateX: function rotateX(angle) {\n    return this.rotateOnAxis(_xAxis, angle);\n  },\n  rotateY: function rotateY(angle) {\n    return this.rotateOnAxis(_yAxis, angle);\n  },\n  rotateZ: function rotateZ(angle) {\n    return this.rotateOnAxis(_zAxis, angle);\n  },\n  translateOnAxis: function translateOnAxis(axis, distance) {\n    // translate object by distance along axis in object space\n    // axis is assumed to be normalized\n    _v1.copy(axis).applyQuaternion(this.quaternion);\n\n    this.position.add(_v1.multiplyScalar(distance));\n    return this;\n  },\n  translateX: function translateX(distance) {\n    return this.translateOnAxis(_xAxis, distance);\n  },\n  translateY: function translateY(distance) {\n    return this.translateOnAxis(_yAxis, distance);\n  },\n  translateZ: function translateZ(distance) {\n    return this.translateOnAxis(_zAxis, distance);\n  },\n  localToWorld: function localToWorld(vector) {\n    return vector.applyMatrix4(this.matrixWorld);\n  },\n  worldToLocal: function worldToLocal(vector) {\n    return vector.applyMatrix4(_m1.copy(this.matrixWorld).invert());\n  },\n  lookAt: function lookAt(x, y, z) {\n    // This method does not support objects having non-uniformly-scaled parent(s)\n    if (x.isVector3) {\n      _target.copy(x);\n    } else {\n      _target.set(x, y, z);\n    }\n\n    const parent = this.parent;\n    this.updateWorldMatrix(true, false);\n\n    _position.setFromMatrixPosition(this.matrixWorld);\n\n    if (this.isCamera || this.isLight) {\n      _m1.lookAt(_position, _target, this.up);\n    } else {\n      _m1.lookAt(_target, _position, this.up);\n    }\n\n    this.quaternion.setFromRotationMatrix(_m1);\n\n    if (parent) {\n      _m1.extractRotation(parent.matrixWorld);\n\n      _q1.setFromRotationMatrix(_m1);\n\n      this.quaternion.premultiply(_q1.invert());\n    }\n  },\n  add: function add(object) {\n    if (arguments.length > 1) {\n      for (let i = 0; i < arguments.length; i++) {\n        this.add(arguments[i]);\n      }\n\n      return this;\n    }\n\n    if (object === this) {\n      console.error('THREE.Object3D.add: object can\\'t be added as a child of itself.', object);\n      return this;\n    }\n\n    if (object && object.isObject3D) {\n      if (object.parent !== null) {\n        object.parent.remove(object);\n      }\n\n      object.parent = this;\n      this.children.push(object);\n      object.dispatchEvent(_addedEvent);\n    } else {\n      console.error('THREE.Object3D.add: object not an instance of THREE.Object3D.', object);\n    }\n\n    return this;\n  },\n  remove: function remove(object) {\n    if (arguments.length > 1) {\n      for (let i = 0; i < arguments.length; i++) {\n        this.remove(arguments[i]);\n      }\n\n      return this;\n    }\n\n    const index = this.children.indexOf(object);\n\n    if (index !== -1) {\n      object.parent = null;\n      this.children.splice(index, 1);\n      object.dispatchEvent(_removedEvent);\n    }\n\n    return this;\n  },\n  clear: function clear() {\n    for (let i = 0; i < this.children.length; i++) {\n      const object = this.children[i];\n      object.parent = null;\n      object.dispatchEvent(_removedEvent);\n    }\n\n    this.children.length = 0;\n    return this;\n  },\n  attach: function attach(object) {\n    // adds object as a child of this, while maintaining the object's world transform\n    this.updateWorldMatrix(true, false);\n\n    _m1.copy(this.matrixWorld).invert();\n\n    if (object.parent !== null) {\n      object.parent.updateWorldMatrix(true, false);\n\n      _m1.multiply(object.parent.matrixWorld);\n    }\n\n    object.applyMatrix4(_m1);\n    this.add(object);\n    object.updateWorldMatrix(false, true);\n    return this;\n  },\n  getObjectById: function getObjectById(id) {\n    return this.getObjectByProperty('id', id);\n  },\n  getObjectByName: function getObjectByName(name) {\n    return this.getObjectByProperty('name', name);\n  },\n  getObjectByProperty: function getObjectByProperty(name, value) {\n    if (this[name] === value) return this;\n\n    for (let i = 0, l = this.children.length; i < l; i++) {\n      const child = this.children[i];\n      const object = child.getObjectByProperty(name, value);\n\n      if (object !== undefined) {\n        return object;\n      }\n    }\n\n    return undefined;\n  },\n  getWorldPosition: function getWorldPosition(target) {\n    if (target === undefined) {\n      console.warn('THREE.Object3D: .getWorldPosition() target is now required');\n      target = new Vector3();\n    }\n\n    this.updateWorldMatrix(true, false);\n    return target.setFromMatrixPosition(this.matrixWorld);\n  },\n  getWorldQuaternion: function getWorldQuaternion(target) {\n    if (target === undefined) {\n      console.warn('THREE.Object3D: .getWorldQuaternion() target is now required');\n      target = new Quaternion();\n    }\n\n    this.updateWorldMatrix(true, false);\n    this.matrixWorld.decompose(_position, target, _scale);\n    return target;\n  },\n  getWorldScale: function getWorldScale(target) {\n    if (target === undefined) {\n      console.warn('THREE.Object3D: .getWorldScale() target is now required');\n      target = new Vector3();\n    }\n\n    this.updateWorldMatrix(true, false);\n    this.matrixWorld.decompose(_position, _quaternion, target);\n    return target;\n  },\n  getWorldDirection: function getWorldDirection(target) {\n    if (target === undefined) {\n      console.warn('THREE.Object3D: .getWorldDirection() target is now required');\n      target = new Vector3();\n    }\n\n    this.updateWorldMatrix(true, false);\n    const e = this.matrixWorld.elements;\n    return target.set(e[8], e[9], e[10]).normalize();\n  },\n  raycast: function raycast() {},\n  traverse: function traverse(callback) {\n    callback(this);\n    const children = this.children;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      children[i].traverse(callback);\n    }\n  },\n  traverseVisible: function traverseVisible(callback) {\n    if (this.visible === false) return;\n    callback(this);\n    const children = this.children;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      children[i].traverseVisible(callback);\n    }\n  },\n  traverseAncestors: function traverseAncestors(callback) {\n    const parent = this.parent;\n\n    if (parent !== null) {\n      callback(parent);\n      parent.traverseAncestors(callback);\n    }\n  },\n  updateMatrix: function updateMatrix() {\n    this.matrix.compose(this.position, this.quaternion, this.scale);\n    this.matrixWorldNeedsUpdate = true;\n  },\n  updateMatrixWorld: function updateMatrixWorld(force) {\n    if (this.matrixAutoUpdate) this.updateMatrix();\n\n    if (this.matrixWorldNeedsUpdate || force) {\n      if (this.parent === null) {\n        this.matrixWorld.copy(this.matrix);\n      } else {\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n      }\n\n      this.matrixWorldNeedsUpdate = false;\n      force = true;\n    } // update children\n\n\n    const children = this.children;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      children[i].updateMatrixWorld(force);\n    }\n  },\n  updateWorldMatrix: function updateWorldMatrix(updateParents, updateChildren) {\n    const parent = this.parent;\n\n    if (updateParents === true && parent !== null) {\n      parent.updateWorldMatrix(true, false);\n    }\n\n    if (this.matrixAutoUpdate) this.updateMatrix();\n\n    if (this.parent === null) {\n      this.matrixWorld.copy(this.matrix);\n    } else {\n      this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n    } // update children\n\n\n    if (updateChildren === true) {\n      const children = this.children;\n\n      for (let i = 0, l = children.length; i < l; i++) {\n        children[i].updateWorldMatrix(false, true);\n      }\n    }\n  },\n  toJSON: function toJSON(meta) {\n    // meta is a string when called from JSON.stringify\n    const isRootObject = meta === undefined || typeof meta === 'string';\n    const output = {}; // meta is a hash used to collect geometries, materials.\n    // not providing it implies that this is the root object\n    // being serialized.\n\n    if (isRootObject) {\n      // initialize meta obj\n      meta = {\n        geometries: {},\n        materials: {},\n        textures: {},\n        images: {},\n        shapes: {},\n        skeletons: {},\n        animations: {}\n      };\n      output.metadata = {\n        version: 4.5,\n        type: 'Object',\n        generator: 'Object3D.toJSON'\n      };\n    } // standard Object3D serialization\n\n\n    const object = {};\n    object.uuid = this.uuid;\n    object.type = this.type;\n    if (this.name !== '') object.name = this.name;\n    if (this.castShadow === true) object.castShadow = true;\n    if (this.receiveShadow === true) object.receiveShadow = true;\n    if (this.visible === false) object.visible = false;\n    if (this.frustumCulled === false) object.frustumCulled = false;\n    if (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n    if (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n    object.layers = this.layers.mask;\n    object.matrix = this.matrix.toArray();\n    if (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; // object specific properties\n\n    if (this.isInstancedMesh) {\n      object.type = 'InstancedMesh';\n      object.count = this.count;\n      object.instanceMatrix = this.instanceMatrix.toJSON();\n      if (this.instanceColor !== null) object.instanceColor = this.instanceColor.toJSON();\n    } //\n\n\n    function serialize(library, element) {\n      if (library[element.uuid] === undefined) {\n        library[element.uuid] = element.toJSON(meta);\n      }\n\n      return element.uuid;\n    }\n\n    if (this.isMesh || this.isLine || this.isPoints) {\n      object.geometry = serialize(meta.geometries, this.geometry);\n      const parameters = this.geometry.parameters;\n\n      if (parameters !== undefined && parameters.shapes !== undefined) {\n        const shapes = parameters.shapes;\n\n        if (Array.isArray(shapes)) {\n          for (let i = 0, l = shapes.length; i < l; i++) {\n            const shape = shapes[i];\n            serialize(meta.shapes, shape);\n          }\n        } else {\n          serialize(meta.shapes, shapes);\n        }\n      }\n    }\n\n    if (this.isSkinnedMesh) {\n      object.bindMode = this.bindMode;\n      object.bindMatrix = this.bindMatrix.toArray();\n\n      if (this.skeleton !== undefined) {\n        serialize(meta.skeletons, this.skeleton);\n        object.skeleton = this.skeleton.uuid;\n      }\n    }\n\n    if (this.material !== undefined) {\n      if (Array.isArray(this.material)) {\n        const uuids = [];\n\n        for (let i = 0, l = this.material.length; i < l; i++) {\n          uuids.push(serialize(meta.materials, this.material[i]));\n        }\n\n        object.material = uuids;\n      } else {\n        object.material = serialize(meta.materials, this.material);\n      }\n    } //\n\n\n    if (this.children.length > 0) {\n      object.children = [];\n\n      for (let i = 0; i < this.children.length; i++) {\n        object.children.push(this.children[i].toJSON(meta).object);\n      }\n    } //\n\n\n    if (this.animations.length > 0) {\n      object.animations = [];\n\n      for (let i = 0; i < this.animations.length; i++) {\n        const animation = this.animations[i];\n        object.animations.push(serialize(meta.animations, animation));\n      }\n    }\n\n    if (isRootObject) {\n      const geometries = extractFromCache(meta.geometries);\n      const materials = extractFromCache(meta.materials);\n      const textures = extractFromCache(meta.textures);\n      const images = extractFromCache(meta.images);\n      const shapes = extractFromCache(meta.shapes);\n      const skeletons = extractFromCache(meta.skeletons);\n      const animations = extractFromCache(meta.animations);\n      if (geometries.length > 0) output.geometries = geometries;\n      if (materials.length > 0) output.materials = materials;\n      if (textures.length > 0) output.textures = textures;\n      if (images.length > 0) output.images = images;\n      if (shapes.length > 0) output.shapes = shapes;\n      if (skeletons.length > 0) output.skeletons = skeletons;\n      if (animations.length > 0) output.animations = animations;\n    }\n\n    output.object = object;\n    return output; // extract data from the cache hash\n    // remove metadata on each item\n    // and return as array\n\n    function extractFromCache(cache) {\n      const values = [];\n\n      for (const key in cache) {\n        const data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n  },\n  clone: function clone(recursive) {\n    return new this.constructor().copy(this, recursive);\n  },\n  copy: function copy(source) {\n    let recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.name = source.name;\n    this.up.copy(source.up);\n    this.position.copy(source.position);\n    this.rotation.order = source.rotation.order;\n    this.quaternion.copy(source.quaternion);\n    this.scale.copy(source.scale);\n    this.matrix.copy(source.matrix);\n    this.matrixWorld.copy(source.matrixWorld);\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n    this.layers.mask = source.layers.mask;\n    this.visible = source.visible;\n    this.castShadow = source.castShadow;\n    this.receiveShadow = source.receiveShadow;\n    this.frustumCulled = source.frustumCulled;\n    this.renderOrder = source.renderOrder;\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n\n    if (recursive === true) {\n      for (let i = 0; i < source.children.length; i++) {\n        const child = source.children[i];\n        this.add(child.clone());\n      }\n    }\n\n    return this;\n  }\n});\nexport { Object3D };","map":{"version":3,"names":["Quaternion","Vector3","Matrix4","EventDispatcher","Euler","Layers","Matrix3","MathUtils","_object3DId","_v1","_q1","_m1","_target","_position","_scale","_quaternion","_xAxis","_yAxis","_zAxis","_addedEvent","type","_removedEvent","Object3D","Object","defineProperty","value","uuid","generateUUID","name","parent","children","up","DefaultUp","clone","position","rotation","quaternion","scale","onRotationChange","setFromEuler","onQuaternionChange","setFromQuaternion","undefined","_onChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","matrix","matrixWorld","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","layers","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","userData","prototype","assign","create","constructor","isObject3D","onBeforeRender","onAfterRender","applyMatrix4","updateMatrix","premultiply","decompose","applyQuaternion","q","setRotationFromAxisAngle","axis","angle","setFromAxisAngle","setRotationFromEuler","euler","setRotationFromMatrix","m","setFromRotationMatrix","setRotationFromQuaternion","copy","rotateOnAxis","multiply","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","add","multiplyScalar","translateX","translateY","translateZ","localToWorld","vector","worldToLocal","invert","lookAt","x","y","z","isVector3","set","updateWorldMatrix","setFromMatrixPosition","isCamera","isLight","extractRotation","object","arguments","length","i","console","error","remove","push","dispatchEvent","index","indexOf","splice","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","l","child","getWorldPosition","target","warn","getWorldQuaternion","getWorldScale","getWorldDirection","e","elements","normalize","raycast","traverse","callback","traverseVisible","traverseAncestors","compose","updateMatrixWorld","force","multiplyMatrices","updateParents","updateChildren","toJSON","meta","isRootObject","output","geometries","materials","textures","images","shapes","skeletons","metadata","version","generator","JSON","stringify","mask","toArray","isInstancedMesh","count","instanceMatrix","instanceColor","serialize","library","element","isMesh","isLine","isPoints","geometry","parameters","Array","isArray","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","data","recursive","source","order","parse"],"sources":["/Users/sam/Documents/CakeProject/node_modules/three/src/core/Object3D.js"],"sourcesContent":["import { Quaternion } from '../math/Quaternion.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { EventDispatcher } from './EventDispatcher.js';\nimport { Euler } from '../math/Euler.js';\nimport { Layers } from './Layers.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { MathUtils } from '../math/MathUtils.js';\n\nlet _object3DId = 0;\n\nconst _v1 = new Vector3();\nconst _q1 = new Quaternion();\nconst _m1 = new Matrix4();\nconst _target = new Vector3();\n\nconst _position = new Vector3();\nconst _scale = new Vector3();\nconst _quaternion = new Quaternion();\n\nconst _xAxis = new Vector3( 1, 0, 0 );\nconst _yAxis = new Vector3( 0, 1, 0 );\nconst _zAxis = new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tconst position = new Vector3();\n\tconst rotation = new Euler();\n\tconst quaternion = new Quaternion();\n\tconst scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation._onChange( onRotationChange );\n\tquaternion._onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.animations = [];\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function ( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t},\n\n\trotateOnWorldAxis: function ( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function ( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t},\n\n\trotateY: function ( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t},\n\n\trotateZ: function ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t},\n\n\ttranslateOnAxis: function ( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t},\n\n\ttranslateX: function ( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t},\n\n\ttranslateY: function ( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t},\n\n\ttranslateZ: function ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t},\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1.copy( this.matrixWorld ).invert() );\n\n\t},\n\n\tlookAt: function ( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1.lookAt( _position, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1.lookAt( _target, _position, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t},\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclear: function () {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t},\n\n\tattach: function ( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\ttarget = new Quaternion();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position, target, _scale );\n\n\t\treturn target;\n\n\t},\n\n\tgetWorldScale: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, target );\n\n\t\treturn target;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t},\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { Object3D };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Vector3 } from './Vector3.js';\nimport { Plane } from './Plane.js';\n\nconst _v0 = /*@__PURE__*/new Vector3();\n\nconst _v1 = /*@__PURE__*/new Vector3();\n\nconst _v2 = /*@__PURE__*/new Vector3();\n\nconst _v3 = /*@__PURE__*/new Vector3();\n\nconst _vab = /*@__PURE__*/new Vector3();\n\nconst _vac = /*@__PURE__*/new Vector3();\n\nconst _vbc = /*@__PURE__*/new Vector3();\n\nconst _vap = /*@__PURE__*/new Vector3();\n\nconst _vbp = /*@__PURE__*/new Vector3();\n\nconst _vcp = /*@__PURE__*/new Vector3();\n\nclass Triangle {\n  constructor() {\n    let a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n    let b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    let c = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Vector3();\n    this.a = a;\n    this.b = b;\n    this.c = c;\n  }\n\n  static getNormal(a, b, c, target) {\n    if (target === undefined) {\n      console.warn('THREE.Triangle: .getNormal() target is now required');\n      target = new Vector3();\n    }\n\n    target.subVectors(c, b);\n\n    _v0.subVectors(a, b);\n\n    target.cross(_v0);\n    const targetLengthSq = target.lengthSq();\n\n    if (targetLengthSq > 0) {\n      return target.multiplyScalar(1 / Math.sqrt(targetLengthSq));\n    }\n\n    return target.set(0, 0, 0);\n  } // static/instance method to calculate barycentric coordinates\n  // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\n\n  static getBarycoord(point, a, b, c, target) {\n    _v0.subVectors(c, a);\n\n    _v1.subVectors(b, a);\n\n    _v2.subVectors(point, a);\n\n    const dot00 = _v0.dot(_v0);\n\n    const dot01 = _v0.dot(_v1);\n\n    const dot02 = _v0.dot(_v2);\n\n    const dot11 = _v1.dot(_v1);\n\n    const dot12 = _v1.dot(_v2);\n\n    const denom = dot00 * dot11 - dot01 * dot01;\n\n    if (target === undefined) {\n      console.warn('THREE.Triangle: .getBarycoord() target is now required');\n      target = new Vector3();\n    } // collinear or singular triangle\n\n\n    if (denom === 0) {\n      // arbitrary location outside of triangle?\n      // not sure if this is the best idea, maybe should be returning undefined\n      return target.set(-2, -1, -1);\n    }\n\n    const invDenom = 1 / denom;\n    const u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n    const v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n    return target.set(1 - u - v, v, u);\n  }\n\n  static containsPoint(point, a, b, c) {\n    this.getBarycoord(point, a, b, c, _v3);\n    return _v3.x >= 0 && _v3.y >= 0 && _v3.x + _v3.y <= 1;\n  }\n\n  static getUV(point, p1, p2, p3, uv1, uv2, uv3, target) {\n    this.getBarycoord(point, p1, p2, p3, _v3);\n    target.set(0, 0);\n    target.addScaledVector(uv1, _v3.x);\n    target.addScaledVector(uv2, _v3.y);\n    target.addScaledVector(uv3, _v3.z);\n    return target;\n  }\n\n  static isFrontFacing(a, b, c, direction) {\n    _v0.subVectors(c, b);\n\n    _v1.subVectors(a, b); // strictly front facing\n\n\n    return _v0.cross(_v1).dot(direction) < 0 ? true : false;\n  }\n\n  set(a, b, c) {\n    this.a.copy(a);\n    this.b.copy(b);\n    this.c.copy(c);\n    return this;\n  }\n\n  setFromPointsAndIndices(points, i0, i1, i2) {\n    this.a.copy(points[i0]);\n    this.b.copy(points[i1]);\n    this.c.copy(points[i2]);\n    return this;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  copy(triangle) {\n    this.a.copy(triangle.a);\n    this.b.copy(triangle.b);\n    this.c.copy(triangle.c);\n    return this;\n  }\n\n  getArea() {\n    _v0.subVectors(this.c, this.b);\n\n    _v1.subVectors(this.a, this.b);\n\n    return _v0.cross(_v1).length() * 0.5;\n  }\n\n  getMidpoint(target) {\n    if (target === undefined) {\n      console.warn('THREE.Triangle: .getMidpoint() target is now required');\n      target = new Vector3();\n    }\n\n    return target.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n  }\n\n  getNormal(target) {\n    return Triangle.getNormal(this.a, this.b, this.c, target);\n  }\n\n  getPlane(target) {\n    if (target === undefined) {\n      console.warn('THREE.Triangle: .getPlane() target is now required');\n      target = new Plane();\n    }\n\n    return target.setFromCoplanarPoints(this.a, this.b, this.c);\n  }\n\n  getBarycoord(point, target) {\n    return Triangle.getBarycoord(point, this.a, this.b, this.c, target);\n  }\n\n  getUV(point, uv1, uv2, uv3, target) {\n    return Triangle.getUV(point, this.a, this.b, this.c, uv1, uv2, uv3, target);\n  }\n\n  containsPoint(point) {\n    return Triangle.containsPoint(point, this.a, this.b, this.c);\n  }\n\n  isFrontFacing(direction) {\n    return Triangle.isFrontFacing(this.a, this.b, this.c, direction);\n  }\n\n  intersectsBox(box) {\n    return box.intersectsTriangle(this);\n  }\n\n  closestPointToPoint(p, target) {\n    if (target === undefined) {\n      console.warn('THREE.Triangle: .closestPointToPoint() target is now required');\n      target = new Vector3();\n    }\n\n    const a = this.a,\n          b = this.b,\n          c = this.c;\n    let v, w; // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n    // published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n    // under the accompanying license; see chapter 5.1.5 for detailed explanation.\n    // basically, we're distinguishing which of the voronoi regions of the triangle\n    // the point lies in with the minimum amount of redundant computation.\n\n    _vab.subVectors(b, a);\n\n    _vac.subVectors(c, a);\n\n    _vap.subVectors(p, a);\n\n    const d1 = _vab.dot(_vap);\n\n    const d2 = _vac.dot(_vap);\n\n    if (d1 <= 0 && d2 <= 0) {\n      // vertex region of A; barycentric coords (1, 0, 0)\n      return target.copy(a);\n    }\n\n    _vbp.subVectors(p, b);\n\n    const d3 = _vab.dot(_vbp);\n\n    const d4 = _vac.dot(_vbp);\n\n    if (d3 >= 0 && d4 <= d3) {\n      // vertex region of B; barycentric coords (0, 1, 0)\n      return target.copy(b);\n    }\n\n    const vc = d1 * d4 - d3 * d2;\n\n    if (vc <= 0 && d1 >= 0 && d3 <= 0) {\n      v = d1 / (d1 - d3); // edge region of AB; barycentric coords (1-v, v, 0)\n\n      return target.copy(a).addScaledVector(_vab, v);\n    }\n\n    _vcp.subVectors(p, c);\n\n    const d5 = _vab.dot(_vcp);\n\n    const d6 = _vac.dot(_vcp);\n\n    if (d6 >= 0 && d5 <= d6) {\n      // vertex region of C; barycentric coords (0, 0, 1)\n      return target.copy(c);\n    }\n\n    const vb = d5 * d2 - d1 * d6;\n\n    if (vb <= 0 && d2 >= 0 && d6 <= 0) {\n      w = d2 / (d2 - d6); // edge region of AC; barycentric coords (1-w, 0, w)\n\n      return target.copy(a).addScaledVector(_vac, w);\n    }\n\n    const va = d3 * d6 - d5 * d4;\n\n    if (va <= 0 && d4 - d3 >= 0 && d5 - d6 >= 0) {\n      _vbc.subVectors(c, b);\n\n      w = (d4 - d3) / (d4 - d3 + (d5 - d6)); // edge region of BC; barycentric coords (0, 1-w, w)\n\n      return target.copy(b).addScaledVector(_vbc, w); // edge region of BC\n    } // face region\n\n\n    const denom = 1 / (va + vb + vc); // u = va * denom\n\n    v = vb * denom;\n    w = vc * denom;\n    return target.copy(a).addScaledVector(_vab, v).addScaledVector(_vac, w);\n  }\n\n  equals(triangle) {\n    return triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n  }\n\n}\n\nexport { Triangle };","map":{"version":3,"names":["Vector3","Plane","_v0","_v1","_v2","_v3","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","constructor","a","b","c","getNormal","target","undefined","console","warn","subVectors","cross","targetLengthSq","lengthSq","multiplyScalar","Math","sqrt","set","getBarycoord","point","dot00","dot","dot01","dot02","dot11","dot12","denom","invDenom","u","v","containsPoint","x","y","getUV","p1","p2","p3","uv1","uv2","uv3","addScaledVector","z","isFrontFacing","direction","copy","setFromPointsAndIndices","points","i0","i1","i2","clone","triangle","getArea","length","getMidpoint","addVectors","add","getPlane","setFromCoplanarPoints","intersectsBox","box","intersectsTriangle","closestPointToPoint","p","w","d1","d2","d3","d4","vc","d5","d6","vb","va","equals"],"sources":["/Users/sam/Documents/CakeProject/node_modules/three/src/math/Triangle.js"],"sourcesContent":["import { Vector3 } from './Vector3.js';\nimport { Plane } from './Plane.js';\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0.subVectors( a, b );\n\t\ttarget.cross( _v0 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0.subVectors( c, a );\n\t\t_v1.subVectors( b, a );\n\t\t_v2.subVectors( point, a );\n\n\t\tconst dot00 = _v0.dot( _v0 );\n\t\tconst dot01 = _v0.dot( _v1 );\n\t\tconst dot02 = _v0.dot( _v2 );\n\t\tconst dot11 = _v1.dot( _v1 );\n\t\tconst dot12 = _v1.dot( _v2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3 );\n\n\t\treturn ( _v3.x >= 0 ) && ( _v3.y >= 0 ) && ( ( _v3.x + _v3.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3.x );\n\t\ttarget.addScaledVector( uv2, _v3.y );\n\t\ttarget.addScaledVector( uv3, _v3.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0.subVectors( c, b );\n\t\t_v1.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0.cross( _v1 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0.subVectors( this.c, this.b );\n\t\t_v1.subVectors( this.a, this.b );\n\n\t\treturn _v0.cross( _v1 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Plane();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nexport { Triangle };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
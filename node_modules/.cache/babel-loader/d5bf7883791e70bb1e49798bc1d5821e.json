{"ast":null,"code":"import{useEffect,useRef,useState}from\"react\";import{connect}from\"react-redux\";import{PropTypes}from\"prop-types\";import ToggleDisplay from\"react-toggle-display\";import*as THREE from\"three\";import*as POSTPROCESSING from\"postprocessing\";import{RGBELoader}from\"three/examples/jsm/loaders/RGBELoader\";import{GLTFLoader}from\"three/examples/jsm/loaders/GLTFLoader\";import{DRACOLoader}from\"three/examples/jsm/loaders/DRACOLoader\";import{PMREMGenerator}from\"three/src/extras/PMREMGenerator\";import{OrbitControls}from\"three/examples/jsm/controls/OrbitControls\";import Loader from\"../Loader\";import styles from\"./Viewer3D.module.css\";import Composer from\"./libs/Composer\";import Lights from\"./libs/Lights\";import{FitCameraToSelection,ShadowPlane}from\"./libs/Helpers\";import{SPACE_SIZE}from\"./Viewer3DConstants\";import{setSelectedMeshData}from\"../../redux/actions/MeshActions\";import{setSelectedMeshMaterial}from\"../../redux/actions/MaterialActions\";import{setCurrentNodeData}from\"../../redux/actions/NodeActions\";import{FormControl,InputLabel,Select}from\"@material-ui/core\";import{Button}from\"@material-ui/core\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";let g_model_root;let g_scene;let g_camera;let g_camera_controller;let g_render;let g_render_scene;let g_selected_node;let g_gltf_loader;let g_texture_loader;let g_rgbe_loader;let g_is_load_model=false;function Viewer3D(props){const{materialStore,meshStore,nodeStore,productStore,setSelectedMeshData,setSelectedMeshMaterial,setCurrentNodeData}=props;const canvasContainer=useRef(null);const[showLoader,setShowLoader]=useState(true);function setNodeMaterial(node,materialData){if(node&&materialData){node.material.name=materialData.name;//Color\nif(materialData.color===\"\"){node.material.color.set(null);}else{node.material.color.set(materialData.color);}//Albedo\nif(materialData.map===\"\"){node.material.map=null;}else{const texture=g_texture_loader.load(materialData.map);if(materialData.uvScale){texture.repeat.set(materialData.uvScale.u,materialData.uvScale.v);texture.wrapS=texture.wrapT=THREE.MirroredRepeatWrapping;}node.material.map=texture;}//Normal\nif(materialData.normalMap===\"\"){node.material.normalMap=null;}else{const texture=g_texture_loader.load(materialData.normalMap);if(materialData.uvScale){texture.repeat.set(materialData.uvScale.u,materialData.uvScale.v);texture.wrapS=texture.wrapT=THREE.MirroredRepeatWrapping;}node.material.normalMap=texture;node.material.normalScale=new THREE.Vector2(materialData.normalScale.x,materialData.normalScale.y);}//Bump\nif(materialData.bumpMap===\"\"){node.material.bumpMap=null;}else{const texture=g_texture_loader.load(materialData.bumpMap);if(materialData.uvScale){texture.repeat.set(materialData.uvScale.u,materialData.uvScale.v);texture.wrapS=texture.wrapT=THREE.MirroredRepeatWrapping;}node.material.bumpMap=texture;node.material.bumpScale=materialData.bumpScale;}//Displacement\nif(materialData.displacementMap===\"\"){node.material.displacementMap=null;}else{const texture=g_texture_loader.load(materialData.displacementMap);if(materialData.uvScale){texture.repeat.set(materialData.uvScale.u,materialData.uvScale.v);texture.wrapS=texture.wrapT=THREE.MirroredRepeatWrapping;}node.material.displacementMap=texture;node.material.displacementScale=materialData.displacementScale;node.material.displacementBias=materialData.displacementBias;}//Roughness\nif(materialData.roughnessMap===\"\"){node.material.roughnessMap=null;}else{const texture=g_texture_loader.load(materialData.roughnessMap);if(materialData.uvScale){texture.repeat.set(materialData.uvScale.u,materialData.uvScale.v);texture.wrapS=texture.wrapT=THREE.MirroredRepeatWrapping;}node.material.roughnessMap=texture;}node.material.roughness=materialData.roughness;//Metalness\nif(materialData.metalnessMap!==\"\"){node.material.metalnessMap=null;}else{const texture=g_texture_loader.load(materialData.metalnessMap);if(materialData.uvScale){texture.repeat.set(materialData.uvScale.u,materialData.uvScale.v);texture.wrapS=texture.wrapT=THREE.MirroredRepeatWrapping;}node.material.metalnessMap=texture;}node.material.metalness=materialData.metalness;//Alpha\nif(materialData.alphaMap===\"\"){node.material.alphaMap=null;}else{const texture=g_texture_loader.load(materialData.alphaMap);if(materialData.uvScale){texture.repeat.set(materialData.uvScale.u,materialData.uvScale.v);texture.wrapS=texture.wrapT=THREE.MirroredRepeatWrapping;}node.material.alphaMap=texture;}node.material.opacity=materialData.opacity;//AO\nif(materialData.aoMap===\"\"){node.material.aoMap=null;}else{const texture=g_texture_loader.load(materialData.aoMap);if(materialData.uvScale){texture.repeat.set(materialData.uvScale.u,materialData.uvScale.v);texture.wrapS=texture.wrapT=THREE.MirroredRepeatWrapping;}node.material.aoMap=texture;node.material.aoMapIntensity=materialData.aoMapIntensity;}//Emissive\nif(materialData.emissiveMap===\"\"){node.material.emissiveMap=null;}else{const texture=g_texture_loader.load(materialData.emissiveMap);if(materialData.uvScale){texture.repeat.set(materialData.uvScale.u,materialData.uvScale.v);texture.wrapS=texture.wrapT=THREE.MirroredRepeatWrapping;}node.material.emissiveMap=texture;node.material.emissiveIntensity=materialData.emissiveIntensity;}node.material.emissive.set(materialData.emissive);//Env\nnode.material.envMapIntensity=materialData.envMapIntensity;node.material.wireframe=materialData.wireframe;node.material.transparent=materialData.transparent;node.material.needsUpdate=true;//Set material to candidate meshes\nnode.children.forEach(child=>{child.material=node.material;});}}async function fetchMaterialData(path){const response=await fetch(path);const data=await response.json();return data;}useEffect(()=>{let width=canvasContainer.current.offsetWidth;let height=canvasContainer.current.offsetHeight;let renderRequested=false;let smaaSearchImage=null;let smaaAreaImage=null;const clock=new THREE.Clock();let composer=null;g_model_root=new THREE.Object3D();g_model_root.name=\"ModelRoot\";const rayCaster=new THREE.Raycaster();const intersects=[];/**\n     * Scene\n     */const scene=new THREE.Scene();scene.background=new THREE.Color(\"#aeaeae\");// scene.fog = new THREE.Fog(0xa0a0a0, SPACE_SIZE * 0.9, SPACE_SIZE)\ng_scene=scene;scene.add(g_model_root);/**\n     * Lighter\n     */const lighter=Lights();scene.add(lighter);/**\n     * Helper\n     */ // const axisHelper = new THREE.AxesHelper(5)\n// scene.add(axisHelper)\nconst shadowPlane=ShadowPlane();scene.add(shadowPlane);/**\n     * Camera\n     */const camera=new THREE.PerspectiveCamera(30,width/height,0.01,SPACE_SIZE*100);camera.position.set(-SPACE_SIZE*0.2,SPACE_SIZE,SPACE_SIZE);camera.lookAt(0,0,0);g_camera=camera;/**\n     * Resize & Render\n     */function resizeRendererToDisplaySize(){const canvasWidth=renderer.domElement.offsetWidth;const canvasHeight=renderer.domElement.offsetHeight;const needResize=canvasWidth!==width||canvasHeight!==height;if(needResize){width=canvasWidth;height=canvasHeight;camera.aspect=width/height;camera.updateProjectionMatrix();renderer.setSize(width,height);composer.setSize(width,height);requestRenderIfNotRequested();}}function render(){renderRequested=false;resizeRendererToDisplaySize();cameraController.update();renderer.render(scene,camera);if(composer)composer.render(clock.getDelta());}function requestRenderIfNotRequested(){if(!renderRequested){renderRequested=true;requestAnimationFrame(render);}}g_render_scene=requestRenderIfNotRequested;/**\n     * Renderer\n     */const renderer=new THREE.WebGLRenderer({powerPreference:\"high-performance\",antialias:false,stencil:false,depth:false});renderer.setSize(width,height,false);renderer.setPixelRatio(window.devicePixelRatio||1);renderer.shadowMap.enabled=true;renderer.shadowMap.type=THREE.PCFSoftShadowMap;g_render=renderer;canvasContainer.current.appendChild(renderer.domElement);//Mouse&Touch event\nfunction onMouseDown(event){}function onMouseUp(event){const pickedPoint=new THREE.Vector2(event.offsetX/width*2-1,-(event.offsetY/height)*2+1);rayCaster.setFromCamera(pickedPoint,camera);let pickedObjs=rayCaster.intersectObjects(intersects);if(pickedObjs.length>0){}}function onMouseMove(event){const pickedPoint=new THREE.Vector2(event.offsetX/width*2-1,-(event.offsetY/height)*2+1);rayCaster.setFromCamera(pickedPoint,camera);let pickedObjs=rayCaster.intersectObjects(intersects);if(pickedObjs.length>0){document.body.style.cursor=\"pointer\";}else{document.body.style.cursor=\"default\";}}function onTouchStart(event){}function onTouchEnd(event){const pickedPoint=new THREE.Vector2(event.changedTouches[0].pageX/width*2-1,-(event.changedTouches[0].pageY/height)*2+1);rayCaster.setFromCamera(pickedPoint,camera);let pickedObjs=rayCaster.intersectObjects(intersects);if(pickedObjs.length>0){}}function onTouchMove(){}renderer.domElement.addEventListener(\"mousedown\",onMouseDown);renderer.domElement.addEventListener(\"mouseup\",onMouseUp);renderer.domElement.addEventListener(\"mousemove\",onMouseMove);renderer.domElement.addEventListener(\"touchstart\",onTouchStart);renderer.domElement.addEventListener(\"touchend\",onTouchEnd);renderer.domElement.addEventListener(\"touchmove\",onTouchMove);/**\n     * Camera Controller\n     */const cameraController=new OrbitControls(camera,renderer.domElement);cameraController.minAzimuthAngle=-180;cameraController.maxAzimuthAngle=180;cameraController.dampingFactor=0.05;cameraController.screenSpacePanning=true;// cameraController.minDistance = 1\n// cameraController.maxDistance = 500\n// cameraController.minZoom = 1\n// cameraController.maxZoom = 500\ncameraController.minPolarAngle=1;cameraController.maxPolarAngle=Math.PI/1.5;cameraController.enableDamping=true;cameraController.enableZoom=true;cameraController.enablePan=false;g_camera_controller=cameraController;/**\n     * Load Assets\n     */const gltfLoadingManager=new THREE.LoadingManager();gltfLoadingManager.onStart=(url,itemsLoaded,itemsTotal)=>{setShowLoader(true);};gltfLoadingManager.onProgress=(url,itemsLoaded,itemsTotal)=>{if(!showLoader){setShowLoader(true);}};gltfLoadingManager.onLoad=()=>{if(g_is_load_model){camera.position.set(-SPACE_SIZE*0.2,SPACE_SIZE,SPACE_SIZE);camera.lookAt(0,0,0);FitCameraToSelection(camera,g_model_root,6,cameraController);g_is_load_model=false;}requestRenderIfNotRequested();setTimeout(()=>{setShowLoader(false);},1200);};const gLTFLoader=new GLTFLoader(gltfLoadingManager);g_gltf_loader=gLTFLoader;const dracoLoader=new DRACOLoader();dracoLoader.setDecoderPath(\"/draco/\");gLTFLoader.setDRACOLoader(dracoLoader);const textureLoader=new THREE.TextureLoader(gltfLoadingManager);g_texture_loader=textureLoader;//Load smaa images\nconst smaaImageLoader=new POSTPROCESSING.SMAAImageLoader(gltfLoadingManager);smaaImageLoader.load(_ref=>{let[search,area]=_ref;smaaSearchImage=search;smaaAreaImage=area;composer=Composer(renderer,scene,camera,smaaSearchImage,smaaAreaImage);});//Load env map\ng_rgbe_loader=new RGBELoader(gltfLoadingManager);/**\n     * RenderEvent & Dispose\n     */renderer.render(scene,camera);cameraController.addEventListener(\"change\",requestRenderIfNotRequested);window.addEventListener(\"resize\",requestRenderIfNotRequested);return()=>{cameraController.removeEventListener(\"change\",requestRenderIfNotRequested);window.removeEventListener(\"resize\",requestRenderIfNotRequested);if(canvasContainer.current)canvasContainer.current.innerHTML=\"\";};},[]);useEffect(()=>{setCurrentNodeData(null);//Set env\nif(productStore.productData){g_rgbe_loader.setDataType(THREE.UnsignedByteType).load(productStore.productData.envMap,texture=>{const pg=new PMREMGenerator(g_render);pg.compileEquirectangularShader();const envMap=pg.fromEquirectangular(texture).texture;g_scene.environment=envMap;// g_scene.background = envMap\ntexture.dispose();pg.dispose();});}//Clear\ng_model_root.children.forEach(node=>{node.children.forEach(child=>{child.geometry.dispose();child.material.dispose();node.remove(child);});g_model_root.remove(node);});g_model_root.children=[];//Load models\nif(productStore.productData){g_is_load_model=true;g_gltf_loader.load(productStore.productData[productStore.currentDracoVersion],gltf=>{if(gltf.scene){//Get gltf mesh\nconst gltfMeshes=[];gltf.scene.traverse(child=>{if(child.type===\"Mesh\"){child.castShadow=true;gltfMeshes.push(child);}});//Generate the model structure\nproductStore.productData.nodes.forEach(node=>{const pivot=new THREE.Object3D();pivot.name=node.id;node.candidateMeshes.forEach(json=>{const gltfMesh=gltfMeshes.find(mesh=>mesh.name===json.id);if(gltfMesh){gltfMesh.visible=gltfMesh.name===node.defaultMesh;pivot.add(gltfMesh);}});g_model_root.add(pivot);});//Set data for selected mesh\nconst meshData=[];productStore.productData.nodes.forEach(node=>{meshData.push({nodeId:node.id,meshId:node.defaultMesh});});setSelectedMeshData(meshData);//Set default material\ng_model_root.children.forEach(child=>{var _productStore$product;const material=new THREE.MeshStandardMaterial({color:\"#363636\"});material.envMap=g_scene.environment;child.material=material;const materialData=(_productStore$product=productStore.productData.nodes.find(node=>node.id===child.name))===null||_productStore$product===void 0?void 0:_productStore$product.defaultMaterial;fetchMaterialData(materialData===null||materialData===void 0?void 0:materialData.path).then(data=>{setNodeMaterial(child,data);});});}});}g_render_scene();},[productStore.productData,productStore.currentDracoVersion]);useEffect(()=>{var _g_model_root;if(g_selected_node){// g_selected_node.material.color.set(g_selected_node.originColor)\ng_selected_node=null;setSelectedMeshMaterial(null);}(_g_model_root=g_model_root)===null||_g_model_root===void 0?void 0:_g_model_root.traverse(child=>{var _nodeStore$currentNod;if(child.type===\"Object3D\"&&child.name===((_nodeStore$currentNod=nodeStore.currentNodeData)===null||_nodeStore$currentNod===void 0?void 0:_nodeStore$currentNod.id)){g_selected_node=child;setSelectedMeshMaterial(child.material.name);// g_selected_node.originColor = new THREE.Color(\n//   g_selected_node.material.color.r,\n//   g_selected_node.material.color.g,\n//   g_selected_node.material.color.b\n// )\n// g_selected_node.material.color.set(0xff0000)\n}});g_render_scene();},[nodeStore.currentNodeData]);useEffect(()=>{if(g_selected_node&&meshStore.selectedMeshData){const d=meshStore.selectedMeshData.find(data=>data.nodeId===g_selected_node.name);if(d){g_selected_node.children.forEach(child=>{child.visible=child.name===d.meshId;});}}g_render_scene();},[meshStore.selectedMeshData]);useEffect(()=>{setNodeMaterial(g_selected_node,materialStore.currentMaterialData);},[materialStore.currentMaterialData]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ToggleDisplay,{if:showLoader,children:/*#__PURE__*/_jsx(Loader,{})}),/*#__PURE__*/_jsx(\"div\",{className:styles.canvasContainer,ref:canvasContainer}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",style:{maxWidth:'150px',maxHeight:'100px',minWidth:'50px',minHeight:'50px',position:\"absolute\",right:\"0\",bottom:\"0\",margin:\"0px 20px 20px 0px\",color:\"white\",backgroundColor:\"#C53617\"},children:\"Checkout\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Total: 500$\"})]});}const mapStateToProps=state=>({materialStore:state.materialStore,meshStore:state.meshStore,nodeStore:state.nodeStore,productStore:state.productStore,setSelectedMeshData:PropTypes.func.isRequired,setSelectedMeshMaterial:PropTypes.func.isRequired,setCurrentNodeData:PropTypes.func.isRequired});export default connect(mapStateToProps,{setSelectedMeshData,setSelectedMeshMaterial,setCurrentNodeData})(Viewer3D);","map":{"version":3,"names":["useEffect","useRef","useState","connect","PropTypes","ToggleDisplay","THREE","POSTPROCESSING","RGBELoader","GLTFLoader","DRACOLoader","PMREMGenerator","OrbitControls","Loader","styles","Composer","Lights","FitCameraToSelection","ShadowPlane","SPACE_SIZE","setSelectedMeshData","setSelectedMeshMaterial","setCurrentNodeData","FormControl","InputLabel","Select","Button","g_model_root","g_scene","g_camera","g_camera_controller","g_render","g_render_scene","g_selected_node","g_gltf_loader","g_texture_loader","g_rgbe_loader","g_is_load_model","Viewer3D","props","materialStore","meshStore","nodeStore","productStore","canvasContainer","showLoader","setShowLoader","setNodeMaterial","node","materialData","material","name","color","set","map","texture","load","uvScale","repeat","u","v","wrapS","wrapT","MirroredRepeatWrapping","normalMap","normalScale","Vector2","x","y","bumpMap","bumpScale","displacementMap","displacementScale","displacementBias","roughnessMap","roughness","metalnessMap","metalness","alphaMap","opacity","aoMap","aoMapIntensity","emissiveMap","emissiveIntensity","emissive","envMapIntensity","wireframe","transparent","needsUpdate","children","forEach","child","fetchMaterialData","path","response","fetch","data","json","width","current","offsetWidth","height","offsetHeight","renderRequested","smaaSearchImage","smaaAreaImage","clock","Clock","composer","Object3D","rayCaster","Raycaster","intersects","scene","Scene","background","Color","add","lighter","shadowPlane","camera","PerspectiveCamera","position","lookAt","resizeRendererToDisplaySize","canvasWidth","renderer","domElement","canvasHeight","needResize","aspect","updateProjectionMatrix","setSize","requestRenderIfNotRequested","render","cameraController","update","getDelta","requestAnimationFrame","WebGLRenderer","powerPreference","antialias","stencil","depth","setPixelRatio","window","devicePixelRatio","shadowMap","enabled","type","PCFSoftShadowMap","appendChild","onMouseDown","event","onMouseUp","pickedPoint","offsetX","offsetY","setFromCamera","pickedObjs","intersectObjects","length","onMouseMove","document","body","style","cursor","onTouchStart","onTouchEnd","changedTouches","pageX","pageY","onTouchMove","addEventListener","minAzimuthAngle","maxAzimuthAngle","dampingFactor","screenSpacePanning","minPolarAngle","maxPolarAngle","Math","PI","enableDamping","enableZoom","enablePan","gltfLoadingManager","LoadingManager","onStart","url","itemsLoaded","itemsTotal","onProgress","onLoad","setTimeout","gLTFLoader","dracoLoader","setDecoderPath","setDRACOLoader","textureLoader","TextureLoader","smaaImageLoader","SMAAImageLoader","search","area","removeEventListener","innerHTML","productData","setDataType","UnsignedByteType","envMap","pg","compileEquirectangularShader","fromEquirectangular","environment","dispose","geometry","remove","currentDracoVersion","gltf","gltfMeshes","traverse","castShadow","push","nodes","pivot","id","candidateMeshes","gltfMesh","find","mesh","visible","defaultMesh","meshData","nodeId","meshId","MeshStandardMaterial","defaultMaterial","then","currentNodeData","selectedMeshData","d","currentMaterialData","maxWidth","maxHeight","minWidth","minHeight","right","bottom","margin","backgroundColor","mapStateToProps","state","func","isRequired"],"sources":["/Users/sam/Documents/CakeProject/src/components/Viewer3D/Viewer3D.js"],"sourcesContent":["import {useEffect, useRef, useState} from \"react\"\nimport {connect} from \"react-redux\"\nimport {PropTypes} from \"prop-types\"\nimport ToggleDisplay from \"react-toggle-display\"\nimport * as THREE from \"three\"\nimport * as POSTPROCESSING from \"postprocessing\"\nimport {RGBELoader} from \"three/examples/jsm/loaders/RGBELoader\"\nimport {GLTFLoader} from \"three/examples/jsm/loaders/GLTFLoader\"\nimport {DRACOLoader} from \"three/examples/jsm/loaders/DRACOLoader\"\nimport {PMREMGenerator} from \"three/src/extras/PMREMGenerator\"\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\"\nimport Loader from \"../Loader\"\nimport styles from \"./Viewer3D.module.css\"\nimport Composer from \"./libs/Composer\"\nimport Lights from \"./libs/Lights\"\nimport {FitCameraToSelection, ShadowPlane} from \"./libs/Helpers\"\nimport {SPACE_SIZE} from \"./Viewer3DConstants\"\nimport {setSelectedMeshData} from \"../../redux/actions/MeshActions\"\nimport {setSelectedMeshMaterial} from \"../../redux/actions/MaterialActions\"\nimport {setCurrentNodeData} from \"../../redux/actions/NodeActions\"\nimport {FormControl, InputLabel, Select} from \"@material-ui/core\"\nimport { Button } from \"@material-ui/core\"\n\n\nlet g_model_root\nlet g_scene\nlet g_camera\nlet g_camera_controller\nlet g_render\nlet g_render_scene\nlet g_selected_node\nlet g_gltf_loader\nlet g_texture_loader\nlet g_rgbe_loader\nlet g_is_load_model = false\n\nfunction Viewer3D(props) {\n  const {\n    materialStore,\n    meshStore,\n    nodeStore,\n    productStore,\n    setSelectedMeshData,\n    setSelectedMeshMaterial,\n    setCurrentNodeData,\n  } = props\n  const canvasContainer = useRef(null)\n  const [showLoader, setShowLoader] = useState(true)\n\n  function setNodeMaterial(node, materialData) {\n    if (node && materialData) {\n      node.material.name = materialData.name\n\n      //Color\n      if (materialData.color === \"\") {\n        node.material.color.set(null)\n      } else {\n        node.material.color.set(materialData.color)\n      }\n\n      //Albedo\n      if (materialData.map === \"\") {\n        node.material.map = null\n      } else {\n        const texture = g_texture_loader.load(materialData.map)\n        if (materialData.uvScale) {\n          texture.repeat.set(materialData.uvScale.u, materialData.uvScale.v)\n          texture.wrapS = texture.wrapT = THREE.MirroredRepeatWrapping\n        }\n        node.material.map = texture\n      }\n\n      //Normal\n      if (materialData.normalMap === \"\") {\n        node.material.normalMap = null\n      } else {\n        const texture = g_texture_loader.load(materialData.normalMap)\n        if (materialData.uvScale) {\n          texture.repeat.set(materialData.uvScale.u, materialData.uvScale.v)\n          texture.wrapS = texture.wrapT = THREE.MirroredRepeatWrapping\n        }\n        node.material.normalMap = texture\n\n        node.material.normalScale = new THREE.Vector2(\n          materialData.normalScale.x,\n          materialData.normalScale.y\n        )\n      }\n\n      //Bump\n      if (materialData.bumpMap === \"\") {\n        node.material.bumpMap = null\n      } else {\n        const texture = g_texture_loader.load(materialData.bumpMap)\n        if (materialData.uvScale) {\n          texture.repeat.set(materialData.uvScale.u, materialData.uvScale.v)\n          texture.wrapS = texture.wrapT = THREE.MirroredRepeatWrapping\n        }\n        node.material.bumpMap = texture\n\n        node.material.bumpScale = materialData.bumpScale\n      }\n\n      //Displacement\n      if (materialData.displacementMap === \"\") {\n        node.material.displacementMap = null\n      } else {\n        const texture = g_texture_loader.load(materialData.displacementMap)\n        if (materialData.uvScale) {\n          texture.repeat.set(materialData.uvScale.u, materialData.uvScale.v)\n          texture.wrapS = texture.wrapT = THREE.MirroredRepeatWrapping\n        }\n        node.material.displacementMap = texture\n\n        node.material.displacementScale = materialData.displacementScale\n        node.material.displacementBias = materialData.displacementBias\n      }\n\n      //Roughness\n      if (materialData.roughnessMap === \"\") {\n        node.material.roughnessMap = null\n      } else {\n        const texture = g_texture_loader.load(materialData.roughnessMap)\n        if (materialData.uvScale) {\n          texture.repeat.set(materialData.uvScale.u, materialData.uvScale.v)\n          texture.wrapS = texture.wrapT = THREE.MirroredRepeatWrapping\n        }\n        node.material.roughnessMap = texture\n      }\n\n      node.material.roughness = materialData.roughness\n\n      //Metalness\n      if (materialData.metalnessMap !== \"\") {\n        node.material.metalnessMap = null\n      } else {\n        const texture = g_texture_loader.load(materialData.metalnessMap)\n        if (materialData.uvScale) {\n          texture.repeat.set(materialData.uvScale.u, materialData.uvScale.v)\n          texture.wrapS = texture.wrapT = THREE.MirroredRepeatWrapping\n        }\n        node.material.metalnessMap = texture\n      }\n\n      node.material.metalness = materialData.metalness\n\n      //Alpha\n      if (materialData.alphaMap === \"\") {\n        node.material.alphaMap = null\n      } else {\n        const texture = g_texture_loader.load(materialData.alphaMap)\n        if (materialData.uvScale) {\n          texture.repeat.set(materialData.uvScale.u, materialData.uvScale.v)\n          texture.wrapS = texture.wrapT = THREE.MirroredRepeatWrapping\n        }\n        node.material.alphaMap = texture\n      }\n\n      node.material.opacity = materialData.opacity\n\n      //AO\n      if (materialData.aoMap === \"\") {\n        node.material.aoMap = null\n      } else {\n        const texture = g_texture_loader.load(materialData.aoMap)\n        if (materialData.uvScale) {\n          texture.repeat.set(materialData.uvScale.u, materialData.uvScale.v)\n          texture.wrapS = texture.wrapT = THREE.MirroredRepeatWrapping\n        }\n        node.material.aoMap = texture\n\n        node.material.aoMapIntensity = materialData.aoMapIntensity\n      }\n\n      //Emissive\n      if (materialData.emissiveMap === \"\") {\n        node.material.emissiveMap = null\n      } else {\n        const texture = g_texture_loader.load(materialData.emissiveMap)\n        if (materialData.uvScale) {\n          texture.repeat.set(materialData.uvScale.u, materialData.uvScale.v)\n          texture.wrapS = texture.wrapT = THREE.MirroredRepeatWrapping\n        }\n        node.material.emissiveMap = texture\n\n        node.material.emissiveIntensity = materialData.emissiveIntensity\n      }\n      node.material.emissive.set(materialData.emissive)\n\n      //Env\n      node.material.envMapIntensity = materialData.envMapIntensity\n\n      node.material.wireframe = materialData.wireframe\n      node.material.transparent = materialData.transparent\n      node.material.needsUpdate = true\n\n      //Set material to candidate meshes\n      node.children.forEach(child => {\n        child.material = node.material\n      })\n    }\n  }\n\n  async function fetchMaterialData(path) {\n    const response = await fetch(path)\n    const data = await response.json()\n    return data\n  }\n\n  useEffect(() => {\n    let width = canvasContainer.current.offsetWidth\n    let height = canvasContainer.current.offsetHeight\n\n    let renderRequested = false\n\n    let smaaSearchImage = null\n    let smaaAreaImage = null\n\n    const clock = new THREE.Clock()\n\n    let composer = null\n\n    g_model_root = new THREE.Object3D()\n    g_model_root.name = \"ModelRoot\"\n\n    const rayCaster = new THREE.Raycaster()\n    const intersects = []\n\n    /**\n     * Scene\n     */\n    const scene = new THREE.Scene()\n    scene.background = new THREE.Color(\"#aeaeae\")\n    // scene.fog = new THREE.Fog(0xa0a0a0, SPACE_SIZE * 0.9, SPACE_SIZE)\n    g_scene = scene\n\n    scene.add(g_model_root)\n\n    /**\n     * Lighter\n     */\n    const lighter = Lights()\n    scene.add(lighter)\n\n    /**\n     * Helper\n     */\n    // const axisHelper = new THREE.AxesHelper(5)\n    // scene.add(axisHelper)\n\n    const shadowPlane = ShadowPlane()\n    scene.add(shadowPlane)\n    /**\n     * Camera\n     */\n    const camera = new THREE.PerspectiveCamera(\n      30,\n      width / height,\n      0.01,\n      SPACE_SIZE * 100\n    )\n    camera.position.set(-SPACE_SIZE * 0.2, SPACE_SIZE, SPACE_SIZE)\n    camera.lookAt(0, 0, 0)\n    g_camera = camera\n\n    /**\n     * Resize & Render\n     */\n    function resizeRendererToDisplaySize() {\n      const canvasWidth = renderer.domElement.offsetWidth\n      const canvasHeight = renderer.domElement.offsetHeight\n      const needResize = canvasWidth !== width || canvasHeight !== height\n      if (needResize) {\n        width = canvasWidth\n        height = canvasHeight\n        camera.aspect = width / height\n        camera.updateProjectionMatrix()\n        renderer.setSize(width, height)\n        composer.setSize(width, height)\n        requestRenderIfNotRequested()\n      }\n    }\n\n    function render() {\n      renderRequested = false\n      resizeRendererToDisplaySize()\n      cameraController.update()\n      renderer.render(scene, camera)\n      if (composer) composer.render(clock.getDelta())\n    }\n\n    function requestRenderIfNotRequested() {\n      if (!renderRequested) {\n        renderRequested = true\n        requestAnimationFrame(render)\n      }\n    }\n    g_render_scene = requestRenderIfNotRequested\n\n    /**\n     * Renderer\n     */\n    const renderer = new THREE.WebGLRenderer({\n      powerPreference: \"high-performance\",\n      antialias: false,\n      stencil: false,\n      depth: false\n    })\n    renderer.setSize(width, height, false)\n    renderer.setPixelRatio(window.devicePixelRatio || 1)\n    renderer.shadowMap.enabled = true\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap\n    g_render = renderer\n\n    canvasContainer.current.appendChild(renderer.domElement)\n\n    //Mouse&Touch event\n    function onMouseDown(event) {}\n    function onMouseUp(event) {\n      const pickedPoint = new THREE.Vector2(\n        (event.offsetX / width) * 2 - 1,\n        -(event.offsetY / height) * 2 + 1\n      )\n      rayCaster.setFromCamera(pickedPoint, camera)\n      let pickedObjs = rayCaster.intersectObjects(intersects)\n      if (pickedObjs.length > 0) {\n      }\n    }\n    function onMouseMove(event) {\n      const pickedPoint = new THREE.Vector2(\n        (event.offsetX / width) * 2 - 1,\n        -(event.offsetY / height) * 2 + 1\n      )\n\n      rayCaster.setFromCamera(pickedPoint, camera)\n      let pickedObjs = rayCaster.intersectObjects(intersects)\n      if (pickedObjs.length > 0) {\n        document.body.style.cursor = \"pointer\"\n      } else {\n        document.body.style.cursor = \"default\"\n      }\n    }\n\n    function onTouchStart(event) {}\n    function onTouchEnd(event) {\n      const pickedPoint = new THREE.Vector2(\n        (event.changedTouches[0].pageX / width) * 2 - 1,\n        -(event.changedTouches[0].pageY / height) * 2 + 1\n      )\n      rayCaster.setFromCamera(pickedPoint, camera)\n      let pickedObjs = rayCaster.intersectObjects(intersects)\n      if (pickedObjs.length > 0) {\n      }\n    }\n    function onTouchMove() {}\n\n    renderer.domElement.addEventListener(\"mousedown\", onMouseDown)\n    renderer.domElement.addEventListener(\"mouseup\", onMouseUp)\n    renderer.domElement.addEventListener(\"mousemove\", onMouseMove)\n\n    renderer.domElement.addEventListener(\"touchstart\", onTouchStart)\n    renderer.domElement.addEventListener(\"touchend\", onTouchEnd)\n    renderer.domElement.addEventListener(\"touchmove\", onTouchMove)\n\n    /**\n     * Camera Controller\n     */\n    const cameraController = new OrbitControls(camera, renderer.domElement)\n    cameraController.minAzimuthAngle = -180\n    cameraController.maxAzimuthAngle = 180\n    cameraController.dampingFactor = 0.05\n    cameraController.screenSpacePanning = true\n    // cameraController.minDistance = 1\n    // cameraController.maxDistance = 500\n    // cameraController.minZoom = 1\n    // cameraController.maxZoom = 500\n    cameraController.minPolarAngle = 1\n    cameraController.maxPolarAngle = Math.PI / 1.5\n    cameraController.enableDamping = true\n    cameraController.enableZoom = true\n    cameraController.enablePan = false\n    g_camera_controller = cameraController\n\n    /**\n     * Load Assets\n     */\n    const gltfLoadingManager = new THREE.LoadingManager()\n    gltfLoadingManager.onStart = (url, itemsLoaded, itemsTotal) => {\n      setShowLoader(true)\n    }\n    gltfLoadingManager.onProgress = (url, itemsLoaded, itemsTotal) => {\n      if (!showLoader) {\n        setShowLoader(true)\n      }\n    }\n    gltfLoadingManager.onLoad = () => {\n      if (g_is_load_model) {\n        camera.position.set(-SPACE_SIZE * 0.2, SPACE_SIZE, SPACE_SIZE)\n        camera.lookAt(0, 0, 0)\n        FitCameraToSelection(camera, g_model_root, 6, cameraController)\n        g_is_load_model = false\n      }\n      requestRenderIfNotRequested()\n      setTimeout(() => {\n        setShowLoader(false)\n      }, 1200)\n    }\n    const gLTFLoader = new GLTFLoader(gltfLoadingManager)\n    g_gltf_loader = gLTFLoader\n\n    const dracoLoader = new DRACOLoader()\n    dracoLoader.setDecoderPath(\"/draco/\")\n    gLTFLoader.setDRACOLoader(dracoLoader)\n\n    const textureLoader = new THREE.TextureLoader(gltfLoadingManager)\n    g_texture_loader = textureLoader\n\n    //Load smaa images\n    const smaaImageLoader = new POSTPROCESSING.SMAAImageLoader(\n      gltfLoadingManager\n    )\n    smaaImageLoader.load(([search, area]) => {\n      smaaSearchImage = search\n      smaaAreaImage = area\n      composer = Composer(\n        renderer,\n        scene,\n        camera,\n        smaaSearchImage,\n        smaaAreaImage\n      )\n    })\n\n    //Load env map\n    g_rgbe_loader = new RGBELoader(gltfLoadingManager)\n\n    /**\n     * RenderEvent & Dispose\n     */\n    renderer.render(scene, camera)\n    cameraController.addEventListener(\"change\", requestRenderIfNotRequested)\n    window.addEventListener(\"resize\", requestRenderIfNotRequested)\n    return () => {\n      cameraController.removeEventListener(\n        \"change\",\n        requestRenderIfNotRequested\n      )\n      window.removeEventListener(\"resize\", requestRenderIfNotRequested)\n      if (canvasContainer.current) canvasContainer.current.innerHTML = \"\"\n    }\n  }, [])\n\n  useEffect(() => {\n    setCurrentNodeData(null)\n\n    //Set env\n    if (productStore.productData) {\n      g_rgbe_loader\n        .setDataType(THREE.UnsignedByteType)\n        .load(productStore.productData.envMap, texture => {\n          const pg = new PMREMGenerator(g_render)\n          pg.compileEquirectangularShader()\n          const envMap = pg.fromEquirectangular(texture).texture\n          g_scene.environment = envMap\n          // g_scene.background = envMap\n          texture.dispose()\n          pg.dispose()\n        })\n    }\n\n    //Clear\n    g_model_root.children.forEach(node => {\n      node.children.forEach(child => {\n        child.geometry.dispose()\n        child.material.dispose()\n        node.remove(child)\n      })\n      g_model_root.remove(node)\n    })\n    g_model_root.children = []\n\n    //Load models\n    if (productStore.productData) {\n      g_is_load_model = true\n      g_gltf_loader.load(\n        productStore.productData[productStore.currentDracoVersion],\n        gltf => {\n          if (gltf.scene) {\n            //Get gltf mesh\n            const gltfMeshes = []\n            gltf.scene.traverse(child => {\n              if (child.type === \"Mesh\") {\n                child.castShadow = true\n                \n                gltfMeshes.push(child)\n\n              }\n\n              \n\n            })\n\n            //Generate the model structure\n            productStore.productData.nodes.forEach(node => {\n              const pivot = new THREE.Object3D()\n              pivot.name = node.id\n              node.candidateMeshes.forEach(json => {\n                const gltfMesh = gltfMeshes.find(mesh => mesh.name === json.id)\n                if (gltfMesh) {\n                  gltfMesh.visible = gltfMesh.name === node.defaultMesh\n                  pivot.add(gltfMesh)\n                }\n              })\n              g_model_root.add(pivot)\n            })\n\n            //Set data for selected mesh\n            const meshData = []\n            productStore.productData.nodes.forEach(node => {\n              meshData.push({nodeId: node.id, meshId: node.defaultMesh})\n            })\n            setSelectedMeshData(meshData)\n\n            //Set default material\n            g_model_root.children.forEach(child => {\n              const material = new THREE.MeshStandardMaterial({\n                color: \"#363636\"\n              })\n              material.envMap = g_scene.environment\n              child.material = material\n\n              const materialData = productStore.productData.nodes.find(\n                node => node.id === child.name\n              )?.defaultMaterial\n              fetchMaterialData(materialData?.path).then(data => {\n                setNodeMaterial(child, data)\n              })\n            })\n          }\n        }\n      )\n    }\n    g_render_scene()\n  }, [productStore.productData, productStore.currentDracoVersion])\n\n  useEffect(() => {\n    if (g_selected_node) {\n      // g_selected_node.material.color.set(g_selected_node.originColor)\n      g_selected_node = null\n      setSelectedMeshMaterial(null)\n    }\n\n    \n    g_model_root?.traverse(child => {\n      if (\n        child.type === \"Object3D\" &&\n        child.name === nodeStore.currentNodeData?.id\n      ) {\n        g_selected_node = child\n        setSelectedMeshMaterial(child.material.name)\n        // g_selected_node.originColor = new THREE.Color(\n        //   g_selected_node.material.color.r,\n        //   g_selected_node.material.color.g,\n        //   g_selected_node.material.color.b\n        // )\n        // g_selected_node.material.color.set(0xff0000)\n      }\n    })\n    g_render_scene()\n  }, [nodeStore.currentNodeData])\n\n  useEffect(() => {\n    if (g_selected_node && meshStore.selectedMeshData) {\n      const d = meshStore.selectedMeshData.find(\n        data => data.nodeId === g_selected_node.name\n      )\n      if (d) {\n        g_selected_node.children.forEach(child => {\n          child.visible = child.name === d.meshId\n        })\n      }\n    }\n\n    g_render_scene()\n  }, [meshStore.selectedMeshData])\n\n\n  \n\n  useEffect(() => {\n    \n    setNodeMaterial(g_selected_node, materialStore.currentMaterialData)\n  }, [materialStore.currentMaterialData])\n\n  return (\n    <>\n      <ToggleDisplay if={showLoader}>\n        <Loader />\n      </ToggleDisplay>\n      <div className={styles.canvasContainer} ref={canvasContainer}></div>\n\n      \n\n      <Button variant=\"contained\"  style={{ maxWidth: '150px', maxHeight: '100px', minWidth: '50px', minHeight: '50px', position: \"absolute\", right: \"0\", bottom:\"0\", margin:\"0px 20px 20px 0px\" , color:\"white\", backgroundColor: \"#C53617\"}} >Checkout</Button>\n      <h1 >Total: 500$</h1>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  materialStore: state.materialStore,\n  meshStore: state.meshStore,\n  nodeStore: state.nodeStore,\n  productStore: state.productStore,\n  setSelectedMeshData: PropTypes.func.isRequired,\n  setSelectedMeshMaterial: PropTypes.func.isRequired,\n  setCurrentNodeData: PropTypes.func.isRequired\n})\n\nexport default connect(mapStateToProps, {\n  setSelectedMeshData,\n  setSelectedMeshMaterial,\n  setCurrentNodeData\n})(Viewer3D)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Material } from './Material.js';\nimport { MultiplyOperation } from '../constants.js';\nimport { Color } from '../math/Color.js';\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nclass MeshBasicMaterial extends Material {\n  constructor(parameters) {\n    super();\n    this.type = 'MeshBasicMaterial';\n    this.color = new Color(0xffffff); // emissive\n\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    super.copy(source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    return this;\n  }\n\n}\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\nexport { MeshBasicMaterial };","map":{"version":3,"names":["Material","MultiplyOperation","Color","MeshBasicMaterial","constructor","parameters","type","color","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","specularMap","alphaMap","envMap","combine","reflectivity","refractionRatio","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","morphTargets","setValues","copy","source","prototype","isMeshBasicMaterial"],"sources":["/Users/sam/Documents/CakeProject/node_modules/three/src/materials/MeshBasicMaterial.js"],"sourcesContent":["import { Material } from './Material.js';\nimport { MultiplyOperation } from '../constants.js';\nimport { Color } from '../math/Color.js';\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nexport { MeshBasicMaterial };\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,eAAzB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,iBAAN,SAAgCH,QAAhC,CAAyC;EAExCI,WAAW,CAAEC,UAAF,EAAe;IAEzB;IAEA,KAAKC,IAAL,GAAY,mBAAZ;IAEA,KAAKC,KAAL,GAAa,IAAIL,KAAJ,CAAW,QAAX,CAAb,CANyB,CAMW;;IAEpC,KAAKM,GAAL,GAAW,IAAX;IAEA,KAAKC,QAAL,GAAgB,IAAhB;IACA,KAAKC,iBAAL,GAAyB,GAAzB;IAEA,KAAKC,KAAL,GAAa,IAAb;IACA,KAAKC,cAAL,GAAsB,GAAtB;IAEA,KAAKC,WAAL,GAAmB,IAAnB;IAEA,KAAKC,QAAL,GAAgB,IAAhB;IAEA,KAAKC,MAAL,GAAc,IAAd;IACA,KAAKC,OAAL,GAAef,iBAAf;IACA,KAAKgB,YAAL,GAAoB,CAApB;IACA,KAAKC,eAAL,GAAuB,IAAvB;IAEA,KAAKC,SAAL,GAAiB,KAAjB;IACA,KAAKC,kBAAL,GAA0B,CAA1B;IACA,KAAKC,gBAAL,GAAwB,OAAxB;IACA,KAAKC,iBAAL,GAAyB,OAAzB;IAEA,KAAKC,QAAL,GAAgB,KAAhB;IACA,KAAKC,YAAL,GAAoB,KAApB;IAEA,KAAKC,SAAL,CAAgBpB,UAAhB;EAEA;;EAEDqB,IAAI,CAAEC,MAAF,EAAW;IAEd,MAAMD,IAAN,CAAYC,MAAZ;IAEA,KAAKpB,KAAL,CAAWmB,IAAX,CAAiBC,MAAM,CAACpB,KAAxB;IAEA,KAAKC,GAAL,GAAWmB,MAAM,CAACnB,GAAlB;IAEA,KAAKC,QAAL,GAAgBkB,MAAM,CAAClB,QAAvB;IACA,KAAKC,iBAAL,GAAyBiB,MAAM,CAACjB,iBAAhC;IAEA,KAAKC,KAAL,GAAagB,MAAM,CAAChB,KAApB;IACA,KAAKC,cAAL,GAAsBe,MAAM,CAACf,cAA7B;IAEA,KAAKC,WAAL,GAAmBc,MAAM,CAACd,WAA1B;IAEA,KAAKC,QAAL,GAAgBa,MAAM,CAACb,QAAvB;IAEA,KAAKC,MAAL,GAAcY,MAAM,CAACZ,MAArB;IACA,KAAKC,OAAL,GAAeW,MAAM,CAACX,OAAtB;IACA,KAAKC,YAAL,GAAoBU,MAAM,CAACV,YAA3B;IACA,KAAKC,eAAL,GAAuBS,MAAM,CAACT,eAA9B;IAEA,KAAKC,SAAL,GAAiBQ,MAAM,CAACR,SAAxB;IACA,KAAKC,kBAAL,GAA0BO,MAAM,CAACP,kBAAjC;IACA,KAAKC,gBAAL,GAAwBM,MAAM,CAACN,gBAA/B;IACA,KAAKC,iBAAL,GAAyBK,MAAM,CAACL,iBAAhC;IAEA,KAAKC,QAAL,GAAgBI,MAAM,CAACJ,QAAvB;IACA,KAAKC,YAAL,GAAoBG,MAAM,CAACH,YAA3B;IAEA,OAAO,IAAP;EAEA;;AAxEuC;;AA4EzCrB,iBAAiB,CAACyB,SAAlB,CAA4BC,mBAA5B,GAAkD,IAAlD;AAEA,SAAS1B,iBAAT"},"metadata":{},"sourceType":"module"}